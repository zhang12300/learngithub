###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        14/Mar/2018  19:12:14
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\VirtualScope.c
#    Command line =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\VirtualScope.c
#        -D IAR -D TWR_K60N512 -lCN
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -lB
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -o
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Component_H\
#        -I E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Frame_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Function_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\SD_H\ -Ol
#        --use_c++_inline
#    List file    =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\VirtualScope.lst
#    Object file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\VirtualScope.o
#
###############################################################################

E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\VirtualScope.c
      1          /******************************************************************************/
      2          /*******************************************************************************
      3            文件名：虚拟示波器C文件VirtualScope.c
      4            功  能：给虚拟示波器发送数据
      5            日  期：2014.11.18
      6            作  者：
      7            备  注：
      8          *******************************************************************************/
      9          /******************************************************************************/
     10          
     11          #include "VirtualScope.h"
     12          

   \                                 In section .bss, align 2
     13          int16 ErrorCountNow6 = 0;
   \                     ErrorCountNow6:
   \   00000000                      DS8 2
     14          

   \                                 In section .bss, align 4
     15          uint32 tic1;  //计时用起始数，记录定时器的值。
   \                     tic1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          uint32 toc1;  //计时用终止数，记录定时器的值。
   \                     toc1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          uint32 tic2;  //计时用起始数，记录定时器的值。
   \                     tic2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          uint32 toc2;  //计时用终止数，记录定时器的值。
   \                     toc2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          uint32 tic3;  //计时用起始数，记录定时器的值。
   \                     tic3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          uint32 toc3;  //计时用终止数，记录定时器的值。
   \                     toc3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          uint32 tic4;  //计时用起始数，记录定时器的值。
   \                     tic4:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          uint32 toc4;  //计时用终止数，记录定时器的值。
   \                     toc4:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          uint32 tic5;  //计时用起始数，记录定时器的值。
   \                     tic5:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          uint32 toc5;  //计时用终止数，记录定时器的值。
   \                     toc5:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          uint32 tic6;  //计时用起始数，记录定时器的值。
   \                     tic6:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     26          uint32 toc6;  //计时用终止数，记录定时器的值。
   \                     toc6:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     27          uint32 tic7;  //计时用起始数，记录定时器的值。
   \                     tic7:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     28          uint32 toc7;  //计时用终止数，记录定时器的值。
   \                     toc7:
   \   00000000                      DS8 4
     29          
     30          

   \                                 In section .bss, align 4
     31          uint8 uSendBuf[UartDataNum*2]={0};
   \                     uSendBuf:
   \   00000000                      DS8 36

   \                                 In section .data, align 1
     32          uint8 FreeCarsDataNum=UartDataNum*2;
   \                     FreeCarsDataNum:
   \   00000000   0x22               DC8 34
     33          

   \                                 In section .bss, align 4
     34          float VirtualOutData[4] = { 0 };
   \                     VirtualOutData:
   \   00000000                      DS8 16
     35          

   \                                 In section .text, align 2, keep-with-next
     36          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
     37          {
   \                     CRC_CHECK: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     38              unsigned short CRC_Temp;
     39              unsigned char i,j;
     40              CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
     41          
     42              for (i=0;i<CRC_CNT; i++){      
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1: (+1)
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0: (+1)
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x428B             CMP      R3,R1
   \   00000012   0xD213             BCS.N    ??CRC_CHECK_2
     43                  CRC_Temp ^= Buf[i];
   \   00000014   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000016   0x5C1C             LDRB     R4,[R3, R0]
   \   00000018   0x4062             EORS     R2,R4,R2
     44                  for (j=0;j<8;j++) {
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE002             B.N      ??CRC_CHECK_3
     45                      if (CRC_Temp & 0x01)
     46                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
     47                      else
     48                          CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x0852             LSRS     R2,R2,#+1
   \                     ??CRC_CHECK_5: (+1)
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3: (+1)
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C08             CMP      R4,#+8
   \   00000028   0xDAEF             BGE.N    ??CRC_CHECK_1
   \   0000002A   0x07D5             LSLS     R5,R2,#+31
   \   0000002C   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x0852             LSRS     R2,R2,#+1
   \   00000032   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   00000036   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003A   0xE7F2             B.N      ??CRC_CHECK_5
     49                  }
     50              }
     51              return(CRC_Temp);
   \                     ??CRC_CHECK_2: (+1)
   \   0000003C   0x0010             MOVS     R0,R2
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR               ;; return
     52          }
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void VirtualOutPut_Data(void)
     55          {
   \                     VirtualOutPut_Data: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
     56            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     57            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
     58            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
     59            unsigned char i;
     60            unsigned short CRC16 = 0;
   \   00000020   0x2000             MOVS     R0,#+0
     61            for(i=0;i<4;i++)
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0xE013             B.N      ??VirtualOutPut_Data_0
     62             {
     63              
     64              temp[i]  = (int)VirtualOutData[i];
   \                     ??VirtualOutPut_Data_1: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000030   0x.... 0x....      BL       __aeabi_f2iz
   \   00000034   0xA907             ADD      R1,SP,#+28
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
     65              temp1[i] = (unsigned int)temp[i];
   \   0000003C   0xA807             ADD      R0,SP,#+28
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000044   0xA903             ADD      R1,SP,#+12
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
     66              
     67             }
   \   0000004C   0x1C64             ADDS     R4,R4,#+1
   \                     ??VirtualOutPut_Data_0: (+1)
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x2C04             CMP      R4,#+4
   \   00000052   0xDBE8             BLT.N    ??VirtualOutPut_Data_1
     68             
     69            for(i=0;i<4;i++) 
   \   00000054   0x2400             MOVS     R4,#+0
   \   00000056   0xE018             B.N      ??VirtualOutPut_Data_2
     70            {
     71              databuf[i*2]   = (unsigned char)(temp1[i]%256);
   \                     ??VirtualOutPut_Data_3: (+1)
   \   00000058   0xA803             ADD      R0,SP,#+12
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000060   0xF44F 0x7180      MOV      R1,#+256
   \   00000064   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000068   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000006C   0xA800             ADD      R0,SP,#+0
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0xF800 0x2014      STRB     R2,[R0, R4, LSL #+1]
     72              databuf[i*2+1] = (unsigned char)(temp1[i]/256);
   \   00000074   0xA803             ADD      R0,SP,#+12
   \   00000076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000078   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000007C   0x0A00             LSRS     R0,R0,#+8
   \   0000007E   0xA900             ADD      R1,SP,#+0
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   00000086   0x7048             STRB     R0,[R1, #+1]
     73            }
   \   00000088   0x1C64             ADDS     R4,R4,#+1
   \                     ??VirtualOutPut_Data_2: (+1)
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x2C04             CMP      R4,#+4
   \   0000008E   0xDBE3             BLT.N    ??VirtualOutPut_Data_3
     74            
     75            CRC16 = CRC_CHECK(databuf,8);
   \   00000090   0x2108             MOVS     R1,#+8
   \   00000092   0xA800             ADD      R0,SP,#+0
   \   00000094   0x.... 0x....      BL       CRC_CHECK
     76            databuf[8] = CRC16%256;
   \   00000098   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009A   0xF44F 0x7180      MOV      R1,#+256
   \   0000009E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000A2   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000A6   0xF88D 0x2008      STRB     R2,[SP, #+8]
     77            databuf[9] = CRC16/256;
   \   000000AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AC   0xF44F 0x7180      MOV      R1,#+256
   \   000000B0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B4   0xF88D 0x0009      STRB     R0,[SP, #+9]
     78            
     79            for(i=0;i<10;i++)
   \   000000B8   0x2400             MOVS     R4,#+0
   \   000000BA   0xE006             B.N      ??VirtualOutPut_Data_4
     80            uart_send1(UART0,databuf[i]);
   \                     ??VirtualOutPut_Data_5: (+1)
   \   000000BC   0xA800             ADD      R0,SP,#+0
   \   000000BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C0   0x5C21             LDRB     R1,[R4, R0]
   \   000000C2   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   000000C4   0x.... 0x....      BL       uart_send1
   \   000000C8   0x1C64             ADDS     R4,R4,#+1
   \                     ??VirtualOutPut_Data_4: (+1)
   \   000000CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CC   0x2C0A             CMP      R4,#+10
   \   000000CE   0xDBF5             BLT.N    ??VirtualOutPut_Data_5
     81          }
   \   000000D0   0xB00C             ADD      SP,SP,#+48
   \   000000D2   0xBD10             POP      {R4,PC}          ;; return
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void VirtualScopeSend(void)
     84          {
   \                     VirtualScopeSend: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     85            float temp1;  
     86            float temp2; 
     87            float temp3;
     88          
     89            if(tic1 > toc1)
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable4_3
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD20B             BCS.N    ??VirtualScopeSend_0
     90            {
     91              temp1 = (tic1 - toc1) / 75 ;
   \   0000000E   0x....             LDR.N    R0,??DataTable4_3
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable4_2
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x1A40             SUBS     R0,R0,R1
   \   00000018   0x214B             MOVS     R1,#+75
   \   0000001A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000022   0x0004             MOVS     R4,R0
   \   00000024   0xE000             B.N      ??VirtualScopeSend_1
     92            }
     93            else
     94            {
     95              temp1 = 100;
   \                     ??VirtualScopeSend_0: (+1)
   \   00000026   0x....             LDR.N    R4,??DataTable4_4  ;; 0x42c80000
     96            }
     97            
     98            if(tic2 > toc2)
   \                     ??VirtualScopeSend_1: (+1)
   \   00000028   0x....             LDR.N    R0,??DataTable4_5
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x....             LDR.N    R1,??DataTable4_6
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x4288             CMP      R0,R1
   \   00000032   0xD20B             BCS.N    ??VirtualScopeSend_2
     99            {
    100              temp2 = (tic2 - toc2) / 75;
   \   00000034   0x....             LDR.N    R0,??DataTable4_6
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable4_5
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \   0000003E   0x214B             MOVS     R1,#+75
   \   00000040   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000044   0x.... 0x....      BL       __aeabi_ui2f
   \   00000048   0x0005             MOVS     R5,R0
   \   0000004A   0xE000             B.N      ??VirtualScopeSend_3
    101            }
    102            else
    103            {
    104              temp2 = 100;
   \                     ??VirtualScopeSend_2: (+1)
   \   0000004C   0x....             LDR.N    R5,??DataTable4_4  ;; 0x42c80000
    105            }
    106            
    107            if(tic3 > toc3)
   \                     ??VirtualScopeSend_3: (+1)
   \   0000004E   0x....             LDR.N    R0,??DataTable4_7
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x....             LDR.N    R1,??DataTable4_8
   \   00000054   0x6809             LDR      R1,[R1, #+0]
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD20A             BCS.N    ??VirtualScopeSend_4
    108            {
    109              temp3 = (tic3 - toc3) / 75;
   \   0000005A   0x....             LDR.N    R0,??DataTable4_8
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x....             LDR.N    R1,??DataTable4_7
   \   00000060   0x6809             LDR      R1,[R1, #+0]
   \   00000062   0x1A40             SUBS     R0,R0,R1
   \   00000064   0x214B             MOVS     R1,#+75
   \   00000066   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000006A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000006E   0xE000             B.N      ??VirtualScopeSend_5
    110            }
    111            else
    112            {
    113              temp3 = 100;
   \                     ??VirtualScopeSend_4: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable4_4  ;; 0x42c80000
    114            }
    115            
    116            //ServoPercent = 
    117            
    118          /*
    119            VirtualOutData[0] = PathType;                  //赛道类型 0未知 1直道 2左内 3左中 4左外 5右内 6右中 7右外
    120            VirtualOutData[1] = CURVEL;                    //左黑线的曲率，因为基于的点数会变化，所以有可能变化很大。
    121            VirtualOutData[2] = CURVEC;                    //中心线的曲率，因为基于的点数会变化，所以有可能变化很大。
    122            VirtualOutData[3] = CURVER;                    //右黑线的曲率，因为基于的点数会变化，所以有可能变化很大。
    123              */
    124          /*
    125            VirtualOutData[0] = DeviRowChosen;                   //偏差求取时，选中的行号。
    126            VirtualOutData[1] = CenterLineLoc[DeviRowChosen];    //偏差求取时，选中的行号对应的中心线的值。
    127            VirtualOutData[2] = BlackLeftLoc[DeviRowChosen][0];  //偏差求取时，选中的行号对应的左黑线的值。
    128            VirtualOutData[3] = BlackRightLoc[DeviRowChosen][0]; //偏差求取时，选中的行号对应的右黑线的值。
    129            */
    130              /*
    131            VirtualOutData[0] = temp1;                      //采集图像所花的时间，单位为ms
    132            VirtualOutData[1] = temp2;                      //处理图像和反馈控制所花的总时间，单位为ms
    133            VirtualOutData[2] = DeviNow;                    //当前偏差。
    134            VirtualOutData[3] = ServoPercent;               //舵机打角的百分值，取值从-100到+100，左右不对称，左正右负。
    135          */
    136            /*
    137            VirtualOutData[0] = PathType;                 
    138            VirtualOutData[1] = SpeedFlag;                    
    139            VirtualOutData[2] = DeviNow;                    
    140            VirtualOutData[3] = ServoPercent;                   
    141            */
    142            
    143            VirtualOutData[0] = temp1;        
   \                     ??VirtualScopeSend_5: (+1)
   \   00000072   0x....             LDR.N    R1,??DataTable4
   \   00000074   0x600C             STR      R4,[R1, #+0]
    144            VirtualOutData[1] = temp2;
   \   00000076   0x....             LDR.N    R1,??DataTable4
   \   00000078   0x604D             STR      R5,[R1, #+4]
    145            VirtualOutData[2] = temp3;
   \   0000007A   0x....             LDR.N    R1,??DataTable4
   \   0000007C   0x6088             STR      R0,[R1, #+8]
    146            VirtualOutData[3] = SlopeC;
   \   0000007E   0x....             LDR.N    R0,??DataTable4_9
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_i2f
   \   00000086   0x....             LDR.N    R1,??DataTable4
   \   00000088   0x60C8             STR      R0,[R1, #+12]
    147            
    148            VirtualOutPut_Data();
   \   0000008A   0x.... 0x....      BL       VirtualOutPut_Data
    149          }
   \   0000008E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    150          

   \                                 In section .text, align 2, keep-with-next
    151          void Virtual2DataPush(uint8 chanel,uint16 data)
    152          {
    153              uSendBuf[chanel*2]=data/256;
   \                     Virtual2DataPush: (+1)
   \   00000000   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000002   0xF44F 0x7280      MOV      R2,#+256
   \   00000006   0xFB91 0xF2F2      SDIV     R2,R1,R2
   \   0000000A   0x....             LDR.N    R3,??DataTable4_10
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0xF803 0x2010      STRB     R2,[R3, R0, LSL #+1]
    154              uSendBuf[chanel*2+1]=data%256;
   \   00000012   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000014   0xF44F 0x7280      MOV      R2,#+256
   \   00000018   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   0000001C   0xFB03 0x1312      MLS      R3,R3,R2,R1
   \   00000020   0x....             LDR.N    R1,??DataTable4_10
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000028   0x7043             STRB     R3,[R0, #+1]
    155          }
   \   0000002A   0x4770             BX       LR               ;; return
    156          
    157          

   \                                 In section .text, align 2, keep-with-next
    158          void Virtual2Send(void)
    159          {
   \                     Virtual2Send: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    160            uint8 i,sum=0; 
   \   00000002   0x2500             MOVS     R5,#+0
    161            //使用轮询的方式发送数据，当数据未发送，程序停在此处直到发送完成
    162            uart_send1(UART0,251);
   \   00000004   0x21FB             MOVS     R1,#+251
   \   00000006   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   00000008   0x.... 0x....      BL       uart_send1
    163            uart_send1(UART0,109);
   \   0000000C   0x216D             MOVS     R1,#+109
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   00000010   0x.... 0x....      BL       uart_send1
    164            uart_send1(UART0,37);
   \   00000014   0x2125             MOVS     R1,#+37
   \   00000016   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   00000018   0x.... 0x....      BL       uart_send1
    165            sum+=(251);      //全部数据加入校验
   \   0000001C   0x1F6D             SUBS     R5,R5,#+5
    166            sum+=(109);
   \   0000001E   0x356D             ADDS     R5,R5,#+109
    167            sum+=(37);
   \   00000020   0x3525             ADDS     R5,R5,#+37
    168            for(i=0;i<FreeCarsDataNum;i++)
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0xE00A             B.N      ??Virtual2Send_0
    169            {
    170              uart_send1(UART0,uSendBuf[i]);
   \                     ??Virtual2Send_1: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable4_10
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x5C21             LDRB     R1,[R4, R0]
   \   0000002C   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   0000002E   0x.... 0x....      BL       uart_send1
    171              sum+=uSendBuf[i];         //全部数据加入校验
   \   00000032   0x....             LDR.N    R0,??DataTable4_10
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x5C20             LDRB     R0,[R4, R0]
   \   00000038   0x1945             ADDS     R5,R0,R5
    172            }
   \   0000003A   0x1C64             ADDS     R4,R4,#+1
   \                     ??Virtual2Send_0: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable4_11
   \   0000003E   0x7800             LDRB     R0,[R0, #+0]
   \   00000040   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000042   0x4284             CMP      R4,R0
   \   00000044   0xD3EF             BCC.N    ??Virtual2Send_1
    173            uart_send1(UART0,sum);
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   0000004C   0x.... 0x....      BL       uart_send1
    174          }
   \   00000050   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    175          
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void Virtual2SendData(void)
    178          {
   \                     Virtual2SendData: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    179            uint16 temp1, temp2, temp3, temp4, temp5, temp6, temp7;
    180              
    181            ErrorCountNow6++;
   \   00000002   0x....             LDR.N    R0,??DataTable4_12
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable4_12
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
    182            
    183            
    184            if(tic1 > toc1)
   \   0000000C   0x....             LDR.N    R0,??DataTable4_2
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR.N    R1,??DataTable4_3
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD208             BCS.N    ??Virtual2SendData_0
    185            {
    186              temp1 = (tic1 - toc1) / 75000;
   \   00000018   0x....             LDR.N    R0,??DataTable4_3
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x....             LDR.N    R1,??DataTable4_2
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x1A40             SUBS     R0,R0,R1
   \   00000022   0x....             LDR.N    R1,??DataTable4_13  ;; 0x124f8
   \   00000024   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000028   0xE000             B.N      ??Virtual2SendData_1
    187            }
    188            else
    189            {
    190              temp1 = 50;
   \                     ??Virtual2SendData_0: (+1)
   \   0000002A   0x2032             MOVS     R0,#+50
    191            }  
    192            
    193            
    194            if(tic2 > toc2)
   \                     ??Virtual2SendData_1: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable4_5
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x....             LDR.N    R1,??DataTable4_6
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x4288             CMP      R0,R1
   \   00000036   0xD208             BCS.N    ??Virtual2SendData_2
    195            {
    196              temp2 = (tic2 - toc2) / 75000;
   \   00000038   0x....             LDR.N    R0,??DataTable4_6
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x....             LDR.N    R1,??DataTable4_5
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x1A40             SUBS     R0,R0,R1
   \   00000042   0x....             LDR.N    R1,??DataTable4_13  ;; 0x124f8
   \   00000044   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000048   0xE000             B.N      ??Virtual2SendData_3
    197            }
    198            else
    199            {
    200              temp2 = 50;
   \                     ??Virtual2SendData_2: (+1)
   \   0000004A   0x2032             MOVS     R0,#+50
    201            }
    202            
    203            if(tic3 > toc3)
   \                     ??Virtual2SendData_3: (+1)
   \   0000004C   0x....             LDR.N    R0,??DataTable4_7
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x....             LDR.N    R1,??DataTable4_8
   \   00000052   0x6809             LDR      R1,[R1, #+0]
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xD208             BCS.N    ??Virtual2SendData_4
    204            {
    205              temp3 = (tic3 - toc3) / 75000;
   \   00000058   0x....             LDR.N    R0,??DataTable4_8
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x....             LDR.N    R1,??DataTable4_7
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x1A40             SUBS     R0,R0,R1
   \   00000062   0x....             LDR.N    R1,??DataTable4_13  ;; 0x124f8
   \   00000064   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000068   0xE000             B.N      ??Virtual2SendData_5
    206            }
    207            else
    208            {
    209              temp3 = 50;
   \                     ??Virtual2SendData_4: (+1)
   \   0000006A   0x2032             MOVS     R0,#+50
    210            }  
    211          
    212            if(tic4 > toc4)
   \                     ??Virtual2SendData_5: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable4_14
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x....             LDR.N    R1,??DataTable4_15
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xD208             BCS.N    ??Virtual2SendData_6
    213            {
    214              temp4 = (tic4 - toc4) / 75000;
   \   00000078   0x....             LDR.N    R0,??DataTable4_15
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x....             LDR.N    R1,??DataTable4_14
   \   0000007E   0x6809             LDR      R1,[R1, #+0]
   \   00000080   0x1A40             SUBS     R0,R0,R1
   \   00000082   0x....             LDR.N    R1,??DataTable4_13  ;; 0x124f8
   \   00000084   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000088   0xE000             B.N      ??Virtual2SendData_7
    215            }
    216            else
    217            {
    218              temp4 = 50;
   \                     ??Virtual2SendData_6: (+1)
   \   0000008A   0x2032             MOVS     R0,#+50
    219            }
    220            
    221            if(tic5 > toc5)
   \                     ??Virtual2SendData_7: (+1)
   \   0000008C   0x....             LDR.N    R0,??DataTable4_16
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x....             LDR.N    R1,??DataTable4_17
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xD208             BCS.N    ??Virtual2SendData_8
    222            {
    223              temp5 = (tic5 - toc5) / 75000;
   \   00000098   0x....             LDR.N    R0,??DataTable4_17
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x....             LDR.N    R1,??DataTable4_16
   \   0000009E   0x6809             LDR      R1,[R1, #+0]
   \   000000A0   0x1A40             SUBS     R0,R0,R1
   \   000000A2   0x....             LDR.N    R1,??DataTable4_13  ;; 0x124f8
   \   000000A4   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000000A8   0xE000             B.N      ??Virtual2SendData_9
    224            }
    225            else
    226            {
    227              temp5 = 50;
   \                     ??Virtual2SendData_8: (+1)
   \   000000AA   0x2032             MOVS     R0,#+50
    228            }
    229            
    230            if(tic6 > toc6)
   \                     ??Virtual2SendData_9: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable4_18
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x....             LDR.N    R1,??DataTable4_19
   \   000000B2   0x6809             LDR      R1,[R1, #+0]
   \   000000B4   0x4288             CMP      R0,R1
   \   000000B6   0xD208             BCS.N    ??Virtual2SendData_10
    231            {
    232              temp6 = (tic6 - toc6) / 75;
   \   000000B8   0x....             LDR.N    R0,??DataTable4_19
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x....             LDR.N    R1,??DataTable4_18
   \   000000BE   0x6809             LDR      R1,[R1, #+0]
   \   000000C0   0x1A40             SUBS     R0,R0,R1
   \   000000C2   0x214B             MOVS     R1,#+75
   \   000000C4   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000000C8   0xE000             B.N      ??Virtual2SendData_11
    233            }
    234            else
    235            {
    236              temp6 = 50;
   \                     ??Virtual2SendData_10: (+1)
   \   000000CA   0x2032             MOVS     R0,#+50
    237            }
    238            
    239            if(tic7 > toc7)
   \                     ??Virtual2SendData_11: (+1)
   \   000000CC   0x....             LDR.N    R0,??DataTable4_20
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x....             LDR.N    R1,??DataTable4_21
   \   000000D2   0x6809             LDR      R1,[R1, #+0]
   \   000000D4   0x4288             CMP      R0,R1
   \   000000D6   0xD208             BCS.N    ??Virtual2SendData_12
    240            {
    241              temp7 = (tic7 - toc7) / 75;
   \   000000D8   0x....             LDR.N    R0,??DataTable4_21
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x....             LDR.N    R1,??DataTable4_20
   \   000000DE   0x6809             LDR      R1,[R1, #+0]
   \   000000E0   0x1A40             SUBS     R0,R0,R1
   \   000000E2   0x214B             MOVS     R1,#+75
   \   000000E4   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000000E8   0xE000             B.N      ??Virtual2SendData_13
    242            }
    243            else
    244            {
    245              temp7 = 50;
   \                     ??Virtual2SendData_12: (+1)
   \   000000EA   0x2032             MOVS     R0,#+50
    246            }
    247              
    248            
    249            Virtual2DataPush( 0, ServoPIDInputVal-1000);
   \                     ??Virtual2SendData_13: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable4_22
   \   000000EE   0x6800             LDR      R0,[R0, #+0]
   \   000000F0   0xF5B0 0x717A      SUBS     R1,R0,#+1000
   \   000000F4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x.... 0x....      BL       Virtual2DataPush
    250            Virtual2DataPush( 1, SpeedLeftVal);
   \   000000FC   0x....             LDR.N    R0,??DataTable4_23
   \   000000FE   0x6801             LDR      R1,[R0, #+0]
   \   00000100   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000102   0x2001             MOVS     R0,#+1
   \   00000104   0x.... 0x....      BL       Virtual2DataPush
    251            Virtual2DataPush( 2, SpeedTargetLeftVal);
   \   00000108   0x....             LDR.N    R0,??DataTable4_24
   \   0000010A   0x8801             LDRH     R1,[R0, #+0]
   \   0000010C   0x2002             MOVS     R0,#+2
   \   0000010E   0x.... 0x....      BL       Virtual2DataPush
    252            Virtual2DataPush( 3, SpeedNowLeft);
   \   00000112   0x....             LDR.N    R0,??DataTable4_25
   \   00000114   0x8801             LDRH     R1,[R0, #+0]
   \   00000116   0x2003             MOVS     R0,#+3
   \   00000118   0x.... 0x....      BL       Virtual2DataPush
    253            Virtual2DataPush( 4, DeviFuse);
   \   0000011C   0x....             LDR.N    R0,??DataTable4_26
   \   0000011E   0x6801             LDR      R1,[R0, #+0]
   \   00000120   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000122   0x2004             MOVS     R0,#+4
   \   00000124   0x.... 0x....      BL       Virtual2DataPush
    254            Virtual2DataPush( 5, DeviFuse-DeviPre);
   \   00000128   0x....             LDR.N    R0,??DataTable4_26
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x....             LDR.N    R1,??DataTable4_27
   \   0000012E   0x6809             LDR      R1,[R1, #+0]
   \   00000130   0x1A41             SUBS     R1,R0,R1
   \   00000132   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000134   0x2005             MOVS     R0,#+5
   \   00000136   0x.... 0x....      BL       Virtual2DataPush
    255            Virtual2DataPush( 6, ShiZhiFlag*200);
   \   0000013A   0x....             LDR.N    R0,??DataTable4_28
   \   0000013C   0x7800             LDRB     R0,[R0, #+0]
   \   0000013E   0x21C8             MOVS     R1,#+200
   \   00000140   0xFB10 0xF101      SMULBB   R1,R0,R1
   \   00000144   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000146   0x2006             MOVS     R0,#+6
   \   00000148   0x.... 0x....      BL       Virtual2DataPush
    256            
    257            Virtual2DataPush( 7, PathType*300);
   \   0000014C   0x....             LDR.N    R0,??DataTable4_29
   \   0000014E   0x7800             LDRB     R0,[R0, #+0]
   \   00000150   0xF44F 0x7196      MOV      R1,#+300
   \   00000154   0xFB10 0xF101      SMULBB   R1,R0,R1
   \   00000158   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000015A   0x2007             MOVS     R0,#+7
   \   0000015C   0x.... 0x....      BL       Virtual2DataPush
    258            Virtual2DataPush( 8, LightHouseWaitStopDelayFlag);
   \   00000160   0x....             LDR.N    R0,??DataTable4_30
   \   00000162   0x7801             LDRB     R1,[R0, #+0]
   \   00000164   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000166   0x2008             MOVS     R0,#+8
   \   00000168   0x.... 0x....      BL       Virtual2DataPush
    259          
    260            Virtual2DataPush( 9, GyroResultFlag);
   \   0000016C   0x....             LDR.N    R0,??DataTable4_31
   \   0000016E   0x7801             LDRB     R1,[R0, #+0]
   \   00000170   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000172   0x2009             MOVS     R0,#+9
   \   00000174   0x.... 0x....      BL       Virtual2DataPush
    261            Virtual2DataPush(10, BrickSpeDealCenFlag * 100);  
   \   00000178   0x....             LDR.N    R0,??DataTable4_32
   \   0000017A   0x7800             LDRB     R0,[R0, #+0]
   \   0000017C   0x2164             MOVS     R1,#+100
   \   0000017E   0xFB10 0xF101      SMULBB   R1,R0,R1
   \   00000182   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000184   0x200A             MOVS     R0,#+10
   \   00000186   0x.... 0x....      BL       Virtual2DataPush
    262            Virtual2DataPush(11, StopFlag);
   \   0000018A   0x....             LDR.N    R0,??DataTable4_33
   \   0000018C   0x7801             LDRB     R1,[R0, #+0]
   \   0000018E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000190   0x200B             MOVS     R0,#+11
   \   00000192   0x.... 0x....      BL       Virtual2DataPush
    263            Virtual2DataPush(12, StopRealFlag);
   \   00000196   0x....             LDR.N    R0,??DataTable4_34
   \   00000198   0x7801             LDRB     R1,[R0, #+0]
   \   0000019A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000019C   0x200C             MOVS     R0,#+12
   \   0000019E   0x.... 0x....      BL       Virtual2DataPush
    264            Virtual2DataPush(13, BrickSpeDealFlag * 100);
   \   000001A2   0x....             LDR.N    R0,??DataTable4_35
   \   000001A4   0x7800             LDRB     R0,[R0, #+0]
   \   000001A6   0x2164             MOVS     R1,#+100
   \   000001A8   0xFB10 0xF101      SMULBB   R1,R0,R1
   \   000001AC   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001AE   0x200D             MOVS     R0,#+13
   \   000001B0   0x.... 0x....      BL       Virtual2DataPush
    265            Virtual2DataPush(14, BrickSpeDealBackCount);  
   \   000001B4   0x....             LDR.N    R0,??DataTable4_36
   \   000001B6   0x7801             LDRB     R1,[R0, #+0]
   \   000001B8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001BA   0x200E             MOVS     R0,#+14
   \   000001BC   0x.... 0x....      BL       Virtual2DataPush
    266            Virtual2DataPush(15, PathRealStraightFlag);
   \   000001C0   0x....             LDR.N    R0,??DataTable4_37
   \   000001C2   0x7801             LDRB     R1,[R0, #+0]
   \   000001C4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001C6   0x200F             MOVS     R0,#+15
   \   000001C8   0x.... 0x....      BL       Virtual2DataPush
    267            Virtual2DataPush(16, PathType);
   \   000001CC   0x....             LDR.N    R0,??DataTable4_29
   \   000001CE   0x7801             LDRB     R1,[R0, #+0]
   \   000001D0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001D2   0x2010             MOVS     R0,#+16
   \   000001D4   0x.... 0x....      BL       Virtual2DataPush
    268           
    269            
    270            
    271          //    Virtual2DataPush( 0, DeviFuse);
    272          //    Virtual2DataPush( 1, ImgProSucceedFlag * 100);
    273          //    Virtual2DataPush( 2, ServoPIDInputVal - ServoPIDCen);
    274          //    Virtual2DataPush( 3, BlackLeftHeadLine);
    275          //    Virtual2DataPush( 4, BlackRightHeadLine);
    276          //    Virtual2DataPush( 5, StopFlag);
    277          //    Virtual2DataPush( 6, SpeedPIDDVal);  
    278          //    Virtual2DataPush( 7, speed_kp);
    279          //    Virtual2DataPush( 8, speed_kd);
    280          //    
    281          //    Virtual2DataPush( 9, SpeedNowLeft);
    282          //    Virtual2DataPush(10, SpeedTargetLeftVal);  
    283          //    Virtual2DataPush(11, SpeedLeftVal);
    284          //    Virtual2DataPush(12, SpeedNowRight);
    285          //    Virtual2DataPush(13, SpeedTargetRightVal);
    286          //    Virtual2DataPush(14, SpeedRightVal);  
    287          //    Virtual2DataPush(15, SpeedRightValP);
    288          //    Virtual2DataPush(16, SpeedRightValD);
    289            
    290             /*
    291            Virtual2DataPush( 0, DeviFuse);
    292            Virtual2DataPush( 1, ImgProSucceedFlag * 100);
    293            Virtual2DataPush( 2, LimitLeftHeadWB);
    294            Virtual2DataPush( 3, LimitLeftHeadB);
    295            Virtual2DataPush( 4, LimitLeftHeadW);
    296            Virtual2DataPush( 5, flag000);
    297            Virtual2DataPush( 6, countcount);
    298            
    299            Virtual2DataPush( 7, CURVEL);
    300            Virtual2DataPush( 8, CURVER);
    301            
    302            Virtual2DataPush( 9, BlackRightHeadLine-BlackLeftHeadLine);
    303            Virtual2DataPush(10, PathType);  
    304            Virtual2DataPush(11, AngleConfirmCount);
    305            Virtual2DataPush(12, AngleConfirmCountMax);
    306            Virtual2DataPush(13, AngleConfirmLockFlag);
    307            Virtual2DataPush(14, AngleSpeDealBackCount);  
    308            Virtual2DataPush(15, AngleSpeDealDir);
    309            Virtual2DataPush(16, BlackRightContinueFlag);
    310             
    311            
    312           
    313           
    314           
    315             Virtual2DataPush( 5, BlackLeftHeadLine);
    316            Virtual2DataPush( 6, BlackRightHeadLine);
    317            
    318            Virtual2DataPush( 7, PathType);
    319            Virtual2DataPush( 8, flag000);
    320          
    321            Virtual2DataPush( 9, flag111);  
    322            Virtual2DataPush(10, temp3);  
    323            Virtual2DataPush(11, AngleConfirmCount);
    324            Virtual2DataPush(12, AngleConfirmCountMax);
    325            Virtual2DataPush(13, AngleConfirmFlag);
    326            Virtual2DataPush(14, AngleSpeDealDir);  
    327            Virtual2DataPush(15, AngleSpeDealBackCount);
    328            Virtual2DataPush(16, AngleSpeDealFlag);
    329          
    330            Virtual2DataPush( 0, DeviFuse);
    331            Virtual2DataPush( 1, ImgProSucceedFlag * 100);
    332            Virtual2DataPush( 2, ServoPIDInputVal-ServoPIDCen);
    333            Virtual2DataPush( 3, QuadRightCount);
    334            Virtual2DataPush( 4, SpeedTargetVal);
    335            Virtual2DataPush( 5, SpeedNowLeft);
    336            Virtual2DataPush( 6, SpeedTargetLeftVal);
    337            
    338            Virtual2DataPush( 7, SpeedLeftVal / 50);
    339            Virtual2DataPush( 8, SpeedNowRight);
    340            Virtual2DataPush( 9, BlackRightLoc[39][0]);
    341            Virtual2DataPush(10, BlackRightLoc[29][0]);  
    342            Virtual2DataPush(11, BlackRightLoc[19][0]);
    343            Virtual2DataPush(12, BlackRightLoc[14][0]);
    344            Virtual2DataPush(13, temptempSpeedLeftVal / 50);
    345            Virtual2DataPush(14, ADResult0);
    346            Virtual2DataPush(15, ADResult1);
    347            Virtual2DataPush(16, ADResult2);
    348            */
    349            
    350            /*
    351            Virtual2DataPush( 9, AngleConfirmFlag);           //直角弯最终确认标志，1确认，0否认
    352            Virtual2DataPush(10, AngleConfirmLockFlag);       //直角弯判断成功锁存标志位,确认是直角弯后置位，用以确认直角弯特殊处理开始的位置。
    353            Virtual2DataPush(11, AngleSpeDealDir);            //直角弯方向标志，0左直角弯，1右直角弯，2错误。
    354            Virtual2DataPush(12, AngleSpeDealBackCount);      //直角弯最终确认后，特殊情况次数的倒数计数。
    355            Virtual2DataPush(13, AngelSpeDealExitJudgeFlag);  //出直角弯判断标志，1已出，0未出
    356            Virtual2DataPush(14, AngleSpeDealFlag);           //1说明该幅图像进行了直角弯的特殊处理,0说明未进行。
    357            Virtual2DataPush(15, AngleConfirmCount);
    358            Virtual2DataPush(16, AngleConfirmCountMax);  
    359            
    360            //Virtual2DataPush(15, BlackLeftEndLine);
    361            //Virtual2DataPush(16, BlackRightEndLine);
    362            Virtual2DataPush(15, SpeedLeftVal);
    363            Virtual2DataPush(16, SpeedRightVal);
    364            Virtual2DataPush( 0, DeviFuse);
    365          
    366            Virtual2DataPush( 1, ImgBlackSucceedFlag * 100);
    367            Virtual2DataPush( 2, ErrorCountNow7);//场中断
    368            
    369            Virtual2DataPush( 3, ErrorCountNow8);     //行中断
    370            Virtual2DataPush( 4, ErrorCountNow9);     //DMA中断   
    371            Virtual2DataPush( 5, ErrorCountNow0);   //SERVO
    372            Virtual2DataPush( 6, ErrorCountNow1);   //MOTOR
    373            Virtual2DataPush( 7, ErrorCountNow5);   //IMAGEPRO
    374            Virtual2DataPush( 8, temp1);   //VIR
    375            Virtual2DataPush( 9, temp2);
    376            Virtual2DataPush(10, temp3);
    377            Virtual2DataPush(11, temp4);
    378            Virtual2DataPush(12, temp5);
    379            Virtual2DataPush(13, temp6);  
    380            Virtual2DataPush(14, temp7);
    381            Virtual2DataPush(15, QuadLeftCount);
    382            Virtual2DataPush(16, QuadRightCount);   
    383          */
    384            
    385           
    386            
    387            Virtual2Send();
   \   000001D8   0x.... 0x....      BL       Virtual2Send
    388          }
   \   000001DC   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     VirtualOutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     toc1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     tic1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     toc2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     tic2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     toc3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     tic3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     SlopeC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     uSendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     FreeCarsDataNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     ErrorCountNow6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x000124F8         DC32     0x124f8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     toc4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     tic4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     toc5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     tic5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     toc6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     tic6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     toc7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     tic7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     ServoPIDInputVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     SpeedLeftVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     SpeedTargetLeftVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     SpeedNowLeft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     DeviFuse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x........         DC32     DeviPre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x........         DC32     ShiZhiFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     PathType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x........         DC32     LightHouseWaitStopDelayFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x........         DC32     GyroResultFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x........         DC32     BrickSpeDealCenFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x........         DC32     StopFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x........         DC32     StopRealFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x........         DC32     BrickSpeDealFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_36:
   \   00000000   0x........         DC32     BrickSpeDealBackCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_37:
   \   00000000   0x........         DC32     PathRealStraightFlag

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CRC_CHECK
       0   Virtual2DataPush
      16   Virtual2Send
        16   -> uart_send1
       8   Virtual2SendData
         8   -> Virtual2DataPush
         8   -> Virtual2Send
      56   VirtualOutPut_Data
        56   -> CRC_CHECK
        56   -> __aeabi_f2iz
        56   -> __aeabi_memclr4
        56   -> uart_send1
      16   VirtualScopeSend
        16   -> VirtualOutPut_Data
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_36
       4  ??DataTable4_37
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      16  ?_0
      16  ?_1
      12  ?_2
      68  CRC_CHECK
       2  ErrorCountNow6
       1  FreeCarsDataNum
      44  Virtual2DataPush
      82  Virtual2Send
     478  Virtual2SendData
      16  VirtualOutData
     212  VirtualOutPut_Data
     144  VirtualScopeSend
       4  tic1
       4  tic2
       4  tic3
       4  tic4
       4  tic5
       4  tic6
       4  tic7
       4  toc1
       4  toc2
       4  toc3
       4  toc4
       4  toc5
       4  toc6
       4  toc7
      36  uSendBuf

 
   110 bytes in section .bss
     1 byte  in section .data
    44 bytes in section .rodata
 1 180 bytes in section .text
 
 1 180 bytes of CODE  memory
    44 bytes of CONST memory
   111 bytes of DATA  memory

Errors: none
Warnings: 7
