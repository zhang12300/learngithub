###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        14/Mar/2018  19:12:11
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\Debug.c
#    Command line =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\Debug.c
#        -D IAR -D TWR_K60N512 -lCN
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -lB
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -o
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Component_H\
#        -I E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Frame_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Function_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\SD_H\ -Ol
#        --use_c++_inline
#    List file    =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\Debug.lst
#    Object file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\Debug.o
#
###############################################################################

E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\Debug.c
      1          /******************************************************************************/
      2          /*******************************************************************************
      3            文件名：调试文件Debug.c
      4            功  能：OLED显示，FLASH参数读写。
      5            日  期：2015.03.13
      6            作  者：HJZ
      7            备  注：
      8          *******************************************************************************/
      9          /******************************************************************************/
     10          
     11          #include "Debug.h"
     12          
     13          
     14          
     15          
     16          
     17          //拨码开关。
     18          //拨码开关确认计数,初始化为0.

   \                                 In section .bss, align 4
     19          uint8 DebugSwitchConfirmCount[SwitchNum] = 
   \                     DebugSwitchConfirmCount:
   \   00000000                      DS8 4
     20          {
     21            0, 0, 0, 0  
     22          };
     23          
     24          //拨码开关标志。1某个方向，0另一个方向。1个16ms周期内即可被确认。

   \                                 In section .bss, align 4
     25          uint8 DebugSwitchFlag[SwitchNum] = 
   \                     DebugSwitchFlag:
   \   00000000                      DS8 4
     26          {
     27            0, 0, 0, 0
     28          };
     29          
     30          
     31          //按键。
     32          //按键确认计数,初始化为0。

   \                                 In section .bss, align 4
     33          uint8 DebugButtonConfirmCount[ButtonNum] = 
   \                     DebugButtonConfirmCount:
   \   00000000                      DS8 8
     34          {
     35            0, 0, 0, 0, 0, 0  
     36          };
     37          //按键标志。1表示连续DebugButtonConfirmNum个16ms周期内被按下，0表示没有。

   \                                 In section .bss, align 4
     38          uint8 DebugButtonFlag[ButtonNum] = 
   \                     DebugButtonFlag:
   \   00000000                      DS8 8
     39          {
     40            0, 0, 0, 0, 0, 0
     41          };
     42          
     43          /*
     44          //需要修改的14个值。
     45          uint16 DebugServoPIDPMat00 = 167;
     46          uint16 DebugServoPIDPMat01 = 195;
     47          uint16 DebugServoPIDPMat02 = 214;
     48          uint16 DebugServoPIDPMat03 = 225;
     49          uint16 DebugServoPIDPMat04 = 231;
     50          uint16 DebugServoPIDPMat05 = 234;
     51          uint16 DebugServoPIDPMat06 = 255;
     52          uint16 DebugServoPIDPMat07 = 235;
     53          uint16 DebugServoPIDPMat08 = 230;
     54          uint16 DebugServoPIDPMat09 = 217;
     55          //3个关键值的上下界
     56          uint8 DebugWMin10 = 160;
     57          uint8 DebugWMax11 = 190;
     58          uint8 DebugBMin12 = 85;
     59          uint8 DebugBMax13 = 140;
     60          uint8 DebugWBMin = 70;
     61          uint8 DebugWBMax = 100;
     62          */
     63          
     64          //需要修改的60个值。每页15个。不需要赋初值，初始化时会从FLASH中读取出来。

   \                                 In section .bss, align 4
     65          uint16 DebugModifyNum[60];
   \                     DebugModifyNum:
   \   00000000                      DS8 120
     66          

   \                                 In section .bss, align 1
     67          uint8 DebugOLEDUpdateCount = 0;       //OLED的刷新频率控制，DebugOLEDUpdateCountNum个16ms刷新一次。
   \                     DebugOLEDUpdateCount:
   \   00000000                      DS8 1
     68          

   \                                 In section .data, align 1
     69          uint8 DebugScreenChosen = DebugScreenChosenDisplay;  //界面选择标志，分显示/调参。
   \                     DebugScreenChosen:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
     70          uint8 DebugDisplayPage = 0;                          //显示界面，页码。0~DebugDisplayPageNum-1
   \                     DebugDisplayPage:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     71          uint8 DebugModifyPage = 0;                           //调参界面，页码。0,1,2.3
   \                     DebugModifyPage:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     72          uint8 DebugModifyCursor = 0;                         //调参界面，光标。0~14.
   \                     DebugModifyCursor:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     73          uint8 DebugModifyCursorPre = 0;                      //调参界面，上一次的光标值，0~14.
   \                     DebugModifyCursorPre:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     74          uint8 DebugModifyFlag = 0;                           //调参界面，修改标志。0表示当前为上下移模式，1表示当前为加减值模式。
   \                     DebugModifyFlag:
   \   00000000                      DS8 1
     75          
     76          //定时跑

   \                                 In section .data, align 2
     77          uint16 TimeRealRun = 100;                         //定时跑时，时间上限。以0.1s为单位。
   \                     TimeRealRun:
   \   00000000   0x0064             DC16 100

   \                                 In section .bss, align 1
     78          uint8 TimeRealRunFlag = 0;                  //定时跑标志。0未跑完，1已跑完。
   \                     TimeRealRunFlag:
   \   00000000                      DS8 1
     79          
     80          //Debug用的引脚的初始化。

   \                                 In section .text, align 2, keep-with-next
     81          uint8 DebugPortInit(void)
     82          {
   \                     DebugPortInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     83            //4个拨码开关IO口初始化
     84            gpio_init(PORTE,6,0,1);                               
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2106             MOVS     R1,#+6
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
     85            gpio_init(PORTE,7,0,1);
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2107             MOVS     R1,#+7
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       gpio_init
     86            gpio_init(PORTE,8,0,1);
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   00000028   0x.... 0x....      BL       gpio_init
     87            gpio_init(PORTE,9,0,1);
   \   0000002C   0x2301             MOVS     R3,#+1
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2109             MOVS     R1,#+9
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   00000036   0x.... 0x....      BL       gpio_init
     88            
     89            //6个按键的初始化
     90            gpio_init(PORTE,0,0,1);  //PTE0,按键0,初始值置1。up上。
   \   0000003A   0x2301             MOVS     R3,#+1
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   00000044   0x.... 0x....      BL       gpio_init
     91            gpio_init(PORTE,1,0,1);  //PTE1,按键1,初始值置1。down下。
   \   00000048   0x2301             MOVS     R3,#+1
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0x2101             MOVS     R1,#+1
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   00000052   0x.... 0x....      BL       gpio_init
     92            gpio_init(PORTE,2,0,1);  //PTE2,按键2,初始值置1。ok确认。
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2102             MOVS     R1,#+2
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   00000060   0x.... 0x....      BL       gpio_init
     93            gpio_init(PORTE,3,0,1);  //PTE3,按键3,初始值置1。esc取消。
   \   00000064   0x2301             MOVS     R3,#+1
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x2103             MOVS     R1,#+3
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   0000006E   0x.... 0x....      BL       gpio_init
     94            gpio_init(PORTE,4,0,1);  //PTE4,按键4,初始值置1
   \   00000072   0x2301             MOVS     R3,#+1
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x2104             MOVS     R1,#+4
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   0000007C   0x.... 0x....      BL       gpio_init
     95            gpio_init(PORTE,5,0,1);  //PTE5,按键5,初始值置1
   \   00000080   0x2301             MOVS     R3,#+1
   \   00000082   0x2200             MOVS     R2,#+0
   \   00000084   0x2105             MOVS     R1,#+5
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x400ff100
   \   0000008A   0x.... 0x....      BL       gpio_init
     96            
     97            return 1;
   \   0000008E   0x2001             MOVS     R0,#+1
   \   00000090   0xBD02             POP      {R1,PC}          ;; return
     98          }
     99          
    100          
    101          //Debug专用延时函数。

   \                                 In section .text, align 2, keep-with-next
    102          void DebugDelay(int ms)
    103          {
    104             int ii,jj;
    105             if (ms<1) ms=1;
   \                     DebugDelay: (+1)
   \   00000000   0x2801             CMP      R0,#+1
   \   00000002   0xDA00             BGE.N    ??DebugDelay_0
   \   00000004   0x2001             MOVS     R0,#+1
    106             for(ii=0;ii<ms;ii++)     
   \                     ??DebugDelay_0: (+1)
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0xE005             B.N      ??DebugDelay_1
    107               for(jj=0;jj<5341;jj++);     
   \                     ??DebugDelay_2: (+1)
   \   0000000A   0x1C52             ADDS     R2,R2,#+1
   \                     ??DebugDelay_3: (+1)
   \   0000000C   0xF241 0x43DD      MOVW     R3,#+5341
   \   00000010   0x429A             CMP      R2,R3
   \   00000012   0xDBFA             BLT.N    ??DebugDelay_2
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \                     ??DebugDelay_1: (+1)
   \   00000016   0x4281             CMP      R1,R0
   \   00000018   0xDA01             BGE.N    ??DebugDelay_4
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0xE7F6             B.N      ??DebugDelay_3
    108          }
   \                     ??DebugDelay_4: (+1)
   \   0000001E   0x4770             BX       LR               ;; return
    109          
    110          
    111          //Debug拨码开关扫描函数。

   \                                 In section .text, align 2, keep-with-next
    112          uint8 DebugSwitchScan(void)
    113          {
    114            //拨码开关0. 
    115            if(!(GPIOE_PDIR&0x0001))
   \                     DebugSwitchScan: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x07C0             LSLS     R0,R0,#+31
   \   00000008   0xD40E             BMI.N    ??DebugSwitchScan_0
    116            {
    117              if(!(GPIOE_PDIR&0x0001))
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x07C0             LSLS     R0,R0,#+31
   \   00000012   0xD404             BMI.N    ??DebugSwitchScan_1
    118              {    
    119                DebugSwitchFlag[0] = 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   \   0000001C   0xE008             B.N      ??DebugSwitchScan_2
    120              }
    121              else
    122              {
    123                DebugSwitchFlag[0] = 0;
   \                     ??DebugSwitchScan_1: (+1)
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000024   0x7008             STRB     R0,[R1, #+0]
   \   00000026   0xE003             B.N      ??DebugSwitchScan_2
    124              }
    125            }
    126            else
    127            {
    128              DebugSwitchFlag[0] = 0;
   \                     ??DebugSwitchScan_0: (+1)
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000002E   0x7008             STRB     R0,[R1, #+0]
    129            }
    130            
    131            //拨码开关1. 
    132            if(!(GPIOE_PDIR&0x0002))
   \                     ??DebugSwitchScan_2: (+1)
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x0780             LSLS     R0,R0,#+30
   \   00000038   0xD40E             BMI.N    ??DebugSwitchScan_3
    133            {
    134              if(!(GPIOE_PDIR&0x0002))
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x0780             LSLS     R0,R0,#+30
   \   00000042   0xD404             BMI.N    ??DebugSwitchScan_4
    135              {
    136                DebugSwitchFlag[1] = 1;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000004A   0x7048             STRB     R0,[R1, #+1]
   \   0000004C   0xE008             B.N      ??DebugSwitchScan_5
    137              }
    138              else
    139              {
    140                DebugSwitchFlag[1] = 0;
   \                     ??DebugSwitchScan_4: (+1)
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000054   0x7048             STRB     R0,[R1, #+1]
   \   00000056   0xE003             B.N      ??DebugSwitchScan_5
    141              }
    142            }
    143            else
    144            {
    145              DebugSwitchFlag[1] = 0;
   \                     ??DebugSwitchScan_3: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000005E   0x7048             STRB     R0,[R1, #+1]
    146            }
    147            
    148            //拨码开关2.
    149            if(!(GPIOE_PDIR&0x0004))
   \                     ??DebugSwitchScan_5: (+1)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x0740             LSLS     R0,R0,#+29
   \   00000068   0xD40E             BMI.N    ??DebugSwitchScan_6
    150            {
    151              if(!(GPIOE_PDIR&0x0004))
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x0740             LSLS     R0,R0,#+29
   \   00000072   0xD404             BMI.N    ??DebugSwitchScan_7
    152              {
    153                DebugSwitchFlag[2] = 1;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000007A   0x7088             STRB     R0,[R1, #+2]
   \   0000007C   0xE008             B.N      ??DebugSwitchScan_8
    154              }
    155              else
    156              {
    157                DebugSwitchFlag[2] = 0;
   \                     ??DebugSwitchScan_7: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000084   0x7088             STRB     R0,[R1, #+2]
   \   00000086   0xE003             B.N      ??DebugSwitchScan_8
    158              }  
    159            }
    160            else
    161            {
    162              DebugSwitchFlag[2] = 0;
   \                     ??DebugSwitchScan_6: (+1)
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000008E   0x7088             STRB     R0,[R1, #+2]
    163            }  
    164            
    165            //拨码开关3. 
    166            if(!(GPIOE_PDIR&0x0008))
   \                     ??DebugSwitchScan_8: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x0700             LSLS     R0,R0,#+28
   \   00000098   0xD40E             BMI.N    ??DebugSwitchScan_9
    167            {
    168              if(!(GPIOE_PDIR&0x0008))
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x0700             LSLS     R0,R0,#+28
   \   000000A2   0xD404             BMI.N    ??DebugSwitchScan_10
    169              {
    170                DebugSwitchFlag[3] = 1;
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000AA   0x70C8             STRB     R0,[R1, #+3]
   \   000000AC   0xE008             B.N      ??DebugSwitchScan_11
    171              }
    172              else
    173              {
    174                DebugSwitchFlag[3] = 0;
   \                     ??DebugSwitchScan_10: (+1)
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000B4   0x70C8             STRB     R0,[R1, #+3]
   \   000000B6   0xE003             B.N      ??DebugSwitchScan_11
    175              }
    176            }
    177            else
    178            {
    179              DebugSwitchFlag[3] = 0;
   \                     ??DebugSwitchScan_9: (+1)
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000BE   0x70C8             STRB     R0,[R1, #+3]
    180            }    
    181              
    182            //拨码开关不存在检测成不成功，扫描一遍更新标志位即可。
    183            return 1;
   \                     ??DebugSwitchScan_11: (+1)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x4770             BX       LR               ;; return
    184          }
    185          
    186          //Debug按键扫描函数。

   \                                 In section .text, align 2, keep-with-next
    187          uint8 DebugButtonScan(void)
    188          {    
    189            
    190            //按键0.PTE0.
    191            if(!(GPIOE_PDIR&0x01))
   \                     DebugButtonScan: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x07C0             LSLS     R0,R0,#+31
   \   00000008   0xD41A             BMI.N    ??DebugButtonScan_0
    192            {
    193              //确认次数加1.
    194              DebugButtonConfirmCount[0]++;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    195              //连续多个16ms周期内确认，则确认。
    196              if(DebugButtonConfirmCount[0] > DebugButtonConfirmNum)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x280B             CMP      R0,#+11
   \   00000020   0xDB09             BLT.N    ??DebugButtonScan_1
    197              {
    198                //确认标志置位。
    199                DebugButtonFlag[0] = 1;    
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    200                //确认次数清0。
    201                DebugButtonConfirmCount[0] = 0;      
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000030   0x7008             STRB     R0,[R1, #+0]
    202                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    203                return 1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0xE0CA             B.N      ??DebugButtonScan_2
    204              }
    205              //还没到次数，仍视为没有按下。继续检测后面的按键。
    206              else
    207              {
    208                DebugButtonFlag[0] = 0;
   \                     ??DebugButtonScan_1: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
   \   0000003E   0xE007             B.N      ??DebugButtonScan_3
    209              }
    210            }
    211            else
    212            {
    213              //确认次数清0。
    214              DebugButtonConfirmCount[0] = 0;
   \                     ??DebugButtonScan_0: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000046   0x7008             STRB     R0,[R1, #+0]
    215              //确认标志置0.
    216              DebugButtonFlag[0] = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
    217              //继续检测后面的按键。
    218            }
    219            
    220            //按键1.PTE1.
    221            if(!(GPIOE_PDIR&0x02))
   \                     ??DebugButtonScan_3: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x0780             LSLS     R0,R0,#+30
   \   00000058   0xD41A             BMI.N    ??DebugButtonScan_4
    222            {
    223              //确认次数加1.
    224              DebugButtonConfirmCount[1]++;
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000005E   0x7840             LDRB     R0,[R0, #+1]
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000066   0x7048             STRB     R0,[R1, #+1]
    225              //连续多个16ms周期内确认，则确认。
    226              if(DebugButtonConfirmCount[1] > DebugButtonConfirmNum)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000006C   0x7840             LDRB     R0,[R0, #+1]
   \   0000006E   0x280B             CMP      R0,#+11
   \   00000070   0xDB09             BLT.N    ??DebugButtonScan_5
    227              {
    228                //确认标志置位。
    229                DebugButtonFlag[1] = 1;     
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000078   0x7048             STRB     R0,[R1, #+1]
    230                //确认次数清0。
    231                DebugButtonConfirmCount[1] = 0;     
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000080   0x7048             STRB     R0,[R1, #+1]
    232                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    233                return 1;
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0xE0A2             B.N      ??DebugButtonScan_2
    234              }
    235              //还没到次数，仍视为没有按下。继续检测后面的按键。
    236              else
    237              {
    238                DebugButtonFlag[1] = 0;
   \                     ??DebugButtonScan_5: (+1)
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000008C   0x7048             STRB     R0,[R1, #+1]
   \   0000008E   0xE007             B.N      ??DebugButtonScan_6
    239              }
    240            }
    241            else
    242            {
    243              //确认次数清0。
    244              DebugButtonConfirmCount[1] = 0;
   \                     ??DebugButtonScan_4: (+1)
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000096   0x7048             STRB     R0,[R1, #+1]
    245              //确认标志置0.
    246              DebugButtonFlag[1] = 0;
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000009E   0x7048             STRB     R0,[R1, #+1]
    247              //继续检测后面的按键。
    248            }
    249            
    250            //按键2.PTE2.
    251            if(!(GPIOE_PDIR&0x04))
   \                     ??DebugButtonScan_6: (+1)
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x0740             LSLS     R0,R0,#+29
   \   000000A8   0xD41A             BMI.N    ??DebugButtonScan_7
    252            {
    253              //确认次数加1.
    254              DebugButtonConfirmCount[2]++;
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000000AE   0x7880             LDRB     R0,[R0, #+2]
   \   000000B0   0x1C40             ADDS     R0,R0,#+1
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   000000B6   0x7088             STRB     R0,[R1, #+2]
    255              //连续多个16ms周期内确认，则确认。
    256              if(DebugButtonConfirmCount[2] > DebugButtonConfirmNum)
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000000BC   0x7880             LDRB     R0,[R0, #+2]
   \   000000BE   0x280B             CMP      R0,#+11
   \   000000C0   0xDB09             BLT.N    ??DebugButtonScan_8
    257              {
    258                //确认标志置位。
    259                DebugButtonFlag[2] = 1;     
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   000000C8   0x7088             STRB     R0,[R1, #+2]
    260                //确认次数清0。
    261                DebugButtonConfirmCount[2] = 0;           
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   000000D0   0x7088             STRB     R0,[R1, #+2]
    262                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    263                return 1;
   \   000000D2   0x2001             MOVS     R0,#+1
   \   000000D4   0xE07A             B.N      ??DebugButtonScan_2
    264              }
    265              //还没到次数，仍视为没有按下。继续检测后面的按键。
    266              else
    267              {
    268                DebugButtonFlag[2] = 0;
   \                     ??DebugButtonScan_8: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   000000DC   0x7088             STRB     R0,[R1, #+2]
   \   000000DE   0xE007             B.N      ??DebugButtonScan_9
    269              }
    270            }
    271            else
    272            {
    273              //确认次数清0。
    274              DebugButtonConfirmCount[2] = 0;
   \                     ??DebugButtonScan_7: (+1)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   000000E6   0x7088             STRB     R0,[R1, #+2]
    275              //确认标志置0.
    276              DebugButtonFlag[2] = 0;
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   000000EE   0x7088             STRB     R0,[R1, #+2]
    277              //继续检测后面的按键。
    278            }  
    279            
    280            //按键3.PTE3.
    281            if(!(GPIOE_PDIR&0x08))
   \                     ??DebugButtonScan_9: (+1)
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x0700             LSLS     R0,R0,#+28
   \   000000F8   0xD41A             BMI.N    ??DebugButtonScan_10
    282            {
    283              //确认次数加1.
    284              DebugButtonConfirmCount[3]++;
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   000000FE   0x78C0             LDRB     R0,[R0, #+3]
   \   00000100   0x1C40             ADDS     R0,R0,#+1
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000106   0x70C8             STRB     R0,[R1, #+3]
    285              //连续多个16ms周期内确认，则确认。
    286              if(DebugButtonConfirmCount[3] > DebugButtonConfirmNum)
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000010C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000010E   0x280B             CMP      R0,#+11
   \   00000110   0xDB09             BLT.N    ??DebugButtonScan_11
    287              {
    288                //确认标志置位。
    289                DebugButtonFlag[3] = 1;     
   \   00000112   0x2001             MOVS     R0,#+1
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000118   0x70C8             STRB     R0,[R1, #+3]
    290                //确认次数清0。
    291                DebugButtonConfirmCount[3] = 0;           
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000120   0x70C8             STRB     R0,[R1, #+3]
    292                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    293                return 1;
   \   00000122   0x2001             MOVS     R0,#+1
   \   00000124   0xE052             B.N      ??DebugButtonScan_2
    294              }
    295              //还没到次数，仍视为没有按下。继续检测后面的按键。
    296              else
    297              {
    298                DebugButtonFlag[3] = 0;
   \                     ??DebugButtonScan_11: (+1)
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000012C   0x70C8             STRB     R0,[R1, #+3]
   \   0000012E   0xE007             B.N      ??DebugButtonScan_12
    299              }
    300            }
    301            else
    302            {
    303              //确认次数清0。
    304              DebugButtonConfirmCount[3] = 0;
   \                     ??DebugButtonScan_10: (+1)
   \   00000130   0x2000             MOVS     R0,#+0
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000136   0x70C8             STRB     R0,[R1, #+3]
    305              //确认标志置0.
    306              DebugButtonFlag[3] = 0;
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000013E   0x70C8             STRB     R0,[R1, #+3]
    307              //继续检测后面的按键。
    308            }
    309            
    310            
    311            //按键4.PTE4.
    312            if(!(GPIOE_PDIR&0x10))
   \                     ??DebugButtonScan_12: (+1)
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x400ff110
   \   00000144   0x6800             LDR      R0,[R0, #+0]
   \   00000146   0x06C0             LSLS     R0,R0,#+27
   \   00000148   0xD41A             BMI.N    ??DebugButtonScan_13
    313            {
    314              //确认次数加1.
    315              DebugButtonConfirmCount[4]++;
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000014E   0x7900             LDRB     R0,[R0, #+4]
   \   00000150   0x1C40             ADDS     R0,R0,#+1
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000156   0x7108             STRB     R0,[R1, #+4]
    316              //连续多个16ms周期内确认，则确认。
    317              if(DebugButtonConfirmCount[4] > DebugButtonConfirmNum)
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   0000015C   0x7900             LDRB     R0,[R0, #+4]
   \   0000015E   0x280B             CMP      R0,#+11
   \   00000160   0xDB09             BLT.N    ??DebugButtonScan_14
    318              {
    319                //确认标志置位。
    320                DebugButtonFlag[4] = 1;  
   \   00000162   0x2001             MOVS     R0,#+1
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000168   0x7108             STRB     R0,[R1, #+4]
    321                //确认次数清0。
    322                DebugButtonConfirmCount[4] = 0;           
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000170   0x7108             STRB     R0,[R1, #+4]
    323                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    324                return 1;
   \   00000172   0x2001             MOVS     R0,#+1
   \   00000174   0xE02A             B.N      ??DebugButtonScan_2
    325              }
    326              //还没到次数，仍视为没有按下。继续检测后面的按键。
    327              else
    328              {
    329                DebugButtonFlag[4] = 0;
   \                     ??DebugButtonScan_14: (+1)
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   0000017C   0x7108             STRB     R0,[R1, #+4]
   \   0000017E   0xE005             B.N      ??DebugButtonScan_15
    330              }
    331            }
    332            else
    333            {
    334              //确认次数清0。
    335              DebugButtonConfirmCount[4] = 0;
   \                     ??DebugButtonScan_13: (+1)
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x....             LDR.N    R1,??DataTable3_3
   \   00000184   0x7108             STRB     R0,[R1, #+4]
    336              //确认标志置0.
    337              DebugButtonFlag[4] = 0;
   \   00000186   0x2000             MOVS     R0,#+0
   \   00000188   0x....             LDR.N    R1,??DataTable3_4
   \   0000018A   0x7108             STRB     R0,[R1, #+4]
    338              //继续检测后面的按键。
    339            }
    340            
    341            
    342            //按键5.PTE5.
    343            if(!(GPIOE_PDIR&0x20))
   \                     ??DebugButtonScan_15: (+1)
   \   0000018C   0x....             LDR.N    R0,??DataTable3_1  ;; 0x400ff110
   \   0000018E   0x6800             LDR      R0,[R0, #+0]
   \   00000190   0x0680             LSLS     R0,R0,#+26
   \   00000192   0xD414             BMI.N    ??DebugButtonScan_16
    344            {
    345              //确认次数加1.
    346              DebugButtonConfirmCount[5]++;
   \   00000194   0x....             LDR.N    R0,??DataTable3_3
   \   00000196   0x7940             LDRB     R0,[R0, #+5]
   \   00000198   0x1C40             ADDS     R0,R0,#+1
   \   0000019A   0x....             LDR.N    R1,??DataTable3_3
   \   0000019C   0x7148             STRB     R0,[R1, #+5]
    347              //连续多个16ms周期内确认，则确认。
    348              if(DebugButtonConfirmCount[5] > DebugButtonConfirmNum)
   \   0000019E   0x....             LDR.N    R0,??DataTable3_3
   \   000001A0   0x7940             LDRB     R0,[R0, #+5]
   \   000001A2   0x280B             CMP      R0,#+11
   \   000001A4   0xDB07             BLT.N    ??DebugButtonScan_17
    349              {
    350                //确认标志置位。
    351                DebugButtonFlag[5] = 1;     
   \   000001A6   0x2001             MOVS     R0,#+1
   \   000001A8   0x....             LDR.N    R1,??DataTable3_4
   \   000001AA   0x7148             STRB     R0,[R1, #+5]
    352                //确认次数清0。
    353                DebugButtonConfirmCount[5] = 0;           
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x....             LDR.N    R1,??DataTable3_3
   \   000001B0   0x7148             STRB     R0,[R1, #+5]
    354                //一次只允许一个按键，若确认了，则不用检测后面的按键，直接返回正确。
    355                return 1;
   \   000001B2   0x2001             MOVS     R0,#+1
   \   000001B4   0xE00A             B.N      ??DebugButtonScan_2
    356              }
    357              //还没到次数，仍视为没有按下。继续检测后面的按键。
    358              else
    359              {
    360                DebugButtonFlag[5] = 0;
   \                     ??DebugButtonScan_17: (+1)
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x....             LDR.N    R1,??DataTable3_4
   \   000001BA   0x7148             STRB     R0,[R1, #+5]
   \   000001BC   0xE005             B.N      ??DebugButtonScan_18
    361              }
    362            }
    363            else
    364            {
    365              //确认次数清0。
    366              DebugButtonConfirmCount[5] = 0;
   \                     ??DebugButtonScan_16: (+1)
   \   000001BE   0x2000             MOVS     R0,#+0
   \   000001C0   0x....             LDR.N    R1,??DataTable3_3
   \   000001C2   0x7148             STRB     R0,[R1, #+5]
    367              //确认标志置0.
    368              DebugButtonFlag[5] = 0;
   \   000001C4   0x2000             MOVS     R0,#+0
   \   000001C6   0x....             LDR.N    R1,??DataTable3_4
   \   000001C8   0x7148             STRB     R0,[R1, #+5]
    369              //继续检测后面的按键。
    370            }
    371              
    372            
    373            return 0;
   \                     ??DebugButtonScan_18: (+1)
   \   000001CA   0x2000             MOVS     R0,#+0
   \                     ??DebugButtonScan_2: (+1)
   \   000001CC   0x4770             BX       LR               ;; return
    374          }
    375          
    376          //FLASH值的读取函数
    377          //tempsectorindex扇区序号，tempsectorsize扇区大小，num第几个数据

   \                                 In section .text, align 2, keep-with-next
    378          uint32 FlashReadNow(uint32 tempsectorindex, uint32 tempsectorsize, uint32 num)
    379          {
   \                     FlashReadNow: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    380            uint32 temp;
    381            
    382            
    383            temp = (*(byte *)((uint32)(tempsectorindex * tempsectorsize + num * 4))) 
    384                 + (*(byte *)((uint32)(tempsectorindex * tempsectorsize + num * 4 + 1))) * 256 
    385                 + (*(byte *)((uint32)(tempsectorindex * tempsectorsize + num * 4 + 2))) * 65536 
    386                 + (*(byte *)((uint32)(tempsectorindex * tempsectorsize + num * 4 + 3))) * 16777216;
   \   00000002   0xFB01 0xF300      MUL      R3,R1,R0
   \   00000006   0xF813 0x3022      LDRB     R3,[R3, R2, LSL #+2]
   \   0000000A   0x0094             LSLS     R4,R2,#+2
   \   0000000C   0xFB01 0x4400      MLA      R4,R1,R0,R4
   \   00000010   0x7864             LDRB     R4,[R4, #+1]
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF44F 0x7580      MOV      R5,#+256
   \   00000018   0x436C             MULS     R4,R5,R4
   \   0000001A   0xFA54 0xF383      UXTAB    R3,R4,R3
   \   0000001E   0x0094             LSLS     R4,R2,#+2
   \   00000020   0xFB01 0x4400      MLA      R4,R1,R0,R4
   \   00000024   0x78A4             LDRB     R4,[R4, #+2]
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0xF45F 0x3580      MOVS     R5,#+65536
   \   0000002C   0xFB05 0x3304      MLA      R3,R5,R4,R3
   \   00000030   0x0092             LSLS     R2,R2,#+2
   \   00000032   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000036   0x78C0             LDRB     R0,[R0, #+3]
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xF05F 0x7180      MOVS     R1,#+16777216
   \   0000003E   0xFB01 0x3000      MLA      R0,R1,R0,R3
    387            
    388            return temp;
   \   00000042   0xBC30             POP      {R4,R5}
   \   00000044   0x4770             BX       LR               ;; return
    389          }
    390          
    391          
    392          //FLASH值的写入函数
    393          //tempsectorindex扇区序号，num第几个数据，tempelementsize元素的大小（一般是4），pointeruint8数据指针（必须是uint8 *型的）。

   \                                 In section .text, align 2, keep-with-next
    394          uint8 FlashWriteNow(uint32 tempsectorindex, uint32 num, uint32 tempelementsize, uint8 *pointeruint8)
    395          {
   \                     FlashWriteNow: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    396            
    397            FlashWrite(tempsectorindex, num * 4, tempelementsize, pointeruint8);
   \   00000002   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000004   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   0x0089             LSLS     R1,R1,#+2
   \   00000008   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000C   0x.... 0x....      BL       FlashWrite
    398            
    399            return 1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xBD02             POP      {R1,PC}          ;; return
    400          }
    401          
    402          //FLASH模块值初始化读取

   \                                 In section .text, align 2, keep-with-next
    403          uint8 FlashInitRead(void)
    404          {
   \                     FlashInitRead: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    405            uint32 temp;
    406            uint8 i, j, k;
    407            
    408            for(i = 0; i < 60; i++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE00B             B.N      ??FlashInitRead_0
    409            {
    410              temp = FlashReadNow(FlashSectorIndex, FlashSectorSize, i);
   \                     ??FlashInitRead_1: (+1)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x0022             MOVS     R2,R4
   \   0000000A   0xF44F 0x6100      MOV      R1,#+2048
   \   0000000E   0x20E0             MOVS     R0,#+224
   \   00000010   0x.... 0x....      BL       FlashReadNow
    411              DebugModifyNum[i] = temp;   //不需要强制类型转换，会自动转换的。
   \   00000014   0x....             LDR.N    R1,??DataTable3_5
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
    412            }
   \   0000001C   0x1C64             ADDS     R4,R4,#+1
   \                     ??FlashInitRead_0: (+1)
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2C3C             CMP      R4,#+60
   \   00000022   0xDBF0             BLT.N    ??FlashInitRead_1
    413            
    414            
    415            //赋给实际值，不直接赋给实际变量而通过中间变量，是为了方便修改。
    416            //LightHouseWaitStartMaxTime = DebugModifyNum[0];    //发车最多时间
    417            //SpeedStrategyChosen = DebugModifyNum[1];          //速度档位
    418            //MotorTakeOffQuadCountLimit = DebugModifyNum[2];   //起飞控制
    419            //AngleZoneConfirmMatLimit = DebugModifyNum[3];  //直角黑块，标志存储数组中直角黑块的个数大于该值时，则锁存为直角黑块。
    420            //AngleConfirmMatLimit = DebugModifyNum[4];      //直角弯标志存储数组中直角的个数大于该值时，则锁存为直角。
    421            //BrickConfirmMatLimit = DebugModifyNum[5];      //障碍标志存储数组中障碍的个数大于该值时，则锁存为障碍。
    422            //BrickConfirmFinalColCom = DebugModifyNum[6];   //障碍躲避时的列修正量（以15为零，左减右加。）
    423            //LightHouseWaitStopDelayCountLimit = DebugModifyNum[7]; //停车延时判断阈值，隔这么多个16ms才开始停车判断
    424            //LightHouseWaitStopGapCountLimit = DebugModifyNum[8];  //停车间隔计数阈值，每隔这么多个16ms就更新一次灯塔采集值
    425          
    426            
    427          
    428            //列优先,共4x8=32个，写完了DebugModifyNum[46]
    429            k = 15;
   \   00000024   0x210F             MOVS     R1,#+15
    430            for(i = 0; i <= 7; i++)
   \   00000026   0x2400             MOVS     R4,#+0
   \   00000028   0xE005             B.N      ??FlashInitRead_2
    431            {
    432              for(j = 0; j <= 3; j++)
    433              {
    434                //ControlRow_Weight[j][i] = DebugModifyNum[k];
    435                k++;
   \                     ??FlashInitRead_3: (+1)
   \   0000002A   0x1C49             ADDS     R1,R1,#+1
    436              }
   \   0000002C   0x1C40             ADDS     R0,R0,#+1
   \                     ??FlashInitRead_4: (+1)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2804             CMP      R0,#+4
   \   00000032   0xDBFA             BLT.N    ??FlashInitRead_3
   \   00000034   0x1C64             ADDS     R4,R4,#+1
   \                     ??FlashInitRead_2: (+1)
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x2C08             CMP      R4,#+8
   \   0000003A   0xDA01             BGE.N    ??FlashInitRead_5
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xE7F6             B.N      ??FlashInitRead_4
    437            }
    438            
    439            //定时跑时间上限
    440            //TimeRealRun = DebugModifyNum[47];
    441            //电机P
    442            //SpeedPIDPVal = DebugModifyNum[48];
    443            //电机D
    444            //SpeedPIDDVal = DebugModifyNum[49];
    445            //坡道的给定速度
    446            //SpeedTargetValGryoResult = DebugModifyNum[50];
    447            //直角弯的给定速度
    448            //SpeedTargetValAngle = DebugModifyNum[51];
    449            //长直道的给定速度
    450            //SpeedTargetValStraight = DebugModifyNum[52];
    451            //坡道禁止赛道类型判断倒计数载入值
    452            //GyroResultForbidBackCountNum = DebugModifyNum[53];
    453            //连续直道计数阈值
    454            //PathRealStraightCountLimit = DebugModifyNum[54];
    455          //  //灯塔停车亮持续时间
    456          //  LightHouseWaitStopOnCountLimit = DebugModifyNum[55];
    457            //停车计数阈值。
    458            //StopFlagMaxCountNum = DebugModifyNum[55];
    459            //不停车标志
    460            //LightHouseNoStopFlag = DebugModifyNum[56];
    461            //直角弯线头差阈值。
    462            //AngleHeadLineNum = DebugModifyNum[57];
    463            //灯塔等待停车速度
    464            //SpeedTargetValWaitStop = DebugModifyNum[58];
    465            //上坡速度
    466            //SpeedTargetValGryoUp = DebugModifyNum[59];
    467            
    468            
    469           /*   
    470            DebugModifyNum[0] = 10;
    471            DebugModifyNum[1] = 33;
    472            DebugModifyNum[2] = 37;
    473            DebugModifyNum[3] = 40;
    474            DebugModifyNum[4] = 40;
    475            DebugModifyNum[5] = 40;
    476            DebugModifyNum[6] = 34;
    477            DebugModifyNum[7] = 29;
    478            DebugModifyNum[8] = 0;
    479            DebugModifyNum[9] = 120;
    480            DebugModifyNum[10] = 230;
    481            DebugModifyNum[11] = 150;
    482            DebugModifyNum[12] = 150;
    483            DebugModifyNum[13] = 150;
    484            DebugModifyNum[14] = 150;
    485            DebugModifyNum[15] = 150;
    486            DebugModifyNum[16] = 150;
    487            */
    488            
    489            speedOfCar = DebugModifyNum[0];               //校赛的时候，这个参数是决定速度的，后来就没啥用了
   \                     ??FlashInitRead_5: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable3_5
   \   00000042   0x8800             LDRH     R0,[R0, #+0]
   \   00000044   0x....             LDR.N    R1,??DataTable3_6
   \   00000046   0x8008             STRH     R0,[R1, #+0]
    490            Steer_kp[1] = DebugModifyNum[1];              //舵机的p参数
   \   00000048   0x....             LDR.N    R0,??DataTable3_5
   \   0000004A   0x8840             LDRH     R0,[R0, #+2]
   \   0000004C   0x....             LDR.N    R1,??DataTable3_7
   \   0000004E   0x8048             STRH     R0,[R1, #+2]
    491            Steer_kp[2] = DebugModifyNum[2];
   \   00000050   0x....             LDR.N    R0,??DataTable3_5
   \   00000052   0x8880             LDRH     R0,[R0, #+4]
   \   00000054   0x....             LDR.N    R1,??DataTable3_7
   \   00000056   0x8088             STRH     R0,[R1, #+4]
    492            Steer_kp[3] = DebugModifyNum[3];
   \   00000058   0x....             LDR.N    R0,??DataTable3_5
   \   0000005A   0x88C0             LDRH     R0,[R0, #+6]
   \   0000005C   0x....             LDR.N    R1,??DataTable3_7
   \   0000005E   0x80C8             STRH     R0,[R1, #+6]
    493            Steer_kp[4] = DebugModifyNum[4];
   \   00000060   0x....             LDR.N    R0,??DataTable3_5
   \   00000062   0x8900             LDRH     R0,[R0, #+8]
   \   00000064   0x....             LDR.N    R1,??DataTable3_7
   \   00000066   0x8108             STRH     R0,[R1, #+8]
    494            Steer_kp[5] = DebugModifyNum[5];
   \   00000068   0x....             LDR.N    R0,??DataTable3_5
   \   0000006A   0x8940             LDRH     R0,[R0, #+10]
   \   0000006C   0x....             LDR.N    R1,??DataTable3_7
   \   0000006E   0x8148             STRH     R0,[R1, #+10]
    495            Steer_kp[6] = DebugModifyNum[6];
   \   00000070   0x....             LDR.N    R0,??DataTable3_5
   \   00000072   0x8980             LDRH     R0,[R0, #+12]
   \   00000074   0x....             LDR.N    R1,??DataTable3_7
   \   00000076   0x8188             STRH     R0,[R1, #+12]
    496            Steer_kp[7] = DebugModifyNum[7];
   \   00000078   0x....             LDR.N    R0,??DataTable3_5
   \   0000007A   0x89C0             LDRH     R0,[R0, #+14]
   \   0000007C   0x....             LDR.N    R1,??DataTable3_7
   \   0000007E   0x81C8             STRH     R0,[R1, #+14]
    497            Steer_kp[0] = DebugModifyNum[8];
   \   00000080   0x....             LDR.N    R0,??DataTable3_5
   \   00000082   0x8A00             LDRH     R0,[R0, #+16]
   \   00000084   0x....             LDR.N    R1,??DataTable3_7
   \   00000086   0x8008             STRH     R0,[R1, #+0]
    498            SpeedPIDPVal = DebugModifyNum[9];             //电机的PI参数
   \   00000088   0x....             LDR.N    R0,??DataTable3_5
   \   0000008A   0x8A40             LDRH     R0,[R0, #+18]
   \   0000008C   0x....             LDR.N    R1,??DataTable3_8
   \   0000008E   0x8008             STRH     R0,[R1, #+0]
    499            SpeedPIDDVal = DebugModifyNum[10];
   \   00000090   0x....             LDR.N    R0,??DataTable3_5
   \   00000092   0x8A80             LDRH     R0,[R0, #+20]
   \   00000094   0x....             LDR.N    R1,??DataTable3_9
   \   00000096   0x8008             STRH     R0,[R1, #+0]
    500            SpeedTargetMat[0][5] = DebugModifyNum[11];    //给定速度
   \   00000098   0x....             LDR.N    R0,??DataTable3_5
   \   0000009A   0x8AC0             LDRH     R0,[R0, #+22]
   \   0000009C   0x....             LDR.N    R1,??DataTable3_10
   \   0000009E   0x8148             STRH     R0,[R1, #+10]
    501            SpeedTargetMat[0][4] = DebugModifyNum[12];
   \   000000A0   0x....             LDR.N    R0,??DataTable3_5
   \   000000A2   0x8B00             LDRH     R0,[R0, #+24]
   \   000000A4   0x....             LDR.N    R1,??DataTable3_10
   \   000000A6   0x8108             STRH     R0,[R1, #+8]
    502            SpeedTargetMat[0][6] = DebugModifyNum[12];
   \   000000A8   0x....             LDR.N    R0,??DataTable3_5
   \   000000AA   0x8B00             LDRH     R0,[R0, #+24]
   \   000000AC   0x....             LDR.N    R1,??DataTable3_10
   \   000000AE   0x8188             STRH     R0,[R1, #+12]
    503            SpeedTargetMat[0][3] = DebugModifyNum[13];
   \   000000B0   0x....             LDR.N    R0,??DataTable3_5
   \   000000B2   0x8B40             LDRH     R0,[R0, #+26]
   \   000000B4   0x....             LDR.N    R1,??DataTable3_10
   \   000000B6   0x80C8             STRH     R0,[R1, #+6]
    504            SpeedTargetMat[0][7] = DebugModifyNum[13];
   \   000000B8   0x....             LDR.N    R0,??DataTable3_5
   \   000000BA   0x8B40             LDRH     R0,[R0, #+26]
   \   000000BC   0x....             LDR.N    R1,??DataTable3_10
   \   000000BE   0x81C8             STRH     R0,[R1, #+14]
    505            SpeedTargetMat[0][2] = DebugModifyNum[14];
   \   000000C0   0x....             LDR.N    R0,??DataTable3_5
   \   000000C2   0x8B80             LDRH     R0,[R0, #+28]
   \   000000C4   0x....             LDR.N    R1,??DataTable3_10
   \   000000C6   0x8088             STRH     R0,[R1, #+4]
    506            SpeedTargetMat[0][8] = DebugModifyNum[14];
   \   000000C8   0x....             LDR.N    R0,??DataTable3_5
   \   000000CA   0x8B80             LDRH     R0,[R0, #+28]
   \   000000CC   0x....             LDR.N    R1,??DataTable3_10
   \   000000CE   0x8208             STRH     R0,[R1, #+16]
    507            SpeedTargetMat[0][1] = DebugModifyNum[15];
   \   000000D0   0x....             LDR.N    R0,??DataTable3_5
   \   000000D2   0x8BC0             LDRH     R0,[R0, #+30]
   \   000000D4   0x....             LDR.N    R1,??DataTable3_10
   \   000000D6   0x8048             STRH     R0,[R1, #+2]
    508            SpeedTargetMat[0][9] = DebugModifyNum[15];
   \   000000D8   0x....             LDR.N    R0,??DataTable3_5
   \   000000DA   0x8BC0             LDRH     R0,[R0, #+30]
   \   000000DC   0x....             LDR.N    R1,??DataTable3_10
   \   000000DE   0x8248             STRH     R0,[R1, #+18]
    509            SpeedTargetMat[0][0] = DebugModifyNum[16];
   \   000000E0   0x....             LDR.N    R0,??DataTable3_5
   \   000000E2   0x8C00             LDRH     R0,[R0, #+32]
   \   000000E4   0x....             LDR.N    R1,??DataTable3_10
   \   000000E6   0x8008             STRH     R0,[R1, #+0]
    510            SpeedTargetMat[0][10] = DebugModifyNum[16];
   \   000000E8   0x....             LDR.N    R0,??DataTable3_5
   \   000000EA   0x8C00             LDRH     R0,[R0, #+32]
   \   000000EC   0x....             LDR.N    R1,??DataTable3_10
   \   000000EE   0x8288             STRH     R0,[R1, #+20]
    511            BrickConfirmMatLimit = DebugModifyNum[17];      //障碍标志存储数组中障碍的个数大于该值时，则锁存为障碍。
   \   000000F0   0x....             LDR.N    R0,??DataTable3_5
   \   000000F2   0x8C40             LDRH     R0,[R0, #+34]
   \   000000F4   0x....             LDR.N    R1,??DataTable3_11
   \   000000F6   0x7008             STRB     R0,[R1, #+0]
    512            BrickConfirmFinalColCom = DebugModifyNum[18];   //障碍躲避时的列修正量（以15为零，左减右加。）
   \   000000F8   0x....             LDR.N    R0,??DataTable3_5
   \   000000FA   0x8C80             LDRH     R0,[R0, #+36]
   \   000000FC   0x....             LDR.N    R1,??DataTable3_12
   \   000000FE   0x7008             STRB     R0,[R1, #+0]
    513            LimitLeftWBMin = DebugModifyNum[19];          //图像黑白线的阈值
   \   00000100   0x....             LDR.N    R0,??DataTable3_5
   \   00000102   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000104   0x....             LDR.N    R1,??DataTable3_13
   \   00000106   0x7008             STRB     R0,[R1, #+0]
    514            LimitRightWBMin = DebugModifyNum[19];
   \   00000108   0x....             LDR.N    R0,??DataTable3_5
   \   0000010A   0x8CC0             LDRH     R0,[R0, #+38]
   \   0000010C   0x....             LDR.N    R1,??DataTable3_14
   \   0000010E   0x7008             STRB     R0,[R1, #+0]
    515            LimitLeftWBMax = DebugModifyNum[20];
   \   00000110   0x....             LDR.N    R0,??DataTable3_5
   \   00000112   0x8D00             LDRH     R0,[R0, #+40]
   \   00000114   0x....             LDR.N    R1,??DataTable3_15
   \   00000116   0x7008             STRB     R0,[R1, #+0]
    516            LimitRightWBMax = DebugModifyNum[20];
   \   00000118   0x....             LDR.N    R0,??DataTable3_5
   \   0000011A   0x8D00             LDRH     R0,[R0, #+40]
   \   0000011C   0x....             LDR.N    R1,??DataTable3_16
   \   0000011E   0x7008             STRB     R0,[R1, #+0]
    517            LimitLeftWMin = DebugModifyNum[21];
   \   00000120   0x....             LDR.N    R0,??DataTable3_5
   \   00000122   0x8D40             LDRH     R0,[R0, #+42]
   \   00000124   0x....             LDR.N    R1,??DataTable3_17
   \   00000126   0x7008             STRB     R0,[R1, #+0]
    518            LimitRightWMin = DebugModifyNum[21];
   \   00000128   0x....             LDR.N    R0,??DataTable3_5
   \   0000012A   0x8D40             LDRH     R0,[R0, #+42]
   \   0000012C   0x....             LDR.N    R1,??DataTable3_18
   \   0000012E   0x7008             STRB     R0,[R1, #+0]
    519            LimitLeftWMax = DebugModifyNum[22];
   \   00000130   0x....             LDR.N    R0,??DataTable3_5
   \   00000132   0x8D80             LDRH     R0,[R0, #+44]
   \   00000134   0x....             LDR.N    R1,??DataTable3_19
   \   00000136   0x7008             STRB     R0,[R1, #+0]
    520            LimitRightWMax = DebugModifyNum[22]; 
   \   00000138   0x....             LDR.N    R0,??DataTable3_5
   \   0000013A   0x8D80             LDRH     R0,[R0, #+44]
   \   0000013C   0x....             LDR.N    R1,??DataTable3_20
   \   0000013E   0x7008             STRB     R0,[R1, #+0]
    521            LimitLeftBMin = DebugModifyNum[23];
   \   00000140   0x....             LDR.N    R0,??DataTable3_5
   \   00000142   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000144   0x....             LDR.N    R1,??DataTable3_21
   \   00000146   0x7008             STRB     R0,[R1, #+0]
    522            LimitRightBMin = DebugModifyNum[23];
   \   00000148   0x....             LDR.N    R0,??DataTable3_5
   \   0000014A   0x8DC0             LDRH     R0,[R0, #+46]
   \   0000014C   0x....             LDR.N    R1,??DataTable3_22
   \   0000014E   0x7008             STRB     R0,[R1, #+0]
    523            LimitLeftBMax = DebugModifyNum[24];
   \   00000150   0x....             LDR.N    R0,??DataTable3_5
   \   00000152   0x8E00             LDRH     R0,[R0, #+48]
   \   00000154   0x....             LDR.N    R1,??DataTable3_23
   \   00000156   0x7008             STRB     R0,[R1, #+0]
    524            LimitRightBMax = DebugModifyNum[24];
   \   00000158   0x....             LDR.N    R0,??DataTable3_5
   \   0000015A   0x8E00             LDRH     R0,[R0, #+48]
   \   0000015C   0x....             LDR.N    R1,??DataTable3_24
   \   0000015E   0x7008             STRB     R0,[R1, #+0]
    525            SpeedTargetValStraight = DebugModifyNum[25];      //长直道速度
   \   00000160   0x....             LDR.N    R0,??DataTable3_5
   \   00000162   0x8E40             LDRH     R0,[R0, #+50]
   \   00000164   0x....             LDR.N    R1,??DataTable3_25
   \   00000166   0x8008             STRH     R0,[R1, #+0]
    526            SpeedBrick = DebugModifyNum[26];                  //障碍速度
   \   00000168   0x....             LDR.N    R0,??DataTable3_5
   \   0000016A   0x8E80             LDRH     R0,[R0, #+52]
   \   0000016C   0x....             LDR.N    R1,??DataTable3_26
   \   0000016E   0x8008             STRH     R0,[R1, #+0]
    527            SpeedTargetValGryoUp = DebugModifyNum[27];        //上坡速度
   \   00000170   0x....             LDR.N    R0,??DataTable3_5
   \   00000172   0x8EC0             LDRH     R0,[R0, #+54]
   \   00000174   0x....             LDR.N    R1,??DataTable3_27
   \   00000176   0x8008             STRH     R0,[R1, #+0]
    528            SpeedTargetValGryoResult = DebugModifyNum[28];    //下坡速度
   \   00000178   0x....             LDR.N    R0,??DataTable3_5
   \   0000017A   0x8F00             LDRH     R0,[R0, #+56]
   \   0000017C   0x....             LDR.N    R1,??DataTable3_28
   \   0000017E   0x7008             STRB     R0,[R1, #+0]
    529            SpeedXiaoZhiDao = DebugModifyNum[29];             //小直道速度
   \   00000180   0x....             LDR.N    R0,??DataTable3_5
   \   00000182   0x8F40             LDRH     R0,[R0, #+58]
   \   00000184   0x....             LDR.N    R1,??DataTable3_29
   \   00000186   0x8008             STRH     R0,[R1, #+0]
    530            limitStopLineBlackXiu = DebugModifyNum[52];       //与停车线判断有关的黑色阈值的设定
   \   00000188   0x....             LDR.N    R0,??DataTable3_5
   \   0000018A   0xF8B0 0x0068      LDRH     R0,[R0, #+104]
   \   0000018E   0x....             LDR.N    R1,??DataTable3_30
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    531            ServoPIDDMat[0] = DebugModifyNum[53];             //舵机d参数
   \   00000192   0x....             LDR.N    R0,??DataTable3_5
   \   00000194   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   00000198   0x....             LDR.N    R1,??DataTable3_31
   \   0000019A   0x8008             STRH     R0,[R1, #+0]
    532            ServoPIDD2Mat[0] = DebugModifyNum[53];
   \   0000019C   0x....             LDR.N    R0,??DataTable3_5
   \   0000019E   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   000001A2   0x....             LDR.N    R1,??DataTable3_32
   \   000001A4   0x8008             STRH     R0,[R1, #+0]
    533            ServoPIDDMat[1] = DebugModifyNum[54];
   \   000001A6   0x....             LDR.N    R0,??DataTable3_5
   \   000001A8   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000001AC   0x....             LDR.N    R1,??DataTable3_31
   \   000001AE   0x8048             STRH     R0,[R1, #+2]
    534            ServoPIDD2Mat[1] = DebugModifyNum[54];
   \   000001B0   0x....             LDR.N    R0,??DataTable3_5
   \   000001B2   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000001B6   0x....             LDR.N    R1,??DataTable3_32
   \   000001B8   0x8048             STRH     R0,[R1, #+2]
    535            ServoPIDDMat[2] = DebugModifyNum[55];
   \   000001BA   0x....             LDR.N    R0,??DataTable3_5
   \   000001BC   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   000001C0   0x....             LDR.N    R1,??DataTable3_31
   \   000001C2   0x8088             STRH     R0,[R1, #+4]
    536            ServoPIDD2Mat[2] = DebugModifyNum[55];
   \   000001C4   0x....             LDR.N    R0,??DataTable3_5
   \   000001C6   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   000001CA   0x....             LDR.N    R1,??DataTable3_32
   \   000001CC   0x8088             STRH     R0,[R1, #+4]
    537            ServoPIDDMat[3] = DebugModifyNum[56];
   \   000001CE   0x....             LDR.N    R0,??DataTable3_5
   \   000001D0   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   000001D4   0x....             LDR.N    R1,??DataTable3_31
   \   000001D6   0x80C8             STRH     R0,[R1, #+6]
    538            ServoPIDD2Mat[3] = DebugModifyNum[56];
   \   000001D8   0x....             LDR.N    R0,??DataTable3_5
   \   000001DA   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   000001DE   0x....             LDR.N    R1,??DataTable3_32
   \   000001E0   0x80C8             STRH     R0,[R1, #+6]
    539            ServoPIDDMat[4] = DebugModifyNum[57];
   \   000001E2   0x....             LDR.N    R0,??DataTable3_5
   \   000001E4   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   000001E8   0x....             LDR.N    R1,??DataTable3_31
   \   000001EA   0x8108             STRH     R0,[R1, #+8]
    540            ServoPIDD2Mat[4] = DebugModifyNum[57];
   \   000001EC   0x....             LDR.N    R0,??DataTable3_5
   \   000001EE   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   000001F2   0x....             LDR.N    R1,??DataTable3_32
   \   000001F4   0x8108             STRH     R0,[R1, #+8]
    541            ServoPIDDMat[5] = DebugModifyNum[58];
   \   000001F6   0x....             LDR.N    R0,??DataTable3_5
   \   000001F8   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000001FC   0x....             LDR.N    R1,??DataTable3_31
   \   000001FE   0x8148             STRH     R0,[R1, #+10]
    542            ServoPIDD2Mat[5] = DebugModifyNum[58];
   \   00000200   0x....             LDR.N    R0,??DataTable3_5
   \   00000202   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   00000206   0x....             LDR.N    R1,??DataTable3_32
   \   00000208   0x8148             STRH     R0,[R1, #+10]
    543            ServoPIDDMat[6] = DebugModifyNum[59];
   \   0000020A   0x....             LDR.N    R0,??DataTable3_5
   \   0000020C   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   00000210   0x....             LDR.N    R1,??DataTable3_31
   \   00000212   0x8188             STRH     R0,[R1, #+12]
    544            ServoPIDD2Mat[6] = DebugModifyNum[59];
   \   00000214   0x....             LDR.N    R0,??DataTable3_5
   \   00000216   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   0000021A   0x....             LDR.N    R1,??DataTable3_32
   \   0000021C   0x8188             STRH     R0,[R1, #+12]
    545            
    546          
    547            return 1;
   \   0000021E   0x2001             MOVS     R0,#+1
   \   00000220   0xBD10             POP      {R4,PC}          ;; return
    548          }
    549          
    550          
    551          //Debug初始化

   \                                 In section .text, align 2, keep-with-next
    552          uint8 DebugInit(void)
    553          {
   \                     DebugInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    554            //OLED初始化。这里会显示“Hello AE86”
    555            LCD_Init();
   \   00000002   0x.... 0x....      BL       LCD_Init
    556            //FLASH初始化
    557            FlashInit();
   \   00000006   0x.... 0x....      BL       FlashInit
    558            //FLASH模块值初始化读取。
    559            //FlashInitRead();
    560            //Debug用的引脚的初始化。
    561            DebugPortInit();
   \   0000000A   0x.... 0x....      BL       DebugPortInit
    562            
    563            return 1;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    564          }
    565          
    566          
    567          
    568          //对值的修改，temp=0表示减1个单位，temp=1表示加1个单位

   \                                 In section .text, align 4, keep-with-next
    569          uint8 DebugModifyValue(uint8 temp)
    570          {
    571            
    572            //temp=0表示减1个单位
    573            if(temp == 0)
   \                     DebugModifyValue: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xF040 0x84FB      BNE.W    ??DebugModifyValue_0
    574            {
    575              //当前是第0页。
    576              if(DebugModifyPage == 0)
   \   00000008   0xF8DF 0x0D7C      LDR.W    R0,??DebugModifyValue_1
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xF040 0x813F      BNE.W    ??DebugModifyValue_2
    577              {
    578                //根据光标位置来改值。
    579                if(DebugModifyCursor == 0)
   \   00000014   0xF8DF 0x0D94      LDR.W    R0,??DebugModifyValue_3
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD10E             BNE.N    ??DebugModifyValue_4
    580                {
    581                  DebugModifyNum[0] --;
   \   0000001E   0xF8DF 0x0D90      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x1E40             SUBS     R0,R0,#+1
   \   00000026   0xF8DF 0x1D88      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000002A   0x8008             STRH     R0,[R1, #+0]
    582                  speedOfCar = DebugModifyNum[0];
   \   0000002C   0xF8DF 0x0D80      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000030   0x8800             LDRH     R0,[R0, #+0]
   \   00000032   0xF8DF 0x1D80      LDR.W    R1,??DebugModifyValue_3+0x8
   \   00000036   0x8008             STRH     R0,[R1, #+0]
   \   00000038   0xF001 0xB960      B.W      ??DebugModifyValue_5
    583                }
    584                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_4: (+1)
   \   0000003C   0xF8DF 0x0D6C      LDR.W    R0,??DebugModifyValue_3
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xD10E             BNE.N    ??DebugModifyValue_6
    585                {
    586                  DebugModifyNum[1] --;
   \   00000046   0xF8DF 0x0D68      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000004A   0x8840             LDRH     R0,[R0, #+2]
   \   0000004C   0x1E40             SUBS     R0,R0,#+1
   \   0000004E   0xF8DF 0x1D60      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000052   0x8048             STRH     R0,[R1, #+2]
    587                  Steer_kp[1] = DebugModifyNum[1];
   \   00000054   0xF8DF 0x0D58      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000058   0x8840             LDRH     R0,[R0, #+2]
   \   0000005A   0xF8DF 0x1D84      LDR.W    R1,??DebugModifyValue_7
   \   0000005E   0x8048             STRH     R0,[R1, #+2]
   \   00000060   0xF001 0xB94C      B.W      ??DebugModifyValue_5
    588                }
    589                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_6: (+1)
   \   00000064   0xF8DF 0x0D44      LDR.W    R0,??DebugModifyValue_3
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2802             CMP      R0,#+2
   \   0000006C   0xD10E             BNE.N    ??DebugModifyValue_8
    590                {
    591                  DebugModifyNum[2] --;
   \   0000006E   0xF8DF 0x0D40      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000072   0x8880             LDRH     R0,[R0, #+4]
   \   00000074   0x1E40             SUBS     R0,R0,#+1
   \   00000076   0xF8DF 0x1D38      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000007A   0x8088             STRH     R0,[R1, #+4]
    592                  Steer_kp[2] = DebugModifyNum[2];
   \   0000007C   0xF8DF 0x0D30      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000080   0x8880             LDRH     R0,[R0, #+4]
   \   00000082   0xF8DF 0x1D5C      LDR.W    R1,??DebugModifyValue_7
   \   00000086   0x8088             STRH     R0,[R1, #+4]
   \   00000088   0xF001 0xB938      B.W      ??DebugModifyValue_5
    593                }
    594                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_8: (+1)
   \   0000008C   0xF8DF 0x0D1C      LDR.W    R0,??DebugModifyValue_3
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0x2803             CMP      R0,#+3
   \   00000094   0xD10E             BNE.N    ??DebugModifyValue_9
    595                {
    596                  DebugModifyNum[3]--;
   \   00000096   0xF8DF 0x0D18      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000009A   0x88C0             LDRH     R0,[R0, #+6]
   \   0000009C   0x1E40             SUBS     R0,R0,#+1
   \   0000009E   0xF8DF 0x1D10      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000000A2   0x80C8             STRH     R0,[R1, #+6]
    597                  Steer_kp[3] = DebugModifyNum[3];
   \   000000A4   0xF8DF 0x0D08      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000000A8   0x88C0             LDRH     R0,[R0, #+6]
   \   000000AA   0xF8DF 0x1D34      LDR.W    R1,??DebugModifyValue_7
   \   000000AE   0x80C8             STRH     R0,[R1, #+6]
   \   000000B0   0xF001 0xB924      B.W      ??DebugModifyValue_5
    598                }
    599                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_9: (+1)
   \   000000B4   0xF8DF 0x0CF4      LDR.W    R0,??DebugModifyValue_3
   \   000000B8   0x7800             LDRB     R0,[R0, #+0]
   \   000000BA   0x2804             CMP      R0,#+4
   \   000000BC   0xD10E             BNE.N    ??DebugModifyValue_10
    600                {
    601                  DebugModifyNum[4]--;
   \   000000BE   0xF8DF 0x0CF0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000000C2   0x8900             LDRH     R0,[R0, #+8]
   \   000000C4   0x1E40             SUBS     R0,R0,#+1
   \   000000C6   0xF8DF 0x1CE8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000000CA   0x8108             STRH     R0,[R1, #+8]
    602                  Steer_kp[4] = DebugModifyNum[4];
   \   000000CC   0xF8DF 0x0CE0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000000D0   0x8900             LDRH     R0,[R0, #+8]
   \   000000D2   0xF8DF 0x1D0C      LDR.W    R1,??DebugModifyValue_7
   \   000000D6   0x8108             STRH     R0,[R1, #+8]
   \   000000D8   0xF001 0xB910      B.W      ??DebugModifyValue_5
    603                }
    604                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_10: (+1)
   \   000000DC   0xF8DF 0x0CCC      LDR.W    R0,??DebugModifyValue_3
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x2805             CMP      R0,#+5
   \   000000E4   0xD10E             BNE.N    ??DebugModifyValue_11
    605                {
    606                  DebugModifyNum[5]--;
   \   000000E6   0xF8DF 0x0CC8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000000EA   0x8940             LDRH     R0,[R0, #+10]
   \   000000EC   0x1E40             SUBS     R0,R0,#+1
   \   000000EE   0xF8DF 0x1CC0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000000F2   0x8148             STRH     R0,[R1, #+10]
    607                  Steer_kp[5] = DebugModifyNum[5];
   \   000000F4   0xF8DF 0x0CB8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000000F8   0x8940             LDRH     R0,[R0, #+10]
   \   000000FA   0xF8DF 0x1CE4      LDR.W    R1,??DebugModifyValue_7
   \   000000FE   0x8148             STRH     R0,[R1, #+10]
   \   00000100   0xF001 0xB8FC      B.W      ??DebugModifyValue_5
    608                }
    609                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_11: (+1)
   \   00000104   0xF8DF 0x0CA4      LDR.W    R0,??DebugModifyValue_3
   \   00000108   0x7800             LDRB     R0,[R0, #+0]
   \   0000010A   0x2806             CMP      R0,#+6
   \   0000010C   0xD10E             BNE.N    ??DebugModifyValue_12
    610                {
    611                  DebugModifyNum[6]--;
   \   0000010E   0xF8DF 0x0CA0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000112   0x8980             LDRH     R0,[R0, #+12]
   \   00000114   0x1E40             SUBS     R0,R0,#+1
   \   00000116   0xF8DF 0x1C98      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000011A   0x8188             STRH     R0,[R1, #+12]
    612                  Steer_kp[6] = DebugModifyNum[6];
   \   0000011C   0xF8DF 0x0C90      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000120   0x8980             LDRH     R0,[R0, #+12]
   \   00000122   0xF8DF 0x1CBC      LDR.W    R1,??DebugModifyValue_7
   \   00000126   0x8188             STRH     R0,[R1, #+12]
   \   00000128   0xF001 0xB8E8      B.W      ??DebugModifyValue_5
    613                }
    614                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_12: (+1)
   \   0000012C   0xF8DF 0x0C7C      LDR.W    R0,??DebugModifyValue_3
   \   00000130   0x7800             LDRB     R0,[R0, #+0]
   \   00000132   0x2807             CMP      R0,#+7
   \   00000134   0xD10E             BNE.N    ??DebugModifyValue_13
    615                {
    616                  DebugModifyNum[7]--;
   \   00000136   0xF8DF 0x0C78      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000013A   0x89C0             LDRH     R0,[R0, #+14]
   \   0000013C   0x1E40             SUBS     R0,R0,#+1
   \   0000013E   0xF8DF 0x1C70      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000142   0x81C8             STRH     R0,[R1, #+14]
    617                  Steer_kp[7] = DebugModifyNum[7];
   \   00000144   0xF8DF 0x0C68      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000148   0x89C0             LDRH     R0,[R0, #+14]
   \   0000014A   0xF8DF 0x1C94      LDR.W    R1,??DebugModifyValue_7
   \   0000014E   0x81C8             STRH     R0,[R1, #+14]
   \   00000150   0xF001 0xB8D4      B.W      ??DebugModifyValue_5
    618                }
    619                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_13: (+1)
   \   00000154   0xF8DF 0x0C54      LDR.W    R0,??DebugModifyValue_3
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x2808             CMP      R0,#+8
   \   0000015C   0xD10E             BNE.N    ??DebugModifyValue_14
    620                {
    621                  DebugModifyNum[8]--;
   \   0000015E   0xF8DF 0x0C50      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000162   0x8A00             LDRH     R0,[R0, #+16]
   \   00000164   0x1E40             SUBS     R0,R0,#+1
   \   00000166   0xF8DF 0x1C48      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000016A   0x8208             STRH     R0,[R1, #+16]
    622                  Steer_kp[0] = DebugModifyNum[8];
   \   0000016C   0xF8DF 0x0C40      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000170   0x8A00             LDRH     R0,[R0, #+16]
   \   00000172   0xF8DF 0x1C6C      LDR.W    R1,??DebugModifyValue_7
   \   00000176   0x8008             STRH     R0,[R1, #+0]
   \   00000178   0xF001 0xB8C0      B.W      ??DebugModifyValue_5
    623                  //LightHouseWaitStopGapCountLimit = DebugModifyNum[8];
    624                }
    625                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_14: (+1)
   \   0000017C   0xF8DF 0x0C2C      LDR.W    R0,??DebugModifyValue_3
   \   00000180   0x7800             LDRB     R0,[R0, #+0]
   \   00000182   0x2809             CMP      R0,#+9
   \   00000184   0xD10E             BNE.N    ??DebugModifyValue_15
    626                {
    627                  DebugModifyNum[9]--;
   \   00000186   0xF8DF 0x0C28      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000018A   0x8A40             LDRH     R0,[R0, #+18]
   \   0000018C   0x1E40             SUBS     R0,R0,#+1
   \   0000018E   0xF8DF 0x1C20      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000192   0x8248             STRH     R0,[R1, #+18]
    628                  SpeedPIDPVal = DebugModifyNum[9];
   \   00000194   0xF8DF 0x0C18      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000198   0x8A40             LDRH     R0,[R0, #+18]
   \   0000019A   0xF8DF 0x1CB8      LDR.W    R1,??DebugModifyValue_16
   \   0000019E   0x8008             STRH     R0,[R1, #+0]
   \   000001A0   0xF001 0xB8AC      B.W      ??DebugModifyValue_5
    629          
    630                  //LimitLeftWBMin = DebugModifyNum[9];
    631                  //LimitRightWBMin = DebugModifyNum[9];
    632                }
    633                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_15: (+1)
   \   000001A4   0xF8DF 0x0C04      LDR.W    R0,??DebugModifyValue_3
   \   000001A8   0x7800             LDRB     R0,[R0, #+0]
   \   000001AA   0x280A             CMP      R0,#+10
   \   000001AC   0xD10E             BNE.N    ??DebugModifyValue_17
    634                {
    635                  DebugModifyNum[10]--;
   \   000001AE   0xF8DF 0x0C00      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000001B2   0x8A80             LDRH     R0,[R0, #+20]
   \   000001B4   0x1E40             SUBS     R0,R0,#+1
   \   000001B6   0xF8DF 0x1BF8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000001BA   0x8288             STRH     R0,[R1, #+20]
    636                  SpeedPIDDVal = DebugModifyNum[10];
   \   000001BC   0xF8DF 0x0BF0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000001C0   0x8A80             LDRH     R0,[R0, #+20]
   \   000001C2   0xF8DF 0x1C94      LDR.W    R1,??DebugModifyValue_16+0x4
   \   000001C6   0x8008             STRH     R0,[R1, #+0]
   \   000001C8   0xF001 0xB898      B.W      ??DebugModifyValue_5
    637          
    638                  //LimitLeftWBMax = DebugModifyNum[10];
    639                  //LimitRightWBMax = DebugModifyNum[10];
    640                }
    641                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_17: (+1)
   \   000001CC   0xF8DF 0x0BDC      LDR.W    R0,??DebugModifyValue_3
   \   000001D0   0x7800             LDRB     R0,[R0, #+0]
   \   000001D2   0x280B             CMP      R0,#+11
   \   000001D4   0xD10E             BNE.N    ??DebugModifyValue_18
    642                {
    643                  DebugModifyNum[11]--;
   \   000001D6   0xF8DF 0x0BD8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000001DA   0x8AC0             LDRH     R0,[R0, #+22]
   \   000001DC   0x1E40             SUBS     R0,R0,#+1
   \   000001DE   0xF8DF 0x1BD0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000001E2   0x82C8             STRH     R0,[R1, #+22]
    644                  SpeedTargetMat[0][5] = DebugModifyNum[11];
   \   000001E4   0xF8DF 0x0BC8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000001E8   0x8AC0             LDRH     R0,[R0, #+22]
   \   000001EA   0xF8DF 0x1C70      LDR.W    R1,??DebugModifyValue_16+0x8
   \   000001EE   0x8148             STRH     R0,[R1, #+10]
   \   000001F0   0xF001 0xB884      B.W      ??DebugModifyValue_5
    645                  //LimitLeftWMin = DebugModifyNum[11];
    646                  //LimitRightWMin = DebugModifyNum[11];
    647                }
    648                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_18: (+1)
   \   000001F4   0xF8DF 0x0BB4      LDR.W    R0,??DebugModifyValue_3
   \   000001F8   0x7800             LDRB     R0,[R0, #+0]
   \   000001FA   0x280C             CMP      R0,#+12
   \   000001FC   0xD114             BNE.N    ??DebugModifyValue_19
    649                {
    650                  DebugModifyNum[12]--;
   \   000001FE   0xF8DF 0x0BB0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000202   0x8B00             LDRH     R0,[R0, #+24]
   \   00000204   0x1E40             SUBS     R0,R0,#+1
   \   00000206   0xF8DF 0x1BA8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000020A   0x8308             STRH     R0,[R1, #+24]
    651                  SpeedTargetMat[0][4] = DebugModifyNum[12];
   \   0000020C   0xF8DF 0x0BA0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000210   0x8B00             LDRH     R0,[R0, #+24]
   \   00000212   0xF8DF 0x1C48      LDR.W    R1,??DebugModifyValue_16+0x8
   \   00000216   0x8108             STRH     R0,[R1, #+8]
    652                  SpeedTargetMat[0][6] = DebugModifyNum[12];
   \   00000218   0xF8DF 0x0B94      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000021C   0x8B00             LDRH     R0,[R0, #+24]
   \   0000021E   0xF8DF 0x1C3C      LDR.W    R1,??DebugModifyValue_16+0x8
   \   00000222   0x8188             STRH     R0,[R1, #+12]
   \   00000224   0xF001 0xB86A      B.W      ??DebugModifyValue_5
    653                  //LimitLeftWMax = DebugModifyNum[12];
    654                  //LimitRightWMax = DebugModifyNum[12];
    655                }
    656                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_19: (+1)
   \   00000228   0xF8DF 0x0B80      LDR.W    R0,??DebugModifyValue_3
   \   0000022C   0x7800             LDRB     R0,[R0, #+0]
   \   0000022E   0x280D             CMP      R0,#+13
   \   00000230   0xD114             BNE.N    ??DebugModifyValue_20
    657                {
    658                  DebugModifyNum[13]--;
   \   00000232   0xF8DF 0x0B7C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000236   0x8B40             LDRH     R0,[R0, #+26]
   \   00000238   0x1E40             SUBS     R0,R0,#+1
   \   0000023A   0xF8DF 0x1B74      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000023E   0x8348             STRH     R0,[R1, #+26]
    659                  SpeedTargetMat[0][3] = DebugModifyNum[13];
   \   00000240   0xF8DF 0x0B6C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000244   0x8B40             LDRH     R0,[R0, #+26]
   \   00000246   0xF8DF 0x1C14      LDR.W    R1,??DebugModifyValue_16+0x8
   \   0000024A   0x80C8             STRH     R0,[R1, #+6]
    660                  SpeedTargetMat[0][7] = DebugModifyNum[13];
   \   0000024C   0xF8DF 0x0B60      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000250   0x8B40             LDRH     R0,[R0, #+26]
   \   00000252   0xF8DF 0x1C08      LDR.W    R1,??DebugModifyValue_16+0x8
   \   00000256   0x81C8             STRH     R0,[R1, #+14]
   \   00000258   0xF001 0xB850      B.W      ??DebugModifyValue_5
    661                  //LimitLeftBMin = DebugModifyNum[13];
    662                  //LimitRightBMin = DebugModifyNum[13];
    663                }
    664                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_20: (+1)
   \   0000025C   0xF8DF 0x0B4C      LDR.W    R0,??DebugModifyValue_3
   \   00000260   0x7800             LDRB     R0,[R0, #+0]
   \   00000262   0x280E             CMP      R0,#+14
   \   00000264   0xF041 0x804A      BNE.W    ??DebugModifyValue_5
    665                {
    666                  DebugModifyNum[14]--;
   \   00000268   0xF8DF 0x0B44      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000026C   0x8B80             LDRH     R0,[R0, #+28]
   \   0000026E   0x1E40             SUBS     R0,R0,#+1
   \   00000270   0xF8DF 0x1B3C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000274   0x8388             STRH     R0,[R1, #+28]
    667                  SpeedTargetMat[0][2] = DebugModifyNum[14];
   \   00000276   0xF8DF 0x0B38      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000027A   0x8B80             LDRH     R0,[R0, #+28]
   \   0000027C   0xF8DF 0x1BDC      LDR.W    R1,??DebugModifyValue_16+0x8
   \   00000280   0x8088             STRH     R0,[R1, #+4]
    668                  SpeedTargetMat[0][8] = DebugModifyNum[14];
   \   00000282   0xF8DF 0x0B2C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000286   0x8B80             LDRH     R0,[R0, #+28]
   \   00000288   0xF8DF 0x1BD0      LDR.W    R1,??DebugModifyValue_16+0x8
   \   0000028C   0x8208             STRH     R0,[R1, #+16]
   \   0000028E   0xF001 0xB835      B.W      ??DebugModifyValue_5
    669                  //LimitLeftBMax = DebugModifyNum[14];
    670                  //LimitRightBMax = DebugModifyNum[14];
    671                }
    672                else
    673                {
    674                }
    675              }
    676              //当前是第1页。
    677              else if(DebugModifyPage == 1)
   \                     ??DebugModifyValue_2: (+1)
   \   00000292   0xF8DF 0x0AF4      LDR.W    R0,??DebugModifyValue_1
   \   00000296   0x7800             LDRB     R0,[R0, #+0]
   \   00000298   0x2801             CMP      R0,#+1
   \   0000029A   0xF040 0x815D      BNE.W    ??DebugModifyValue_21
    678              {
    679                //根据光标位置来改值。
    680                if(DebugModifyCursor == 0)
   \   0000029E   0xF8DF 0x0B0C      LDR.W    R0,??DebugModifyValue_3
   \   000002A2   0x7800             LDRB     R0,[R0, #+0]
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD114             BNE.N    ??DebugModifyValue_22
    681                {
    682                  DebugModifyNum[15]--;
   \   000002A8   0xF8DF 0x0B04      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002AC   0x8BC0             LDRH     R0,[R0, #+30]
   \   000002AE   0x1E40             SUBS     R0,R0,#+1
   \   000002B0   0xF8DF 0x1AFC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000002B4   0x83C8             STRH     R0,[R1, #+30]
    683                  SpeedTargetMat[0][1] = DebugModifyNum[15];
   \   000002B6   0xF8DF 0x0AF8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002BA   0x8BC0             LDRH     R0,[R0, #+30]
   \   000002BC   0xF8DF 0x1B9C      LDR.W    R1,??DebugModifyValue_16+0x8
   \   000002C0   0x8048             STRH     R0,[R1, #+2]
    684                  SpeedTargetMat[0][9] = DebugModifyNum[15];
   \   000002C2   0xF8DF 0x0AEC      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002C6   0x8BC0             LDRH     R0,[R0, #+30]
   \   000002C8   0xF8DF 0x1B90      LDR.W    R1,??DebugModifyValue_16+0x8
   \   000002CC   0x8248             STRH     R0,[R1, #+18]
   \   000002CE   0xF001 0xB815      B.W      ??DebugModifyValue_5
    685                  //ControlRow_Weight[0][0] = DebugModifyNum[15];
    686                }
    687                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_22: (+1)
   \   000002D2   0xF8DF 0x0AD8      LDR.W    R0,??DebugModifyValue_3
   \   000002D6   0x7800             LDRB     R0,[R0, #+0]
   \   000002D8   0x2801             CMP      R0,#+1
   \   000002DA   0xD114             BNE.N    ??DebugModifyValue_23
    688                {
    689                  DebugModifyNum[16]--;
   \   000002DC   0xF8DF 0x0AD0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002E0   0x8C00             LDRH     R0,[R0, #+32]
   \   000002E2   0x1E40             SUBS     R0,R0,#+1
   \   000002E4   0xF8DF 0x1AC8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000002E8   0x8408             STRH     R0,[R1, #+32]
    690                  SpeedTargetMat[0][0] = DebugModifyNum[16];
   \   000002EA   0xF8DF 0x0AC4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002EE   0x8C00             LDRH     R0,[R0, #+32]
   \   000002F0   0xF8DF 0x1B68      LDR.W    R1,??DebugModifyValue_16+0x8
   \   000002F4   0x8008             STRH     R0,[R1, #+0]
    691                  SpeedTargetMat[0][10] = DebugModifyNum[16];
   \   000002F6   0xF8DF 0x0AB8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000002FA   0x8C00             LDRH     R0,[R0, #+32]
   \   000002FC   0xF8DF 0x1B5C      LDR.W    R1,??DebugModifyValue_16+0x8
   \   00000300   0x8288             STRH     R0,[R1, #+20]
   \   00000302   0xF000 0xBFFB      B.W      ??DebugModifyValue_5
    692                  //ControlRow_Weight[1][0]  = DebugModifyNum[16];
    693                }
    694                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_23: (+1)
   \   00000306   0xF8DF 0x0AA4      LDR.W    R0,??DebugModifyValue_3
   \   0000030A   0x7800             LDRB     R0,[R0, #+0]
   \   0000030C   0x2802             CMP      R0,#+2
   \   0000030E   0xD10E             BNE.N    ??DebugModifyValue_24
    695                { 
    696                  DebugModifyNum[17]--;
   \   00000310   0xF8DF 0x0A9C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000314   0x8C40             LDRH     R0,[R0, #+34]
   \   00000316   0x1E40             SUBS     R0,R0,#+1
   \   00000318   0xF8DF 0x1A94      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000031C   0x8448             STRH     R0,[R1, #+34]
    697                  BrickConfirmMatLimit = DebugModifyNum[17];      //障碍标志存储数组中障碍的个数大于该值时，则锁存为障碍。
   \   0000031E   0xF8DF 0x0A90      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000322   0x8C40             LDRH     R0,[R0, #+34]
   \   00000324   0xF8DF 0x1B38      LDR.W    R1,??DebugModifyValue_16+0xC
   \   00000328   0x7008             STRB     R0,[R1, #+0]
   \   0000032A   0xF000 0xBFE7      B.W      ??DebugModifyValue_5
    698                  //ControlRow_Weight[2][0]  = DebugModifyNum[17];
    699                }
    700                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_24: (+1)
   \   0000032E   0xF8DF 0x0A7C      LDR.W    R0,??DebugModifyValue_3
   \   00000332   0x7800             LDRB     R0,[R0, #+0]
   \   00000334   0x2803             CMP      R0,#+3
   \   00000336   0xD10E             BNE.N    ??DebugModifyValue_25
    701                {
    702                  DebugModifyNum[18]--;
   \   00000338   0xF8DF 0x0A74      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000033C   0x8C80             LDRH     R0,[R0, #+36]
   \   0000033E   0x1E40             SUBS     R0,R0,#+1
   \   00000340   0xF8DF 0x1A6C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000344   0x8488             STRH     R0,[R1, #+36]
    703                  BrickConfirmFinalColCom = DebugModifyNum[18];   //障碍躲避时的列修正量（以15为零，左减右加。）
   \   00000346   0xF8DF 0x0A68      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000034A   0x8C80             LDRH     R0,[R0, #+36]
   \   0000034C   0xF8DF 0x1B14      LDR.W    R1,??DebugModifyValue_16+0x10
   \   00000350   0x7008             STRB     R0,[R1, #+0]
   \   00000352   0xF000 0xBFD3      B.W      ??DebugModifyValue_5
    704                  //ControlRow_Weight[3][0]  = DebugModifyNum[18];
    705                }
    706                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_25: (+1)
   \   00000356   0xF8DF 0x0A54      LDR.W    R0,??DebugModifyValue_3
   \   0000035A   0x7800             LDRB     R0,[R0, #+0]
   \   0000035C   0x2804             CMP      R0,#+4
   \   0000035E   0xD114             BNE.N    ??DebugModifyValue_26
    707                {
    708                  DebugModifyNum[19]--;
   \   00000360   0xF8DF 0x0A4C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000364   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000366   0x1E40             SUBS     R0,R0,#+1
   \   00000368   0xF8DF 0x1A44      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000036C   0x84C8             STRH     R0,[R1, #+38]
    709                  LimitLeftWBMin = DebugModifyNum[19];
   \   0000036E   0xF8DF 0x0A40      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000372   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000374   0xF8DF 0x1AF0      LDR.W    R1,??DebugModifyValue_16+0x14
   \   00000378   0x7008             STRB     R0,[R1, #+0]
    710                  LimitRightWBMin = DebugModifyNum[19];
   \   0000037A   0xF8DF 0x0A34      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000037E   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000380   0xF8DF 0x1AE8      LDR.W    R1,??DebugModifyValue_16+0x18
   \   00000384   0x7008             STRB     R0,[R1, #+0]
   \   00000386   0xF000 0xBFB9      B.W      ??DebugModifyValue_5
    711                  //ControlRow_Weight[0][1]  = DebugModifyNum[19];
    712                }
    713                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_26: (+1)
   \   0000038A   0xF8DF 0x0A20      LDR.W    R0,??DebugModifyValue_3
   \   0000038E   0x7800             LDRB     R0,[R0, #+0]
   \   00000390   0x2805             CMP      R0,#+5
   \   00000392   0xD114             BNE.N    ??DebugModifyValue_27
    714                {
    715                  DebugModifyNum[20]--;
   \   00000394   0xF8DF 0x0A18      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000398   0x8D00             LDRH     R0,[R0, #+40]
   \   0000039A   0x1E40             SUBS     R0,R0,#+1
   \   0000039C   0xF8DF 0x1A10      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000003A0   0x8508             STRH     R0,[R1, #+40]
    716                  LimitLeftWBMax = DebugModifyNum[20];
   \   000003A2   0xF8DF 0x0A0C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000003A6   0x8D00             LDRH     R0,[R0, #+40]
   \   000003A8   0xF8DF 0x1AC4      LDR.W    R1,??DebugModifyValue_16+0x1C
   \   000003AC   0x7008             STRB     R0,[R1, #+0]
    717                  LimitRightWBMax = DebugModifyNum[20];
   \   000003AE   0xF8DF 0x0A00      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000003B2   0x8D00             LDRH     R0,[R0, #+40]
   \   000003B4   0xF8DF 0x1D64      LDR.W    R1,??DebugModifyValue_28
   \   000003B8   0x7008             STRB     R0,[R1, #+0]
   \   000003BA   0xF000 0xBF9F      B.W      ??DebugModifyValue_5
    718                  //ControlRow_Weight[1][1] = DebugModifyNum[20];
    719                }
    720                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_27: (+1)
   \   000003BE   0xF8DF 0x09EC      LDR.W    R0,??DebugModifyValue_3
   \   000003C2   0x7800             LDRB     R0,[R0, #+0]
   \   000003C4   0x2806             CMP      R0,#+6
   \   000003C6   0xD114             BNE.N    ??DebugModifyValue_29
    721                {
    722                  DebugModifyNum[21]--;
   \   000003C8   0xF8DF 0x09E4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000003CC   0x8D40             LDRH     R0,[R0, #+42]
   \   000003CE   0x1E40             SUBS     R0,R0,#+1
   \   000003D0   0xF8DF 0x19DC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000003D4   0x8548             STRH     R0,[R1, #+42]
    723                  LimitLeftWMin = DebugModifyNum[21];
   \   000003D6   0xF8DF 0x09D8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000003DA   0x8D40             LDRH     R0,[R0, #+42]
   \   000003DC   0xF8DF 0x1D40      LDR.W    R1,??DebugModifyValue_28+0x4
   \   000003E0   0x7008             STRB     R0,[R1, #+0]
    724                  LimitRightWMin = DebugModifyNum[21];
   \   000003E2   0xF8DF 0x09CC      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000003E6   0x8D40             LDRH     R0,[R0, #+42]
   \   000003E8   0xF8DF 0x1D38      LDR.W    R1,??DebugModifyValue_28+0x8
   \   000003EC   0x7008             STRB     R0,[R1, #+0]
   \   000003EE   0xF000 0xBF85      B.W      ??DebugModifyValue_5
    725                  //ControlRow_Weight[2][1] = DebugModifyNum[21];
    726                }
    727                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_29: (+1)
   \   000003F2   0xF8DF 0x09B8      LDR.W    R0,??DebugModifyValue_3
   \   000003F6   0x7800             LDRB     R0,[R0, #+0]
   \   000003F8   0x2807             CMP      R0,#+7
   \   000003FA   0xD114             BNE.N    ??DebugModifyValue_30
    728                {
    729                  DebugModifyNum[22]--;
   \   000003FC   0xF8DF 0x09B0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000400   0x8D80             LDRH     R0,[R0, #+44]
   \   00000402   0x1E40             SUBS     R0,R0,#+1
   \   00000404   0xF8DF 0x19A8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000408   0x8588             STRH     R0,[R1, #+44]
    730                  LimitLeftWMax = DebugModifyNum[22];
   \   0000040A   0xF8DF 0x09A4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000040E   0x8D80             LDRH     R0,[R0, #+44]
   \   00000410   0xF8DF 0x1D40      LDR.W    R1,??DebugModifyValue_31
   \   00000414   0x7008             STRB     R0,[R1, #+0]
    731                  LimitRightWMax = DebugModifyNum[22]; 
   \   00000416   0xF8DF 0x0998      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000041A   0x8D80             LDRH     R0,[R0, #+44]
   \   0000041C   0xF8DF 0x1D38      LDR.W    R1,??DebugModifyValue_31+0x4
   \   00000420   0x7008             STRB     R0,[R1, #+0]
   \   00000422   0xF000 0xBF6B      B.W      ??DebugModifyValue_5
    732                  //ControlRow_Weight[3][1] = DebugModifyNum[22];
    733                }
    734                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_30: (+1)
   \   00000426   0xF8DF 0x0984      LDR.W    R0,??DebugModifyValue_3
   \   0000042A   0x7800             LDRB     R0,[R0, #+0]
   \   0000042C   0x2808             CMP      R0,#+8
   \   0000042E   0xD114             BNE.N    ??DebugModifyValue_32
    735                {
    736                  DebugModifyNum[23]--;
   \   00000430   0xF8DF 0x097C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000434   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000436   0x1E40             SUBS     R0,R0,#+1
   \   00000438   0xF8DF 0x1974      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000043C   0x85C8             STRH     R0,[R1, #+46]
    737                  LimitLeftBMin = DebugModifyNum[23];
   \   0000043E   0xF8DF 0x0970      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000442   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000444   0xF8DF 0x1D14      LDR.W    R1,??DebugModifyValue_31+0x8
   \   00000448   0x7008             STRB     R0,[R1, #+0]
    738                  LimitRightBMin = DebugModifyNum[23];
   \   0000044A   0xF8DF 0x0964      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000044E   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000450   0xF8DF 0x1D0C      LDR.W    R1,??DebugModifyValue_31+0xC
   \   00000454   0x7008             STRB     R0,[R1, #+0]
   \   00000456   0xF000 0xBF51      B.W      ??DebugModifyValue_5
    739                  //ControlRow_Weight[0][2] = DebugModifyNum[23];
    740                }
    741                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_32: (+1)
   \   0000045A   0xF8DF 0x0950      LDR.W    R0,??DebugModifyValue_3
   \   0000045E   0x7800             LDRB     R0,[R0, #+0]
   \   00000460   0x2809             CMP      R0,#+9
   \   00000462   0xD114             BNE.N    ??DebugModifyValue_33
    742                {
    743                  DebugModifyNum[24]--;
   \   00000464   0xF8DF 0x0948      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000468   0x8E00             LDRH     R0,[R0, #+48]
   \   0000046A   0x1E40             SUBS     R0,R0,#+1
   \   0000046C   0xF8DF 0x1940      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000470   0x8608             STRH     R0,[R1, #+48]
    744                  LimitLeftBMax = DebugModifyNum[24];
   \   00000472   0xF8DF 0x093C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000476   0x8E00             LDRH     R0,[R0, #+48]
   \   00000478   0xF8DF 0x1CE8      LDR.W    R1,??DebugModifyValue_31+0x10
   \   0000047C   0x7008             STRB     R0,[R1, #+0]
    745                  LimitRightBMax = DebugModifyNum[24];
   \   0000047E   0xF8DF 0x0930      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000482   0x8E00             LDRH     R0,[R0, #+48]
   \   00000484   0xF8DF 0x1CE0      LDR.W    R1,??DebugModifyValue_31+0x14
   \   00000488   0x7008             STRB     R0,[R1, #+0]
   \   0000048A   0xF000 0xBF37      B.W      ??DebugModifyValue_5
    746                  //ControlRow_Weight[1][2] = DebugModifyNum[24];
    747                }
    748                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_33: (+1)
   \   0000048E   0xF8DF 0x091C      LDR.W    R0,??DebugModifyValue_3
   \   00000492   0x7800             LDRB     R0,[R0, #+0]
   \   00000494   0x280A             CMP      R0,#+10
   \   00000496   0xD10E             BNE.N    ??DebugModifyValue_34
    749                {
    750                  DebugModifyNum[25]--;
   \   00000498   0xF8DF 0x0914      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000049C   0x8E40             LDRH     R0,[R0, #+50]
   \   0000049E   0x1E40             SUBS     R0,R0,#+1
   \   000004A0   0xF8DF 0x190C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000004A4   0x8648             STRH     R0,[R1, #+50]
    751                  SpeedTargetValStraight = DebugModifyNum[25];
   \   000004A6   0xF8DF 0x0908      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000004AA   0x8E40             LDRH     R0,[R0, #+50]
   \   000004AC   0xF8DF 0x1CBC      LDR.W    R1,??DebugModifyValue_31+0x18
   \   000004B0   0x8008             STRH     R0,[R1, #+0]
   \   000004B2   0xF000 0xBF23      B.W      ??DebugModifyValue_5
    752                  //ControlRow_Weight[2][2] = DebugModifyNum[25];
    753                }
    754                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_34: (+1)
   \   000004B6   0xF8DF 0x08F4      LDR.W    R0,??DebugModifyValue_3
   \   000004BA   0x7800             LDRB     R0,[R0, #+0]
   \   000004BC   0x280B             CMP      R0,#+11
   \   000004BE   0xD10E             BNE.N    ??DebugModifyValue_35
    755                {
    756                  DebugModifyNum[26]--;
   \   000004C0   0xF8DF 0x08EC      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000004C4   0x8E80             LDRH     R0,[R0, #+52]
   \   000004C6   0x1E40             SUBS     R0,R0,#+1
   \   000004C8   0xF8DF 0x18E4      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000004CC   0x8688             STRH     R0,[R1, #+52]
    757                  SpeedBrick = DebugModifyNum[26];
   \   000004CE   0xF8DF 0x08E0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000004D2   0x8E80             LDRH     R0,[R0, #+52]
   \   000004D4   0xF8DF 0x1C98      LDR.W    R1,??DebugModifyValue_31+0x1C
   \   000004D8   0x8008             STRH     R0,[R1, #+0]
   \   000004DA   0xF000 0xBF0F      B.W      ??DebugModifyValue_5
    758                  //ControlRow_Weight[3][2] = DebugModifyNum[26];
    759                }
    760                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_35: (+1)
   \   000004DE   0xF8DF 0x08CC      LDR.W    R0,??DebugModifyValue_3
   \   000004E2   0x7800             LDRB     R0,[R0, #+0]
   \   000004E4   0x280C             CMP      R0,#+12
   \   000004E6   0xD10E             BNE.N    ??DebugModifyValue_36
    761                {
    762                  DebugModifyNum[27]--;
   \   000004E8   0xF8DF 0x08C4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000004EC   0x8EC0             LDRH     R0,[R0, #+54]
   \   000004EE   0x1E40             SUBS     R0,R0,#+1
   \   000004F0   0xF8DF 0x18BC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000004F4   0x86C8             STRH     R0,[R1, #+54]
    763                  SpeedTargetValGryoUp = DebugModifyNum[27];
   \   000004F6   0xF8DF 0x08B8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000004FA   0x8EC0             LDRH     R0,[R0, #+54]
   \   000004FC   0xF8DF 0x1C74      LDR.W    R1,??DebugModifyValue_31+0x20
   \   00000500   0x8008             STRH     R0,[R1, #+0]
   \   00000502   0xF000 0xBEFB      B.W      ??DebugModifyValue_5
    764                  //ControlRow_Weight[0][3] = DebugModifyNum[27];
    765                }
    766                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_36: (+1)
   \   00000506   0xF8DF 0x08A4      LDR.W    R0,??DebugModifyValue_3
   \   0000050A   0x7800             LDRB     R0,[R0, #+0]
   \   0000050C   0x280D             CMP      R0,#+13
   \   0000050E   0xD10E             BNE.N    ??DebugModifyValue_37
    767                {
    768                  DebugModifyNum[28]--;
   \   00000510   0xF8DF 0x089C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000514   0x8F00             LDRH     R0,[R0, #+56]
   \   00000516   0x1E40             SUBS     R0,R0,#+1
   \   00000518   0xF8DF 0x1894      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000051C   0x8708             STRH     R0,[R1, #+56]
    769                  SpeedTargetValGryoResult = DebugModifyNum[28];
   \   0000051E   0xF8DF 0x0890      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000522   0x8F00             LDRH     R0,[R0, #+56]
   \   00000524   0xF8DF 0x1C50      LDR.W    R1,??DebugModifyValue_31+0x24
   \   00000528   0x7008             STRB     R0,[R1, #+0]
   \   0000052A   0xF000 0xBEE7      B.W      ??DebugModifyValue_5
    770                  //ControlRow_Weight[1][3] = DebugModifyNum[28];
    771                }
    772                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_37: (+1)
   \   0000052E   0xF8DF 0x087C      LDR.W    R0,??DebugModifyValue_3
   \   00000532   0x7800             LDRB     R0,[R0, #+0]
   \   00000534   0x280E             CMP      R0,#+14
   \   00000536   0xF040 0x86E1      BNE.W    ??DebugModifyValue_5
    773                {
    774                  DebugModifyNum[29]--;
   \   0000053A   0xF8DF 0x0874      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000053E   0x8F40             LDRH     R0,[R0, #+58]
   \   00000540   0x1E40             SUBS     R0,R0,#+1
   \   00000542   0xF8DF 0x186C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000546   0x8748             STRH     R0,[R1, #+58]
    775                  SpeedXiaoZhiDao = DebugModifyNum[29];
   \   00000548   0xF8DF 0x0864      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000054C   0x8F40             LDRH     R0,[R0, #+58]
   \   0000054E   0xF8DF 0x1C2C      LDR.W    R1,??DebugModifyValue_31+0x28
   \   00000552   0x8008             STRH     R0,[R1, #+0]
   \   00000554   0xF000 0xBED2      B.W      ??DebugModifyValue_5
    776                  //ControlRow_Weight[2][3] = DebugModifyNum[29];
    777                }
    778                else
    779                {
    780                }
    781              }
    782              //当前是第2页。
    783              else if(DebugModifyPage == 2)
   \                     ??DebugModifyValue_21: (+1)
   \   00000558   0xF8DF 0x082C      LDR.W    R0,??DebugModifyValue_1
   \   0000055C   0x7800             LDRB     R0,[R0, #+0]
   \   0000055E   0x2802             CMP      R0,#+2
   \   00000560   0xF040 0x80ED      BNE.W    ??DebugModifyValue_38
    784              {
    785                //根据光标位置来改值。
    786                if(DebugModifyCursor == 0)
   \   00000564   0xF8DF 0x0844      LDR.W    R0,??DebugModifyValue_3
   \   00000568   0x7800             LDRB     R0,[R0, #+0]
   \   0000056A   0x2800             CMP      R0,#+0
   \   0000056C   0xD108             BNE.N    ??DebugModifyValue_39
    787                {
    788                  DebugModifyNum[30]--;
   \   0000056E   0xF8DF 0x0840      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000572   0x8F80             LDRH     R0,[R0, #+60]
   \   00000574   0x1E40             SUBS     R0,R0,#+1
   \   00000576   0xF8DF 0x1838      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000057A   0x8788             STRH     R0,[R1, #+60]
   \   0000057C   0xF000 0xBEBE      B.W      ??DebugModifyValue_5
    789                  //ControlRow_Weight[3][3] = DebugModifyNum[30];
    790                }
    791                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_39: (+1)
   \   00000580   0xF8DF 0x0828      LDR.W    R0,??DebugModifyValue_3
   \   00000584   0x7800             LDRB     R0,[R0, #+0]
   \   00000586   0x2801             CMP      R0,#+1
   \   00000588   0xD108             BNE.N    ??DebugModifyValue_40
    792                {
    793                  DebugModifyNum[31]--;
   \   0000058A   0xF8DF 0x0824      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000058E   0x8FC0             LDRH     R0,[R0, #+62]
   \   00000590   0x1E40             SUBS     R0,R0,#+1
   \   00000592   0xF8DF 0x181C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000596   0x87C8             STRH     R0,[R1, #+62]
   \   00000598   0xF000 0xBEB0      B.W      ??DebugModifyValue_5
    794                  //ControlRow_Weight[0][4]  = DebugModifyNum[31];
    795                }
    796                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_40: (+1)
   \   0000059C   0xF8DF 0x080C      LDR.W    R0,??DebugModifyValue_3
   \   000005A0   0x7800             LDRB     R0,[R0, #+0]
   \   000005A2   0x2802             CMP      R0,#+2
   \   000005A4   0xD10A             BNE.N    ??DebugModifyValue_41
    797                {
    798                  DebugModifyNum[32]--;
   \   000005A6   0xF8DF 0x0808      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000005AA   0xF8B0 0x0040      LDRH     R0,[R0, #+64]
   \   000005AE   0x1E40             SUBS     R0,R0,#+1
   \   000005B0   0xF8DF 0x17FC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000005B4   0xF8A1 0x0040      STRH     R0,[R1, #+64]
   \   000005B8   0xF000 0xBEA0      B.W      ??DebugModifyValue_5
    799                  //ControlRow_Weight[1][4]  = DebugModifyNum[32];
    800                }
    801                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_41: (+1)
   \   000005BC   0xF8DF 0x07EC      LDR.W    R0,??DebugModifyValue_3
   \   000005C0   0x7800             LDRB     R0,[R0, #+0]
   \   000005C2   0x2803             CMP      R0,#+3
   \   000005C4   0xD10A             BNE.N    ??DebugModifyValue_42
    802                {
    803                  DebugModifyNum[33]--;
   \   000005C6   0xF8DF 0x07E8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000005CA   0xF8B0 0x0042      LDRH     R0,[R0, #+66]
   \   000005CE   0x1E40             SUBS     R0,R0,#+1
   \   000005D0   0xF8DF 0x17DC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000005D4   0xF8A1 0x0042      STRH     R0,[R1, #+66]
   \   000005D8   0xF000 0xBE90      B.W      ??DebugModifyValue_5
    804                  //ControlRow_Weight[2][4]  = DebugModifyNum[33];
    805                }
    806                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_42: (+1)
   \   000005DC   0xF8DF 0x07CC      LDR.W    R0,??DebugModifyValue_3
   \   000005E0   0x7800             LDRB     R0,[R0, #+0]
   \   000005E2   0x2804             CMP      R0,#+4
   \   000005E4   0xD10A             BNE.N    ??DebugModifyValue_43
    807                {
    808                  DebugModifyNum[34]--;
   \   000005E6   0xF8DF 0x07C8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000005EA   0xF8B0 0x0044      LDRH     R0,[R0, #+68]
   \   000005EE   0x1E40             SUBS     R0,R0,#+1
   \   000005F0   0xF8DF 0x17BC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000005F4   0xF8A1 0x0044      STRH     R0,[R1, #+68]
   \   000005F8   0xF000 0xBE80      B.W      ??DebugModifyValue_5
    809                  //ControlRow_Weight[3][4]  = DebugModifyNum[34];
    810                }
    811                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_43: (+1)
   \   000005FC   0xF8DF 0x07AC      LDR.W    R0,??DebugModifyValue_3
   \   00000600   0x7800             LDRB     R0,[R0, #+0]
   \   00000602   0x2805             CMP      R0,#+5
   \   00000604   0xD10A             BNE.N    ??DebugModifyValue_44
    812                {
    813                  DebugModifyNum[35]--;
   \   00000606   0xF8DF 0x07A8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000060A   0xF8B0 0x0046      LDRH     R0,[R0, #+70]
   \   0000060E   0x1E40             SUBS     R0,R0,#+1
   \   00000610   0xF8DF 0x179C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000614   0xF8A1 0x0046      STRH     R0,[R1, #+70]
   \   00000618   0xF000 0xBE70      B.W      ??DebugModifyValue_5
    814                  //ControlRow_Weight[0][5] = DebugModifyNum[35];
    815                }
    816                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_44: (+1)
   \   0000061C   0xF8DF 0x078C      LDR.W    R0,??DebugModifyValue_3
   \   00000620   0x7800             LDRB     R0,[R0, #+0]
   \   00000622   0x2806             CMP      R0,#+6
   \   00000624   0xD10A             BNE.N    ??DebugModifyValue_45
    817                {
    818                  DebugModifyNum[36]--;
   \   00000626   0xF8DF 0x0788      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000062A   0xF8B0 0x0048      LDRH     R0,[R0, #+72]
   \   0000062E   0x1E40             SUBS     R0,R0,#+1
   \   00000630   0xF8DF 0x177C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000634   0xF8A1 0x0048      STRH     R0,[R1, #+72]
   \   00000638   0xF000 0xBE60      B.W      ??DebugModifyValue_5
    819                  //ControlRow_Weight[1][5] = DebugModifyNum[36];
    820                }
    821                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_45: (+1)
   \   0000063C   0xF8DF 0x076C      LDR.W    R0,??DebugModifyValue_3
   \   00000640   0x7800             LDRB     R0,[R0, #+0]
   \   00000642   0x2807             CMP      R0,#+7
   \   00000644   0xD10A             BNE.N    ??DebugModifyValue_46
    822                {
    823                  DebugModifyNum[37]--;
   \   00000646   0xF8DF 0x0768      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000064A   0xF8B0 0x004A      LDRH     R0,[R0, #+74]
   \   0000064E   0x1E40             SUBS     R0,R0,#+1
   \   00000650   0xF8DF 0x175C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000654   0xF8A1 0x004A      STRH     R0,[R1, #+74]
   \   00000658   0xF000 0xBE50      B.W      ??DebugModifyValue_5
    824                  //ControlRow_Weight[2][5] = DebugModifyNum[37];
    825                }
    826                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_46: (+1)
   \   0000065C   0xF8DF 0x074C      LDR.W    R0,??DebugModifyValue_3
   \   00000660   0x7800             LDRB     R0,[R0, #+0]
   \   00000662   0x2808             CMP      R0,#+8
   \   00000664   0xD10A             BNE.N    ??DebugModifyValue_47
    827                {
    828                  DebugModifyNum[38]--;
   \   00000666   0xF8DF 0x0748      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000066A   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   0000066E   0x1E40             SUBS     R0,R0,#+1
   \   00000670   0xF8DF 0x173C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000674   0xF8A1 0x004C      STRH     R0,[R1, #+76]
   \   00000678   0xF000 0xBE40      B.W      ??DebugModifyValue_5
    829                  //ControlRow_Weight[3][5] = DebugModifyNum[38];
    830                }
    831                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_47: (+1)
   \   0000067C   0xF8DF 0x072C      LDR.W    R0,??DebugModifyValue_3
   \   00000680   0x7800             LDRB     R0,[R0, #+0]
   \   00000682   0x2809             CMP      R0,#+9
   \   00000684   0xD10A             BNE.N    ??DebugModifyValue_48
    832                {
    833                  DebugModifyNum[39]--;
   \   00000686   0xF8DF 0x0728      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000068A   0xF8B0 0x004E      LDRH     R0,[R0, #+78]
   \   0000068E   0x1E40             SUBS     R0,R0,#+1
   \   00000690   0xF8DF 0x171C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000694   0xF8A1 0x004E      STRH     R0,[R1, #+78]
   \   00000698   0xF000 0xBE30      B.W      ??DebugModifyValue_5
    834                  //ControlRow_Weight[0][6] = DebugModifyNum[39];
    835                }
    836                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_48: (+1)
   \   0000069C   0xF8DF 0x070C      LDR.W    R0,??DebugModifyValue_3
   \   000006A0   0x7800             LDRB     R0,[R0, #+0]
   \   000006A2   0x280A             CMP      R0,#+10
   \   000006A4   0xD10A             BNE.N    ??DebugModifyValue_49
    837                {
    838                  DebugModifyNum[40]--;
   \   000006A6   0xF8DF 0x0708      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000006AA   0xF8B0 0x0050      LDRH     R0,[R0, #+80]
   \   000006AE   0x1E40             SUBS     R0,R0,#+1
   \   000006B0   0xF8DF 0x16FC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000006B4   0xF8A1 0x0050      STRH     R0,[R1, #+80]
   \   000006B8   0xF000 0xBE20      B.W      ??DebugModifyValue_5
    839                  //ControlRow_Weight[1][6] = DebugModifyNum[40];
    840                }
    841                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_49: (+1)
   \   000006BC   0xF8DF 0x06EC      LDR.W    R0,??DebugModifyValue_3
   \   000006C0   0x7800             LDRB     R0,[R0, #+0]
   \   000006C2   0x280B             CMP      R0,#+11
   \   000006C4   0xD10A             BNE.N    ??DebugModifyValue_50
    842                {
    843                  DebugModifyNum[41]--;
   \   000006C6   0xF8DF 0x06E8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000006CA   0xF8B0 0x0052      LDRH     R0,[R0, #+82]
   \   000006CE   0x1E40             SUBS     R0,R0,#+1
   \   000006D0   0xF8DF 0x16DC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000006D4   0xF8A1 0x0052      STRH     R0,[R1, #+82]
   \   000006D8   0xF000 0xBE10      B.W      ??DebugModifyValue_5
    844                  //ControlRow_Weight[2][6] = DebugModifyNum[41];
    845                }
    846                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_50: (+1)
   \   000006DC   0xF8DF 0x06CC      LDR.W    R0,??DebugModifyValue_3
   \   000006E0   0x7800             LDRB     R0,[R0, #+0]
   \   000006E2   0x280C             CMP      R0,#+12
   \   000006E4   0xD10A             BNE.N    ??DebugModifyValue_51
    847                {
    848                  DebugModifyNum[42]--;
   \   000006E6   0xF8DF 0x06C8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000006EA   0xF8B0 0x0054      LDRH     R0,[R0, #+84]
   \   000006EE   0x1E40             SUBS     R0,R0,#+1
   \   000006F0   0xF8DF 0x16BC      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000006F4   0xF8A1 0x0054      STRH     R0,[R1, #+84]
   \   000006F8   0xF000 0xBE00      B.W      ??DebugModifyValue_5
    849                  //ControlRow_Weight[3][6] = DebugModifyNum[42];
    850                }
    851                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_51: (+1)
   \   000006FC   0xF8DF 0x06AC      LDR.W    R0,??DebugModifyValue_3
   \   00000700   0x7800             LDRB     R0,[R0, #+0]
   \   00000702   0x280D             CMP      R0,#+13
   \   00000704   0xD10A             BNE.N    ??DebugModifyValue_52
    852                {
    853                  DebugModifyNum[43]--;
   \   00000706   0xF8DF 0x06A8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000070A   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   0000070E   0x1E40             SUBS     R0,R0,#+1
   \   00000710   0xF8DF 0x169C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000714   0xF8A1 0x0056      STRH     R0,[R1, #+86]
   \   00000718   0xF000 0xBDF0      B.W      ??DebugModifyValue_5
    854                  //ControlRow_Weight[0][7] = DebugModifyNum[43];
    855                }
    856                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_52: (+1)
   \   0000071C   0xF8DF 0x068C      LDR.W    R0,??DebugModifyValue_3
   \   00000720   0x7800             LDRB     R0,[R0, #+0]
   \   00000722   0x280E             CMP      R0,#+14
   \   00000724   0xF040 0x85EA      BNE.W    ??DebugModifyValue_5
    857                {
    858                  DebugModifyNum[44]--;
   \   00000728   0xF8DF 0x0684      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000072C   0xF8B0 0x0058      LDRH     R0,[R0, #+88]
   \   00000730   0x1E40             SUBS     R0,R0,#+1
   \   00000732   0xF8DF 0x167C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000736   0xF8A1 0x0058      STRH     R0,[R1, #+88]
   \   0000073A   0xF000 0xBDDF      B.W      ??DebugModifyValue_5
    859                  //ControlRow_Weight[1][7] = DebugModifyNum[44];
    860                }
    861                else
    862                {
    863                }
    864              }
    865              //当前是第3页。
    866              else if(DebugModifyPage == 3)
   \                     ??DebugModifyValue_38: (+1)
   \   0000073E   0xF8DF 0x0648      LDR.W    R0,??DebugModifyValue_1
   \   00000742   0x7800             LDRB     R0,[R0, #+0]
   \   00000744   0x2803             CMP      R0,#+3
   \   00000746   0xF040 0x85D9      BNE.W    ??DebugModifyValue_5
    867              {
    868                //根据光标位置来改值。
    869                if(DebugModifyCursor == 0)
   \   0000074A   0xF8DF 0x0660      LDR.W    R0,??DebugModifyValue_3
   \   0000074E   0x7800             LDRB     R0,[R0, #+0]
   \   00000750   0x2800             CMP      R0,#+0
   \   00000752   0xD10A             BNE.N    ??DebugModifyValue_53
    870                {
    871                  DebugModifyNum[45]--;
   \   00000754   0xF8DF 0x0658      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000758   0xF8B0 0x005A      LDRH     R0,[R0, #+90]
   \   0000075C   0x1E40             SUBS     R0,R0,#+1
   \   0000075E   0xF8DF 0x1650      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000762   0xF8A1 0x005A      STRH     R0,[R1, #+90]
   \   00000766   0xF000 0xBDC9      B.W      ??DebugModifyValue_5
    872                  //ControlRow_Weight[2][7] = DebugModifyNum[45];
    873                }
    874                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_53: (+1)
   \   0000076A   0xF8DF 0x0640      LDR.W    R0,??DebugModifyValue_3
   \   0000076E   0x7800             LDRB     R0,[R0, #+0]
   \   00000770   0x2801             CMP      R0,#+1
   \   00000772   0xD10A             BNE.N    ??DebugModifyValue_54
    875                {
    876                  DebugModifyNum[46]--;
   \   00000774   0xF8DF 0x0638      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000778   0xF8B0 0x005C      LDRH     R0,[R0, #+92]
   \   0000077C   0x1E40             SUBS     R0,R0,#+1
   \   0000077E   0xF8DF 0x1630      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000782   0xF8A1 0x005C      STRH     R0,[R1, #+92]
   \   00000786   0xF000 0xBDB9      B.W      ??DebugModifyValue_5
    877                  //ControlRow_Weight[3][7]  = DebugModifyNum[46];
    878                }
    879                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_54: (+1)
   \   0000078A   0xF8DF 0x0620      LDR.W    R0,??DebugModifyValue_3
   \   0000078E   0x7800             LDRB     R0,[R0, #+0]
   \   00000790   0x2802             CMP      R0,#+2
   \   00000792   0xD10A             BNE.N    ??DebugModifyValue_55
    880                {
    881                  DebugModifyNum[47] -= 10;;
   \   00000794   0xF8DF 0x0618      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000798   0xF8B0 0x005E      LDRH     R0,[R0, #+94]
   \   0000079C   0x380A             SUBS     R0,R0,#+10
   \   0000079E   0xF8DF 0x1610      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000007A2   0xF8A1 0x005E      STRH     R0,[R1, #+94]
   \   000007A6   0xF000 0xBDA9      B.W      ??DebugModifyValue_5
    882                  //TimeRealRun -= 10;
    883                }
    884                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_55: (+1)
   \   000007AA   0xF8DF 0x0600      LDR.W    R0,??DebugModifyValue_3
   \   000007AE   0x7800             LDRB     R0,[R0, #+0]
   \   000007B0   0x2803             CMP      R0,#+3
   \   000007B2   0xD10A             BNE.N    ??DebugModifyValue_56
    885                {
    886                  DebugModifyNum[48] -= 1;
   \   000007B4   0xF8DF 0x05F8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000007B8   0xF8B0 0x0060      LDRH     R0,[R0, #+96]
   \   000007BC   0x1E40             SUBS     R0,R0,#+1
   \   000007BE   0xF8DF 0x15F0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000007C2   0xF8A1 0x0060      STRH     R0,[R1, #+96]
   \   000007C6   0xF000 0xBD99      B.W      ??DebugModifyValue_5
    887                  //SpeedPIDPVal -= 1;
    888                }
    889                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_56: (+1)
   \   000007CA   0xF8DF 0x05E0      LDR.W    R0,??DebugModifyValue_3
   \   000007CE   0x7800             LDRB     R0,[R0, #+0]
   \   000007D0   0x2804             CMP      R0,#+4
   \   000007D2   0xD10A             BNE.N    ??DebugModifyValue_57
    890                {
    891                  DebugModifyNum[49] -= 1;
   \   000007D4   0xF8DF 0x05D8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000007D8   0xF8B0 0x0062      LDRH     R0,[R0, #+98]
   \   000007DC   0x1E40             SUBS     R0,R0,#+1
   \   000007DE   0xF8DF 0x15D0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000007E2   0xF8A1 0x0062      STRH     R0,[R1, #+98]
   \   000007E6   0xF000 0xBD89      B.W      ??DebugModifyValue_5
    892                  //SpeedPIDDVal -= 1;
    893                }
    894                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_57: (+1)
   \   000007EA   0xF8DF 0x05C0      LDR.W    R0,??DebugModifyValue_3
   \   000007EE   0x7800             LDRB     R0,[R0, #+0]
   \   000007F0   0x2805             CMP      R0,#+5
   \   000007F2   0xD10A             BNE.N    ??DebugModifyValue_58
    895                {
    896                  DebugModifyNum[50]--;
   \   000007F4   0xF8DF 0x05B8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000007F8   0xF8B0 0x0064      LDRH     R0,[R0, #+100]
   \   000007FC   0x1E40             SUBS     R0,R0,#+1
   \   000007FE   0xF8DF 0x15B0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000802   0xF8A1 0x0064      STRH     R0,[R1, #+100]
   \   00000806   0xF000 0xBD79      B.W      ??DebugModifyValue_5
    897                  //SpeedTargetValGryoResult--;
    898                }
    899                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_58: (+1)
   \   0000080A   0xF8DF 0x05A0      LDR.W    R0,??DebugModifyValue_3
   \   0000080E   0x7800             LDRB     R0,[R0, #+0]
   \   00000810   0x2806             CMP      R0,#+6
   \   00000812   0xD10A             BNE.N    ??DebugModifyValue_59
    900                {
    901                  DebugModifyNum[51]--;
   \   00000814   0xF8DF 0x0598      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000818   0xF8B0 0x0066      LDRH     R0,[R0, #+102]
   \   0000081C   0x1E40             SUBS     R0,R0,#+1
   \   0000081E   0xF8DF 0x1590      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000822   0xF8A1 0x0066      STRH     R0,[R1, #+102]
   \   00000826   0xF000 0xBD69      B.W      ??DebugModifyValue_5
    902                  //SpeedTargetValAngle--;
    903                }
    904                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_59: (+1)
   \   0000082A   0xF8DF 0x0580      LDR.W    R0,??DebugModifyValue_3
   \   0000082E   0x7800             LDRB     R0,[R0, #+0]
   \   00000830   0x2807             CMP      R0,#+7
   \   00000832   0xD111             BNE.N    ??DebugModifyValue_60
    905                {
    906                  DebugModifyNum[52]--;
   \   00000834   0xF8DF 0x0578      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000838   0xF8B0 0x0068      LDRH     R0,[R0, #+104]
   \   0000083C   0x1E40             SUBS     R0,R0,#+1
   \   0000083E   0xF8DF 0x1570      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000842   0xF8A1 0x0068      STRH     R0,[R1, #+104]
    907                  limitStopLineBlackXiu = DebugModifyNum[52];
   \   00000846   0xF8DF 0x0568      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000084A   0xF8B0 0x0068      LDRH     R0,[R0, #+104]
   \   0000084E   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000852   0x7008             STRB     R0,[R1, #+0]
   \   00000854   0xF000 0xBD52      B.W      ??DebugModifyValue_5
    908                  //SpeedTargetValStraight = DebugModifyNum[52];
    909                }
    910                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_60: (+1)
   \   00000858   0xF8DF 0x0550      LDR.W    R0,??DebugModifyValue_3
   \   0000085C   0x7800             LDRB     R0,[R0, #+0]
   \   0000085E   0x2808             CMP      R0,#+8
   \   00000860   0xD118             BNE.N    ??DebugModifyValue_61
    911                {
    912                  DebugModifyNum[53]--;
   \   00000862   0xF8DF 0x054C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000866   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   0000086A   0x1E40             SUBS     R0,R0,#+1
   \   0000086C   0xF8DF 0x1540      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000870   0xF8A1 0x006A      STRH     R0,[R1, #+106]
    913                  ServoPIDDMat[0] = DebugModifyNum[53];
   \   00000874   0xF8DF 0x0538      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000878   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   0000087C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000880   0x8008             STRH     R0,[R1, #+0]
    914                  ServoPIDD2Mat[0] = DebugModifyNum[53];
   \   00000882   0xF8DF 0x052C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000886   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   0000088A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000088E   0x8008             STRH     R0,[R1, #+0]
   \   00000890   0xF000 0xBD34      B.W      ??DebugModifyValue_5
    915                  //GyroResultForbidBackCountNum = DebugModifyNum[53];
    916                }
    917                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_61: (+1)
   \   00000894   0xF8DF 0x0514      LDR.W    R0,??DebugModifyValue_3
   \   00000898   0x7800             LDRB     R0,[R0, #+0]
   \   0000089A   0x2809             CMP      R0,#+9
   \   0000089C   0xD118             BNE.N    ??DebugModifyValue_62
    918                {
    919                  DebugModifyNum[54]--;
   \   0000089E   0xF8DF 0x0510      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008A2   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000008A6   0x1E40             SUBS     R0,R0,#+1
   \   000008A8   0xF8DF 0x1504      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000008AC   0xF8A1 0x006C      STRH     R0,[R1, #+108]
    920                  ServoPIDDMat[1] = DebugModifyNum[54];
   \   000008B0   0xF8DF 0x04FC      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008B4   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000008B8   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000008BC   0x8048             STRH     R0,[R1, #+2]
    921                  ServoPIDD2Mat[1] = DebugModifyNum[54];
   \   000008BE   0xF8DF 0x04F0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008C2   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000008C6   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000008CA   0x8048             STRH     R0,[R1, #+2]
   \   000008CC   0xF000 0xBD16      B.W      ??DebugModifyValue_5
    922                  //PathRealStraightCountLimit = DebugModifyNum[54];
    923                }
    924                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_62: (+1)
   \   000008D0   0xF8DF 0x04D8      LDR.W    R0,??DebugModifyValue_3
   \   000008D4   0x7800             LDRB     R0,[R0, #+0]
   \   000008D6   0x280A             CMP      R0,#+10
   \   000008D8   0xD118             BNE.N    ??DebugModifyValue_63
    925                {
    926                  DebugModifyNum[55]--;
   \   000008DA   0xF8DF 0x04D4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008DE   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   000008E2   0x1E40             SUBS     R0,R0,#+1
   \   000008E4   0xF8DF 0x14C8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000008E8   0xF8A1 0x006E      STRH     R0,[R1, #+110]
    927                  ServoPIDDMat[2] = DebugModifyNum[55];
   \   000008EC   0xF8DF 0x04C0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008F0   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   000008F4   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000008F8   0x8088             STRH     R0,[R1, #+4]
    928                  ServoPIDD2Mat[2] = DebugModifyNum[55];
   \   000008FA   0xF8DF 0x04B4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000008FE   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   00000902   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000906   0x8088             STRH     R0,[R1, #+4]
   \   00000908   0xF000 0xBCF8      B.W      ??DebugModifyValue_5
    929                  //StopFlagMaxCountNum = DebugModifyNum[55];
    930                }
    931                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_63: (+1)
   \   0000090C   0xF8DF 0x049C      LDR.W    R0,??DebugModifyValue_3
   \   00000910   0x7800             LDRB     R0,[R0, #+0]
   \   00000912   0x280B             CMP      R0,#+11
   \   00000914   0xD118             BNE.N    ??DebugModifyValue_64
    932                {
    933                  DebugModifyNum[56]--;
   \   00000916   0xF8DF 0x0498      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000091A   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   0000091E   0x1E40             SUBS     R0,R0,#+1
   \   00000920   0xF8DF 0x148C      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000924   0xF8A1 0x0070      STRH     R0,[R1, #+112]
    934                  ServoPIDDMat[3] = DebugModifyNum[56];
   \   00000928   0xF8DF 0x0484      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000092C   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   00000930   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000934   0x80C8             STRH     R0,[R1, #+6]
    935                  ServoPIDD2Mat[3] = DebugModifyNum[56];
   \   00000936   0xF8DF 0x0478      LDR.W    R0,??DebugModifyValue_3+0x4
   \   0000093A   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   0000093E   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000942   0x80C8             STRH     R0,[R1, #+6]
   \   00000944   0xF000 0xBCDA      B.W      ??DebugModifyValue_5
    936                  //LightHouseNoStopFlag = DebugModifyNum[56];
    937                }
    938                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_64: (+1)
   \   00000948   0xF8DF 0x0460      LDR.W    R0,??DebugModifyValue_3
   \   0000094C   0x7800             LDRB     R0,[R0, #+0]
   \   0000094E   0x280C             CMP      R0,#+12
   \   00000950   0xD118             BNE.N    ??DebugModifyValue_65
    939                {
    940                  DebugModifyNum[57]--;
   \   00000952   0xF8DF 0x045C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000956   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   0000095A   0x1E40             SUBS     R0,R0,#+1
   \   0000095C   0xF8DF 0x1450      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000960   0xF8A1 0x0072      STRH     R0,[R1, #+114]
    941                  ServoPIDDMat[4] = DebugModifyNum[57];
   \   00000964   0xF8DF 0x0448      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000968   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   0000096C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000970   0x8108             STRH     R0,[R1, #+8]
    942                  ServoPIDD2Mat[4] = DebugModifyNum[57];
   \   00000972   0xF8DF 0x043C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000976   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   0000097A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000097E   0x8108             STRH     R0,[R1, #+8]
   \   00000980   0xF000 0xBCBC      B.W      ??DebugModifyValue_5
    943                  //AngleHeadLineNum = DebugModifyNum[57];
    944                }
    945                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_65: (+1)
   \   00000984   0xF8DF 0x0424      LDR.W    R0,??DebugModifyValue_3
   \   00000988   0x7800             LDRB     R0,[R0, #+0]
   \   0000098A   0x280D             CMP      R0,#+13
   \   0000098C   0xD118             BNE.N    ??DebugModifyValue_66
    946                {
    947                  DebugModifyNum[58]--;
   \   0000098E   0xF8DF 0x0420      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000992   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   00000996   0x1E40             SUBS     R0,R0,#+1
   \   00000998   0xF8DF 0x1414      LDR.W    R1,??DebugModifyValue_3+0x4
   \   0000099C   0xF8A1 0x0074      STRH     R0,[R1, #+116]
    948                  ServoPIDDMat[5] = DebugModifyNum[58];
   \   000009A0   0xF8DF 0x040C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000009A4   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000009A8   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000009AC   0x8148             STRH     R0,[R1, #+10]
    949                  ServoPIDD2Mat[5] = DebugModifyNum[58];
   \   000009AE   0xF8DF 0x0400      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000009B2   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000009B6   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000009BA   0x8148             STRH     R0,[R1, #+10]
   \   000009BC   0xF000 0xBC9E      B.W      ??DebugModifyValue_5
    950                  //SpeedTargetValWaitStop = DebugModifyNum[58];
    951                }
    952                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_66: (+1)
   \   000009C0   0xF8DF 0x03E8      LDR.W    R0,??DebugModifyValue_3
   \   000009C4   0x7800             LDRB     R0,[R0, #+0]
   \   000009C6   0x280E             CMP      R0,#+14
   \   000009C8   0xF040 0x8498      BNE.W    ??DebugModifyValue_5
    953                {
    954                  DebugModifyNum[59]--;
   \   000009CC   0xF8DF 0x03E0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000009D0   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000009D4   0x1E40             SUBS     R0,R0,#+1
   \   000009D6   0xF8DF 0x13D8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   000009DA   0xF8A1 0x0076      STRH     R0,[R1, #+118]
    955                  ServoPIDDMat[6] = DebugModifyNum[59];
   \   000009DE   0xF8DF 0x03D0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000009E2   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000009E6   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000009EA   0x8188             STRH     R0,[R1, #+12]
    956                  ServoPIDD2Mat[6] = DebugModifyNum[59];
   \   000009EC   0xF8DF 0x03C0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   000009F0   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000009F4   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000009F8   0x8188             STRH     R0,[R1, #+12]
   \   000009FA   0xF000 0xBC7F      B.W      ??DebugModifyValue_5
    957                  //SpeedTargetValGryoUp = DebugModifyNum[59];
    958                }
    959                else
    960                {
    961                }      
    962                
    963              }
    964              else
    965              {
    966              }
    967            }
    968            //temp=1表示加1个单位
    969            else
    970            {
    971              //当前是第0页。
    972              if(DebugModifyPage == 0)
   \                     ??DebugModifyValue_0: (+1)
   \   000009FE   0xF8DF 0x0388      LDR.W    R0,??DebugModifyValue_1
   \   00000A02   0x7800             LDRB     R0,[R0, #+0]
   \   00000A04   0x2800             CMP      R0,#+0
   \   00000A06   0xF040 0x8105      BNE.W    ??DebugModifyValue_67
    973              {
    974                //根据光标位置来改值。
    975                if(DebugModifyCursor == 0)
   \   00000A0A   0xF8DF 0x03A0      LDR.W    R0,??DebugModifyValue_3
   \   00000A0E   0x7800             LDRB     R0,[R0, #+0]
   \   00000A10   0x2800             CMP      R0,#+0
   \   00000A12   0xD10E             BNE.N    ??DebugModifyValue_68
    976                {
    977                  DebugModifyNum[0] ++;
   \   00000A14   0xF8DF 0x0398      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A18   0x8800             LDRH     R0,[R0, #+0]
   \   00000A1A   0x1C40             ADDS     R0,R0,#+1
   \   00000A1C   0xF8DF 0x1390      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000A20   0x8008             STRH     R0,[R1, #+0]
    978                  speedOfCar = DebugModifyNum[0];
   \   00000A22   0xF8DF 0x038C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A26   0x8800             LDRH     R0,[R0, #+0]
   \   00000A28   0xF8DF 0x1388      LDR.W    R1,??DebugModifyValue_3+0x8
   \   00000A2C   0x8008             STRH     R0,[R1, #+0]
   \   00000A2E   0xF000 0xBC65      B.W      ??DebugModifyValue_5
    979                }
    980                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_68: (+1)
   \   00000A32   0xF8DF 0x0378      LDR.W    R0,??DebugModifyValue_3
   \   00000A36   0x7800             LDRB     R0,[R0, #+0]
   \   00000A38   0x2801             CMP      R0,#+1
   \   00000A3A   0xD10E             BNE.N    ??DebugModifyValue_69
    981                {
    982                  DebugModifyNum[1]++;
   \   00000A3C   0xF8DF 0x0370      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A40   0x8840             LDRH     R0,[R0, #+2]
   \   00000A42   0x1C40             ADDS     R0,R0,#+1
   \   00000A44   0xF8DF 0x1368      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000A48   0x8048             STRH     R0,[R1, #+2]
    983                  Steer_kp[1] = DebugModifyNum[1];
   \   00000A4A   0xF8DF 0x0364      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A4E   0x8840             LDRH     R0,[R0, #+2]
   \   00000A50   0xF8DF 0x138C      LDR.W    R1,??DebugModifyValue_7
   \   00000A54   0x8048             STRH     R0,[R1, #+2]
   \   00000A56   0xF000 0xBC51      B.W      ??DebugModifyValue_5
    984                }
    985                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_69: (+1)
   \   00000A5A   0xF8DF 0x0350      LDR.W    R0,??DebugModifyValue_3
   \   00000A5E   0x7800             LDRB     R0,[R0, #+0]
   \   00000A60   0x2802             CMP      R0,#+2
   \   00000A62   0xD10E             BNE.N    ??DebugModifyValue_70
    986                {
    987                  DebugModifyNum[2] ++;
   \   00000A64   0xF8DF 0x0348      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A68   0x8880             LDRH     R0,[R0, #+4]
   \   00000A6A   0x1C40             ADDS     R0,R0,#+1
   \   00000A6C   0xF8DF 0x1340      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000A70   0x8088             STRH     R0,[R1, #+4]
    988                  Steer_kp[2] = DebugModifyNum[2];
   \   00000A72   0xF8DF 0x033C      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A76   0x8880             LDRH     R0,[R0, #+4]
   \   00000A78   0xF8DF 0x1364      LDR.W    R1,??DebugModifyValue_7
   \   00000A7C   0x8088             STRH     R0,[R1, #+4]
   \   00000A7E   0xF000 0xBC3D      B.W      ??DebugModifyValue_5
    989                }
    990                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_70: (+1)
   \   00000A82   0xF8DF 0x0328      LDR.W    R0,??DebugModifyValue_3
   \   00000A86   0x7800             LDRB     R0,[R0, #+0]
   \   00000A88   0x2803             CMP      R0,#+3
   \   00000A8A   0xD10E             BNE.N    ??DebugModifyValue_71
    991                {
    992                  DebugModifyNum[3]++;
   \   00000A8C   0xF8DF 0x0320      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A90   0x88C0             LDRH     R0,[R0, #+6]
   \   00000A92   0x1C40             ADDS     R0,R0,#+1
   \   00000A94   0xF8DF 0x1318      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000A98   0x80C8             STRH     R0,[R1, #+6]
    993                  Steer_kp[3] = DebugModifyNum[3];
   \   00000A9A   0xF8DF 0x0314      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000A9E   0x88C0             LDRH     R0,[R0, #+6]
   \   00000AA0   0xF8DF 0x133C      LDR.W    R1,??DebugModifyValue_7
   \   00000AA4   0x80C8             STRH     R0,[R1, #+6]
   \   00000AA6   0xF000 0xBC29      B.W      ??DebugModifyValue_5
    994                }
    995                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_71: (+1)
   \   00000AAA   0xF8DF 0x0300      LDR.W    R0,??DebugModifyValue_3
   \   00000AAE   0x7800             LDRB     R0,[R0, #+0]
   \   00000AB0   0x2804             CMP      R0,#+4
   \   00000AB2   0xD10E             BNE.N    ??DebugModifyValue_72
    996                {
    997                  DebugModifyNum[4]++;
   \   00000AB4   0xF8DF 0x02F8      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000AB8   0x8900             LDRH     R0,[R0, #+8]
   \   00000ABA   0x1C40             ADDS     R0,R0,#+1
   \   00000ABC   0xF8DF 0x12F0      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000AC0   0x8108             STRH     R0,[R1, #+8]
    998                  Steer_kp[4] = DebugModifyNum[4];
   \   00000AC2   0xF8DF 0x02EC      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000AC6   0x8900             LDRH     R0,[R0, #+8]
   \   00000AC8   0xF8DF 0x1314      LDR.W    R1,??DebugModifyValue_7
   \   00000ACC   0x8108             STRH     R0,[R1, #+8]
   \   00000ACE   0xF000 0xBC15      B.W      ??DebugModifyValue_5
    999                }
   1000                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_72: (+1)
   \   00000AD2   0xF8DF 0x02D8      LDR.W    R0,??DebugModifyValue_3
   \   00000AD6   0x7800             LDRB     R0,[R0, #+0]
   \   00000AD8   0x2805             CMP      R0,#+5
   \   00000ADA   0xD10E             BNE.N    ??DebugModifyValue_73
   1001                {
   1002                  DebugModifyNum[5]++;
   \   00000ADC   0xF8DF 0x02D0      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000AE0   0x8940             LDRH     R0,[R0, #+10]
   \   00000AE2   0x1C40             ADDS     R0,R0,#+1
   \   00000AE4   0xF8DF 0x12C8      LDR.W    R1,??DebugModifyValue_3+0x4
   \   00000AE8   0x8148             STRH     R0,[R1, #+10]
   1003                  Steer_kp[5] = DebugModifyNum[5];
   \   00000AEA   0xF8DF 0x02C4      LDR.W    R0,??DebugModifyValue_3+0x4
   \   00000AEE   0x8940             LDRH     R0,[R0, #+10]
   \   00000AF0   0xF8DF 0x12EC      LDR.W    R1,??DebugModifyValue_7
   \   00000AF4   0x8148             STRH     R0,[R1, #+10]
   \   00000AF6   0xF000 0xBC01      B.W      ??DebugModifyValue_5
   1004                }
   1005                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_73: (+1)
   \   00000AFA   0x48AC             LDR.N    R0,??DebugModifyValue_3
   \   00000AFC   0x7800             LDRB     R0,[R0, #+0]
   \   00000AFE   0x2806             CMP      R0,#+6
   \   00000B00   0xD10A             BNE.N    ??DebugModifyValue_74
   1006                {
   1007                  DebugModifyNum[6]++;
   \   00000B02   0x48AB             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B04   0x8980             LDRH     R0,[R0, #+12]
   \   00000B06   0x1C40             ADDS     R0,R0,#+1
   \   00000B08   0x49A9             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B0A   0x8188             STRH     R0,[R1, #+12]
   1008                  Steer_kp[6] = DebugModifyNum[6];
   \   00000B0C   0x48A8             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B0E   0x8980             LDRH     R0,[R0, #+12]
   \   00000B10   0xF8DF 0x12CC      LDR.W    R1,??DebugModifyValue_7
   \   00000B14   0x8188             STRH     R0,[R1, #+12]
   \   00000B16   0xE3F1             B.N      ??DebugModifyValue_5
   1009                }
   1010                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_74: (+1)
   \   00000B18   0x48A4             LDR.N    R0,??DebugModifyValue_3
   \   00000B1A   0x7800             LDRB     R0,[R0, #+0]
   \   00000B1C   0x2807             CMP      R0,#+7
   \   00000B1E   0xD109             BNE.N    ??DebugModifyValue_75
   1011                {
   1012                  DebugModifyNum[7]++;
   \   00000B20   0x48A3             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B22   0x89C0             LDRH     R0,[R0, #+14]
   \   00000B24   0x1C40             ADDS     R0,R0,#+1
   \   00000B26   0x49A2             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B28   0x81C8             STRH     R0,[R1, #+14]
   1013                  Steer_kp[7] = DebugModifyNum[7];
   \   00000B2A   0x48A1             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B2C   0x89C0             LDRH     R0,[R0, #+14]
   \   00000B2E   0x49AC             LDR.N    R1,??DebugModifyValue_7
   \   00000B30   0x81C8             STRH     R0,[R1, #+14]
   \   00000B32   0xE3E3             B.N      ??DebugModifyValue_5
   1014                }
   1015                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_75: (+1)
   \   00000B34   0x489D             LDR.N    R0,??DebugModifyValue_3
   \   00000B36   0x7800             LDRB     R0,[R0, #+0]
   \   00000B38   0x2808             CMP      R0,#+8
   \   00000B3A   0xD109             BNE.N    ??DebugModifyValue_76
   1016                {
   1017                  DebugModifyNum[8]++;
   \   00000B3C   0x489C             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B3E   0x8A00             LDRH     R0,[R0, #+16]
   \   00000B40   0x1C40             ADDS     R0,R0,#+1
   \   00000B42   0x499B             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B44   0x8208             STRH     R0,[R1, #+16]
   1018                  Steer_kp[0] = DebugModifyNum[8];
   \   00000B46   0x489A             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B48   0x8A00             LDRH     R0,[R0, #+16]
   \   00000B4A   0x49A5             LDR.N    R1,??DebugModifyValue_7
   \   00000B4C   0x8008             STRH     R0,[R1, #+0]
   \   00000B4E   0xE3D5             B.N      ??DebugModifyValue_5
   1019                  //LightHouseWaitStopGapCountLimit = DebugModifyNum[8];
   1020                }
   1021                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_76: (+1)
   \   00000B50   0x4896             LDR.N    R0,??DebugModifyValue_3
   \   00000B52   0x7800             LDRB     R0,[R0, #+0]
   \   00000B54   0x2809             CMP      R0,#+9
   \   00000B56   0xD10A             BNE.N    ??DebugModifyValue_77
   1022                {
   1023                  DebugModifyNum[9]++;
   \   00000B58   0x4895             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B5A   0x8A40             LDRH     R0,[R0, #+18]
   \   00000B5C   0x1C40             ADDS     R0,R0,#+1
   \   00000B5E   0x4994             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B60   0x8248             STRH     R0,[R1, #+18]
   1024                  SpeedPIDPVal = DebugModifyNum[9];
   \   00000B62   0x4893             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B64   0x8A40             LDRH     R0,[R0, #+18]
   \   00000B66   0xF8DF 0x12EC      LDR.W    R1,??DebugModifyValue_16
   \   00000B6A   0x8008             STRH     R0,[R1, #+0]
   \   00000B6C   0xE3C6             B.N      ??DebugModifyValue_5
   1025                  //LimitLeftWBMin = DebugModifyNum[9];
   1026                  //LimitRightWBMin = DebugModifyNum[9];
   1027                }
   1028                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_77: (+1)
   \   00000B6E   0x488F             LDR.N    R0,??DebugModifyValue_3
   \   00000B70   0x7800             LDRB     R0,[R0, #+0]
   \   00000B72   0x280A             CMP      R0,#+10
   \   00000B74   0xD109             BNE.N    ??DebugModifyValue_78
   1029                {
   1030                  DebugModifyNum[10]++;
   \   00000B76   0x488E             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B78   0x8A80             LDRH     R0,[R0, #+20]
   \   00000B7A   0x1C40             ADDS     R0,R0,#+1
   \   00000B7C   0x498C             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B7E   0x8288             STRH     R0,[R1, #+20]
   1031                  SpeedPIDDVal = DebugModifyNum[10];
   \   00000B80   0x488B             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B82   0x8A80             LDRH     R0,[R0, #+20]
   \   00000B84   0x49B4             LDR.N    R1,??DebugModifyValue_16+0x4
   \   00000B86   0x8008             STRH     R0,[R1, #+0]
   \   00000B88   0xE3B8             B.N      ??DebugModifyValue_5
   1032                  //LimitLeftWBMax = DebugModifyNum[10];
   1033                  //LimitRightWBMax = DebugModifyNum[10];
   1034                }
   1035                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_78: (+1)
   \   00000B8A   0x4888             LDR.N    R0,??DebugModifyValue_3
   \   00000B8C   0x7800             LDRB     R0,[R0, #+0]
   \   00000B8E   0x280B             CMP      R0,#+11
   \   00000B90   0xD109             BNE.N    ??DebugModifyValue_79
   1036                {
   1037                  DebugModifyNum[11]++;
   \   00000B92   0x4887             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B94   0x8AC0             LDRH     R0,[R0, #+22]
   \   00000B96   0x1C40             ADDS     R0,R0,#+1
   \   00000B98   0x4985             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000B9A   0x82C8             STRH     R0,[R1, #+22]
   1038                  SpeedTargetMat[0][5] = DebugModifyNum[11];
   \   00000B9C   0x4884             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000B9E   0x8AC0             LDRH     R0,[R0, #+22]
   \   00000BA0   0x49AE             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000BA2   0x8148             STRH     R0,[R1, #+10]
   \   00000BA4   0xE3AA             B.N      ??DebugModifyValue_5
   1039                  //LimitLeftWMin = DebugModifyNum[11];
   1040                  //LimitRightWMin = DebugModifyNum[11];
   1041                }
   1042                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_79: (+1)
   \   00000BA6   0x4881             LDR.N    R0,??DebugModifyValue_3
   \   00000BA8   0x7800             LDRB     R0,[R0, #+0]
   \   00000BAA   0x280C             CMP      R0,#+12
   \   00000BAC   0xD10D             BNE.N    ??DebugModifyValue_80
   1043                {
   1044                  DebugModifyNum[12]++;
   \   00000BAE   0x4880             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BB0   0x8B00             LDRH     R0,[R0, #+24]
   \   00000BB2   0x1C40             ADDS     R0,R0,#+1
   \   00000BB4   0x497E             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000BB6   0x8308             STRH     R0,[R1, #+24]
   1045                  SpeedTargetMat[0][4] = DebugModifyNum[12];
   \   00000BB8   0x487D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BBA   0x8B00             LDRH     R0,[R0, #+24]
   \   00000BBC   0x49A7             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000BBE   0x8108             STRH     R0,[R1, #+8]
   1046                  SpeedTargetMat[0][6] = DebugModifyNum[12];
   \   00000BC0   0x487B             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BC2   0x8B00             LDRH     R0,[R0, #+24]
   \   00000BC4   0x49A5             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000BC6   0x8188             STRH     R0,[R1, #+12]
   \   00000BC8   0xE398             B.N      ??DebugModifyValue_5
   1047                  //LimitLeftWMax = DebugModifyNum[12];
   1048                  //LimitRightWMax = DebugModifyNum[12];
   1049                }
   1050                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_80: (+1)
   \   00000BCA   0x4878             LDR.N    R0,??DebugModifyValue_3
   \   00000BCC   0x7800             LDRB     R0,[R0, #+0]
   \   00000BCE   0x280D             CMP      R0,#+13
   \   00000BD0   0xD10D             BNE.N    ??DebugModifyValue_81
   1051                {
   1052                  DebugModifyNum[13]++;
   \   00000BD2   0x4877             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BD4   0x8B40             LDRH     R0,[R0, #+26]
   \   00000BD6   0x1C40             ADDS     R0,R0,#+1
   \   00000BD8   0x4975             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000BDA   0x8348             STRH     R0,[R1, #+26]
   1053                  SpeedTargetMat[0][3] = DebugModifyNum[13];
   \   00000BDC   0x4874             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BDE   0x8B40             LDRH     R0,[R0, #+26]
   \   00000BE0   0x499E             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000BE2   0x80C8             STRH     R0,[R1, #+6]
   1054                  SpeedTargetMat[0][7] = DebugModifyNum[13];
   \   00000BE4   0x4872             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BE6   0x8B40             LDRH     R0,[R0, #+26]
   \   00000BE8   0x499C             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000BEA   0x81C8             STRH     R0,[R1, #+14]
   \   00000BEC   0xE386             B.N      ??DebugModifyValue_5
   1055                  //LimitLeftBMin = DebugModifyNum[13];
   1056                  //LimitRightBMin = DebugModifyNum[13];
   1057                }
   1058                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_81: (+1)
   \   00000BEE   0x486F             LDR.N    R0,??DebugModifyValue_3
   \   00000BF0   0x7800             LDRB     R0,[R0, #+0]
   \   00000BF2   0x280E             CMP      R0,#+14
   \   00000BF4   0xF040 0x8382      BNE.W    ??DebugModifyValue_5
   1059                {
   1060                  DebugModifyNum[14]++;
   \   00000BF8   0x486D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000BFA   0x8B80             LDRH     R0,[R0, #+28]
   \   00000BFC   0x1C40             ADDS     R0,R0,#+1
   \   00000BFE   0x496C             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000C00   0x8388             STRH     R0,[R1, #+28]
   1061                  SpeedTargetMat[0][2] = DebugModifyNum[14];
   \   00000C02   0x486B             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C04   0x8B80             LDRH     R0,[R0, #+28]
   \   00000C06   0x4995             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C08   0x8088             STRH     R0,[R1, #+4]
   1062                  SpeedTargetMat[0][8] = DebugModifyNum[14];
   \   00000C0A   0x4869             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C0C   0x8B80             LDRH     R0,[R0, #+28]
   \   00000C0E   0x4993             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C10   0x8208             STRH     R0,[R1, #+16]
   \   00000C12   0xE373             B.N      ??DebugModifyValue_5
   1063                  //LimitLeftBMax = DebugModifyNum[14];
   1064                  //LimitRightBMax = DebugModifyNum[14];
   1065                }
   1066                else
   1067                {
   1068                }
   1069              }
   1070              //当前是第1页。
   1071              else if(DebugModifyPage == 1)
   \                     ??DebugModifyValue_67: (+1)
   \   00000C14   0x485C             LDR.N    R0,??DebugModifyValue_1
   \   00000C16   0x7800             LDRB     R0,[R0, #+0]
   \   00000C18   0x2801             CMP      R0,#+1
   \   00000C1A   0xF040 0x812B      BNE.W    ??DebugModifyValue_82
   1072              {
   1073                //根据光标位置来改值。
   1074                if(DebugModifyCursor == 0)
   \   00000C1E   0x4863             LDR.N    R0,??DebugModifyValue_3
   \   00000C20   0x7800             LDRB     R0,[R0, #+0]
   \   00000C22   0x2800             CMP      R0,#+0
   \   00000C24   0xD10D             BNE.N    ??DebugModifyValue_83
   1075                {
   1076                  DebugModifyNum[15]++;
   \   00000C26   0x4862             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C28   0x8BC0             LDRH     R0,[R0, #+30]
   \   00000C2A   0x1C40             ADDS     R0,R0,#+1
   \   00000C2C   0x4960             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000C2E   0x83C8             STRH     R0,[R1, #+30]
   1077                  SpeedTargetMat[0][1] = DebugModifyNum[15];
   \   00000C30   0x485F             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C32   0x8BC0             LDRH     R0,[R0, #+30]
   \   00000C34   0x4989             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C36   0x8048             STRH     R0,[R1, #+2]
   1078                  SpeedTargetMat[0][9] = DebugModifyNum[15];
   \   00000C38   0x485D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C3A   0x8BC0             LDRH     R0,[R0, #+30]
   \   00000C3C   0x4987             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C3E   0x8248             STRH     R0,[R1, #+18]
   \   00000C40   0xE35C             B.N      ??DebugModifyValue_5
   1079                  //ControlRow_Weight[0][0] = DebugModifyNum[15];
   1080                }
   1081                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_83: (+1)
   \   00000C42   0x485A             LDR.N    R0,??DebugModifyValue_3
   \   00000C44   0x7800             LDRB     R0,[R0, #+0]
   \   00000C46   0x2801             CMP      R0,#+1
   \   00000C48   0xD10D             BNE.N    ??DebugModifyValue_84
   1082                {
   1083                  DebugModifyNum[16]++;
   \   00000C4A   0x4859             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C4C   0x8C00             LDRH     R0,[R0, #+32]
   \   00000C4E   0x1C40             ADDS     R0,R0,#+1
   \   00000C50   0x4957             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000C52   0x8408             STRH     R0,[R1, #+32]
   1084                  SpeedTargetMat[0][0] = DebugModifyNum[16];
   \   00000C54   0x4856             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C56   0x8C00             LDRH     R0,[R0, #+32]
   \   00000C58   0x4980             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C5A   0x8008             STRH     R0,[R1, #+0]
   1085                  SpeedTargetMat[0][10] = DebugModifyNum[16];
   \   00000C5C   0x4854             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C5E   0x8C00             LDRH     R0,[R0, #+32]
   \   00000C60   0x497E             LDR.N    R1,??DebugModifyValue_16+0x8
   \   00000C62   0x8288             STRH     R0,[R1, #+20]
   \   00000C64   0xE34A             B.N      ??DebugModifyValue_5
   1086                  //ControlRow_Weight[1][0]  = DebugModifyNum[16];
   1087                }
   1088                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_84: (+1)
   \   00000C66   0x4851             LDR.N    R0,??DebugModifyValue_3
   \   00000C68   0x7800             LDRB     R0,[R0, #+0]
   \   00000C6A   0x2802             CMP      R0,#+2
   \   00000C6C   0xD109             BNE.N    ??DebugModifyValue_85
   1089                {
   1090                  DebugModifyNum[17]++;
   \   00000C6E   0x4850             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C70   0x8C40             LDRH     R0,[R0, #+34]
   \   00000C72   0x1C40             ADDS     R0,R0,#+1
   \   00000C74   0x494E             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000C76   0x8448             STRH     R0,[R1, #+34]
   1091                  BrickConfirmMatLimit = DebugModifyNum[17];      //障碍标志存储数组中障碍的个数大于该值时，则锁存为障碍。
   \   00000C78   0x484D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C7A   0x8C40             LDRH     R0,[R0, #+34]
   \   00000C7C   0x4978             LDR.N    R1,??DebugModifyValue_16+0xC
   \   00000C7E   0x7008             STRB     R0,[R1, #+0]
   \   00000C80   0xE33C             B.N      ??DebugModifyValue_5
   1092                  //ControlRow_Weight[2][0]  = DebugModifyNum[17];
   1093                }
   1094                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_85: (+1)
   \   00000C82   0x484A             LDR.N    R0,??DebugModifyValue_3
   \   00000C84   0x7800             LDRB     R0,[R0, #+0]
   \   00000C86   0x2803             CMP      R0,#+3
   \   00000C88   0xD109             BNE.N    ??DebugModifyValue_86
   1095                {
   1096                  DebugModifyNum[18]++;
   \   00000C8A   0x4849             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C8C   0x8C80             LDRH     R0,[R0, #+36]
   \   00000C8E   0x1C40             ADDS     R0,R0,#+1
   \   00000C90   0x4947             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000C92   0x8488             STRH     R0,[R1, #+36]
   1097                  BrickConfirmFinalColCom = DebugModifyNum[18];   //障碍躲避时的列修正量（以15为零，左减右加。）
   \   00000C94   0x4846             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000C96   0x8C80             LDRH     R0,[R0, #+36]
   \   00000C98   0x4972             LDR.N    R1,??DebugModifyValue_16+0x10
   \   00000C9A   0x7008             STRB     R0,[R1, #+0]
   \   00000C9C   0xE32E             B.N      ??DebugModifyValue_5
   1098                  //ControlRow_Weight[3][0]  = DebugModifyNum[18];
   1099                }
   1100                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_86: (+1)
   \   00000C9E   0x4843             LDR.N    R0,??DebugModifyValue_3
   \   00000CA0   0x7800             LDRB     R0,[R0, #+0]
   \   00000CA2   0x2804             CMP      R0,#+4
   \   00000CA4   0xD10D             BNE.N    ??DebugModifyValue_87
   1101                {
   1102                  DebugModifyNum[19]++;
   \   00000CA6   0x4842             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CA8   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000CAA   0x1C40             ADDS     R0,R0,#+1
   \   00000CAC   0x4940             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000CAE   0x84C8             STRH     R0,[R1, #+38]
   1103                  LimitLeftWBMin = DebugModifyNum[19];
   \   00000CB0   0x483F             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CB2   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000CB4   0x496C             LDR.N    R1,??DebugModifyValue_16+0x14
   \   00000CB6   0x7008             STRB     R0,[R1, #+0]
   1104                  LimitRightWBMin = DebugModifyNum[19];
   \   00000CB8   0x483D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CBA   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000CBC   0x496B             LDR.N    R1,??DebugModifyValue_16+0x18
   \   00000CBE   0x7008             STRB     R0,[R1, #+0]
   \   00000CC0   0xE31C             B.N      ??DebugModifyValue_5
   1105                  //ControlRow_Weight[0][1]  = DebugModifyNum[19];
   1106                }
   1107                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_87: (+1)
   \   00000CC2   0x483A             LDR.N    R0,??DebugModifyValue_3
   \   00000CC4   0x7800             LDRB     R0,[R0, #+0]
   \   00000CC6   0x2805             CMP      R0,#+5
   \   00000CC8   0xD10E             BNE.N    ??DebugModifyValue_88
   1108                {
   1109                  DebugModifyNum[20]++;
   \   00000CCA   0x4839             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CCC   0x8D00             LDRH     R0,[R0, #+40]
   \   00000CCE   0x1C40             ADDS     R0,R0,#+1
   \   00000CD0   0x4937             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000CD2   0x8508             STRH     R0,[R1, #+40]
   1110                  LimitLeftWBMax = DebugModifyNum[20];
   \   00000CD4   0x4836             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CD6   0x8D00             LDRH     R0,[R0, #+40]
   \   00000CD8   0x4965             LDR.N    R1,??DebugModifyValue_16+0x1C
   \   00000CDA   0x7008             STRB     R0,[R1, #+0]
   1111                  LimitRightWBMax = DebugModifyNum[20];        
   \   00000CDC   0x4834             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CDE   0x8D00             LDRH     R0,[R0, #+40]
   \   00000CE0   0xF8DF 0x1438      LDR.W    R1,??DebugModifyValue_28
   \   00000CE4   0x7008             STRB     R0,[R1, #+0]
   \   00000CE6   0xE309             B.N      ??DebugModifyValue_5
   1112                  //ControlRow_Weight[1][1] = DebugModifyNum[20];
   1113                }
   1114                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_88: (+1)
   \   00000CE8   0x4830             LDR.N    R0,??DebugModifyValue_3
   \   00000CEA   0x7800             LDRB     R0,[R0, #+0]
   \   00000CEC   0x2806             CMP      R0,#+6
   \   00000CEE   0xD10F             BNE.N    ??DebugModifyValue_89
   1115                {
   1116                  DebugModifyNum[21]++;
   \   00000CF0   0x482F             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CF2   0x8D40             LDRH     R0,[R0, #+42]
   \   00000CF4   0x1C40             ADDS     R0,R0,#+1
   \   00000CF6   0x492E             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000CF8   0x8548             STRH     R0,[R1, #+42]
   1117                  LimitLeftWMin = DebugModifyNum[21];
   \   00000CFA   0x482D             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000CFC   0x8D40             LDRH     R0,[R0, #+42]
   \   00000CFE   0xF8DF 0x1420      LDR.W    R1,??DebugModifyValue_28+0x4
   \   00000D02   0x7008             STRB     R0,[R1, #+0]
   1118                  LimitRightWMin = DebugModifyNum[21];
   \   00000D04   0x482A             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D06   0x8D40             LDRH     R0,[R0, #+42]
   \   00000D08   0xF8DF 0x1418      LDR.W    R1,??DebugModifyValue_28+0x8
   \   00000D0C   0x7008             STRB     R0,[R1, #+0]
   \   00000D0E   0xE2F5             B.N      ??DebugModifyValue_5
   1119                  //ControlRow_Weight[2][1] = DebugModifyNum[21];
   1120                }
   1121                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_89: (+1)
   \   00000D10   0x4826             LDR.N    R0,??DebugModifyValue_3
   \   00000D12   0x7800             LDRB     R0,[R0, #+0]
   \   00000D14   0x2807             CMP      R0,#+7
   \   00000D16   0xD10F             BNE.N    ??DebugModifyValue_90
   1122                {
   1123                  DebugModifyNum[22]++;
   \   00000D18   0x4825             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D1A   0x8D80             LDRH     R0,[R0, #+44]
   \   00000D1C   0x1C40             ADDS     R0,R0,#+1
   \   00000D1E   0x4924             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000D20   0x8588             STRH     R0,[R1, #+44]
   1124                  LimitLeftWMax = DebugModifyNum[22];
   \   00000D22   0x4823             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D24   0x8D80             LDRH     R0,[R0, #+44]
   \   00000D26   0xF8DF 0x142C      LDR.W    R1,??DebugModifyValue_31
   \   00000D2A   0x7008             STRB     R0,[R1, #+0]
   1125                  LimitRightWMax = DebugModifyNum[22]; 
   \   00000D2C   0x4820             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D2E   0x8D80             LDRH     R0,[R0, #+44]
   \   00000D30   0xF8DF 0x1424      LDR.W    R1,??DebugModifyValue_31+0x4
   \   00000D34   0x7008             STRB     R0,[R1, #+0]
   \   00000D36   0xE2E1             B.N      ??DebugModifyValue_5
   1126                  //ControlRow_Weight[3][1] = DebugModifyNum[22];
   1127                }
   1128                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_90: (+1)
   \   00000D38   0x481C             LDR.N    R0,??DebugModifyValue_3
   \   00000D3A   0x7800             LDRB     R0,[R0, #+0]
   \   00000D3C   0x2808             CMP      R0,#+8
   \   00000D3E   0xD10F             BNE.N    ??DebugModifyValue_91
   1129                {
   1130                  DebugModifyNum[23]++;
   \   00000D40   0x481B             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D42   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000D44   0x1C40             ADDS     R0,R0,#+1
   \   00000D46   0x491A             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000D48   0x85C8             STRH     R0,[R1, #+46]
   1131                  LimitLeftBMin = DebugModifyNum[23];
   \   00000D4A   0x4819             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D4C   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000D4E   0xF8DF 0x140C      LDR.W    R1,??DebugModifyValue_31+0x8
   \   00000D52   0x7008             STRB     R0,[R1, #+0]
   1132                  LimitRightBMin = DebugModifyNum[23];
   \   00000D54   0x4816             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D56   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000D58   0xF8DF 0x1404      LDR.W    R1,??DebugModifyValue_31+0xC
   \   00000D5C   0x7008             STRB     R0,[R1, #+0]
   \   00000D5E   0xE2CD             B.N      ??DebugModifyValue_5
   1133                  //ControlRow_Weight[0][2] = DebugModifyNum[23];
   1134                }
   1135                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_91: (+1)
   \   00000D60   0x4812             LDR.N    R0,??DebugModifyValue_3
   \   00000D62   0x7800             LDRB     R0,[R0, #+0]
   \   00000D64   0x2809             CMP      R0,#+9
   \   00000D66   0xD111             BNE.N    ??DebugModifyValue_92
   1136                {
   1137                  DebugModifyNum[24]++;
   \   00000D68   0x4811             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D6A   0x8E00             LDRH     R0,[R0, #+48]
   \   00000D6C   0x1C40             ADDS     R0,R0,#+1
   \   00000D6E   0x4910             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000D70   0x8608             STRH     R0,[R1, #+48]
   1138                  LimitLeftBMax = DebugModifyNum[24];
   \   00000D72   0x480F             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D74   0x8E00             LDRH     R0,[R0, #+48]
   \   00000D76   0xF8DF 0x13EC      LDR.W    R1,??DebugModifyValue_31+0x10
   \   00000D7A   0x7008             STRB     R0,[R1, #+0]
   1139                  LimitRightBMax = DebugModifyNum[24];
   \   00000D7C   0x480C             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D7E   0x8E00             LDRH     R0,[R0, #+48]
   \   00000D80   0xF8DF 0x13E4      LDR.W    R1,??DebugModifyValue_31+0x14
   \   00000D84   0x7008             STRB     R0,[R1, #+0]
   \   00000D86   0xE2B9             B.N      ??DebugModifyValue_5
   \                     ??DebugModifyValue_1:
   \   00000D88   0x........         DC32     DebugModifyPage
   1140                  //ControlRow_Weight[1][2] = DebugModifyNum[24];
   1141                }
   1142                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_92: (+1)
   \   00000D8C   0x4807             LDR.N    R0,??DebugModifyValue_3
   \   00000D8E   0x7800             LDRB     R0,[R0, #+0]
   \   00000D90   0x280A             CMP      R0,#+10
   \   00000D92   0xD111             BNE.N    ??DebugModifyValue_93
   1143                {
   1144                  DebugModifyNum[25]++;
   \   00000D94   0x4806             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000D96   0x8E40             LDRH     R0,[R0, #+50]
   \   00000D98   0x1C40             ADDS     R0,R0,#+1
   \   00000D9A   0x4905             LDR.N    R1,??DebugModifyValue_3+0x4
   \   00000D9C   0x8648             STRH     R0,[R1, #+50]
   1145                  SpeedTargetValStraight = DebugModifyNum[25];
   \   00000D9E   0x4804             LDR.N    R0,??DebugModifyValue_3+0x4
   \   00000DA0   0x8E40             LDRH     R0,[R0, #+50]
   \   00000DA2   0xF8DF 0x13C8      LDR.W    R1,??DebugModifyValue_31+0x18
   \   00000DA6   0x8008             STRH     R0,[R1, #+0]
   \   00000DA8   0xE2A8             B.N      ??DebugModifyValue_5
   \   00000DAA   0xBF00             Nop      
   \                     ??DebugModifyValue_3:
   \   00000DAC   0x........         DC32     DebugModifyCursor
   \   00000DB0   0x........         DC32     DebugModifyNum
   \   00000DB4   0x........         DC32     speedOfCar
   1146                  //ControlRow_Weight[2][2] = DebugModifyNum[25];
   1147                }
   1148                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_93: (+1)
   \   00000DB8   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000DBC   0x7800             LDRB     R0,[R0, #+0]
   \   00000DBE   0x280B             CMP      R0,#+11
   \   00000DC0   0xD110             BNE.N    ??DebugModifyValue_94
   1149                {
   1150                  DebugModifyNum[26]++;
   \   00000DC2   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000DC6   0x8E80             LDRH     R0,[R0, #+52]
   \   00000DC8   0x1C40             ADDS     R0,R0,#+1
   \   00000DCA   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000DCE   0x8688             STRH     R0,[R1, #+52]
   1151                  SpeedBrick = DebugModifyNum[26];
   \   00000DD0   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000DD4   0x8E80             LDRH     R0,[R0, #+52]
   \   00000DD6   0xF8DF 0x1398      LDR.W    R1,??DebugModifyValue_31+0x1C
   \   00000DDA   0x8008             STRH     R0,[R1, #+0]
   \   00000DDC   0xE28E             B.N      ??DebugModifyValue_5
   \   00000DDE   0xBF00             Nop      
   \                     ??DebugModifyValue_7:
   \   00000DE0   0x........         DC32     Steer_kp
   1152                  //ControlRow_Weight[3][2] = DebugModifyNum[26];
   1153                }
   1154                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_94: (+1)
   \   00000DE4   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000DE8   0x7800             LDRB     R0,[R0, #+0]
   \   00000DEA   0x280C             CMP      R0,#+12
   \   00000DEC   0xD10C             BNE.N    ??DebugModifyValue_95
   1155                {
   1156                  DebugModifyNum[27]++;
   \   00000DEE   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000DF2   0x8EC0             LDRH     R0,[R0, #+54]
   \   00000DF4   0x1C40             ADDS     R0,R0,#+1
   \   00000DF6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000DFA   0x86C8             STRH     R0,[R1, #+54]
   1157                  SpeedTargetValGryoUp = DebugModifyNum[27];
   \   00000DFC   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E00   0x8EC0             LDRH     R0,[R0, #+54]
   \   00000E02   0x49DC             LDR.N    R1,??DebugModifyValue_31+0x20
   \   00000E04   0x8008             STRH     R0,[R1, #+0]
   \   00000E06   0xE279             B.N      ??DebugModifyValue_5
   1158                  //ControlRow_Weight[0][3] = DebugModifyNum[27];
   1159                }
   1160                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_95: (+1)
   \   00000E08   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000E0C   0x7800             LDRB     R0,[R0, #+0]
   \   00000E0E   0x280D             CMP      R0,#+13
   \   00000E10   0xD10C             BNE.N    ??DebugModifyValue_96
   1161                {
   1162                  DebugModifyNum[28]++;
   \   00000E12   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E16   0x8F00             LDRH     R0,[R0, #+56]
   \   00000E18   0x1C40             ADDS     R0,R0,#+1
   \   00000E1A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000E1E   0x8708             STRH     R0,[R1, #+56]
   1163                  SpeedTargetValGryoResult = DebugModifyNum[28];
   \   00000E20   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E24   0x8F00             LDRH     R0,[R0, #+56]
   \   00000E26   0x49D4             LDR.N    R1,??DebugModifyValue_31+0x24
   \   00000E28   0x7008             STRB     R0,[R1, #+0]
   \   00000E2A   0xE267             B.N      ??DebugModifyValue_5
   1164                  //ControlRow_Weight[1][3] = DebugModifyNum[28];
   1165                }
   1166                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_96: (+1)
   \   00000E2C   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000E30   0x7800             LDRB     R0,[R0, #+0]
   \   00000E32   0x280E             CMP      R0,#+14
   \   00000E34   0xF040 0x8262      BNE.W    ??DebugModifyValue_5
   1167                {
   1168                  DebugModifyNum[29]++;
   \   00000E38   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E3C   0x8F40             LDRH     R0,[R0, #+58]
   \   00000E3E   0x1C40             ADDS     R0,R0,#+1
   \   00000E40   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000E44   0x8748             STRH     R0,[R1, #+58]
   1169                  SpeedXiaoZhiDao = DebugModifyNum[29];
   \   00000E46   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E4A   0x8F40             LDRH     R0,[R0, #+58]
   \   00000E4C   0x49CB             LDR.N    R1,??DebugModifyValue_31+0x28
   \   00000E4E   0x8008             STRH     R0,[R1, #+0]
   \   00000E50   0xE254             B.N      ??DebugModifyValue_5
   \   00000E52   0xBF00             Nop      
   \                     ??DebugModifyValue_16:
   \   00000E54   0x........         DC32     SpeedPIDPVal
   \   00000E58   0x........         DC32     SpeedPIDDVal
   \   00000E5C   0x........         DC32     SpeedTargetMat
   \   00000E60   0x........         DC32     BrickConfirmMatLimit
   \   00000E64   0x........         DC32     BrickConfirmFinalColCom
   \   00000E68   0x........         DC32     LimitLeftWBMin
   \   00000E6C   0x........         DC32     LimitRightWBMin
   \   00000E70   0x........         DC32     LimitLeftWBMax
   1170                  //ControlRow_Weight[2][3] = DebugModifyNum[29];
   1171                }
   1172                else
   1173                {
   1174                }
   1175              }
   1176              //当前是第2页。
   1177              else if(DebugModifyPage == 2)
   \                     ??DebugModifyValue_82: (+1)
   \   00000E74   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000E78   0x7800             LDRB     R0,[R0, #+0]
   \   00000E7A   0x2802             CMP      R0,#+2
   \   00000E7C   0xF040 0x80DE      BNE.W    ??DebugModifyValue_97
   1178              {
   1179                //根据光标位置来改值。
   1180                if(DebugModifyCursor == 0)
   \   00000E80   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000E84   0x7800             LDRB     R0,[R0, #+0]
   \   00000E86   0x2800             CMP      R0,#+0
   \   00000E88   0xD107             BNE.N    ??DebugModifyValue_98
   1181                {
   1182                  DebugModifyNum[30]++;
   \   00000E8A   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000E8E   0x8F80             LDRH     R0,[R0, #+60]
   \   00000E90   0x1C40             ADDS     R0,R0,#+1
   \   00000E92   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000E96   0x8788             STRH     R0,[R1, #+60]
   \   00000E98   0xE230             B.N      ??DebugModifyValue_5
   1183                  //ControlRow_Weight[3][3] = DebugModifyNum[30];
   1184                }
   1185                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_98: (+1)
   \   00000E9A   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000E9E   0x7800             LDRB     R0,[R0, #+0]
   \   00000EA0   0x2801             CMP      R0,#+1
   \   00000EA2   0xD107             BNE.N    ??DebugModifyValue_99
   1186                {
   1187                  DebugModifyNum[31]++;
   \   00000EA4   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000EA8   0x8FC0             LDRH     R0,[R0, #+62]
   \   00000EAA   0x1C40             ADDS     R0,R0,#+1
   \   00000EAC   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000EB0   0x87C8             STRH     R0,[R1, #+62]
   \   00000EB2   0xE223             B.N      ??DebugModifyValue_5
   1188                  //ControlRow_Weight[0][4]  = DebugModifyNum[31];
   1189                }
   1190                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_99: (+1)
   \   00000EB4   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000EB8   0x7800             LDRB     R0,[R0, #+0]
   \   00000EBA   0x2802             CMP      R0,#+2
   \   00000EBC   0xD109             BNE.N    ??DebugModifyValue_100
   1191                {
   1192                  DebugModifyNum[32]++;
   \   00000EBE   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000EC2   0xF8B0 0x0040      LDRH     R0,[R0, #+64]
   \   00000EC6   0x1C40             ADDS     R0,R0,#+1
   \   00000EC8   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000ECC   0xF8A1 0x0040      STRH     R0,[R1, #+64]
   \   00000ED0   0xE214             B.N      ??DebugModifyValue_5
   1193                  //ControlRow_Weight[1][4]  = DebugModifyNum[32];
   1194                }
   1195                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_100: (+1)
   \   00000ED2   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000ED6   0x7800             LDRB     R0,[R0, #+0]
   \   00000ED8   0x2803             CMP      R0,#+3
   \   00000EDA   0xD109             BNE.N    ??DebugModifyValue_101
   1196                {
   1197                  DebugModifyNum[33]++;
   \   00000EDC   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000EE0   0xF8B0 0x0042      LDRH     R0,[R0, #+66]
   \   00000EE4   0x1C40             ADDS     R0,R0,#+1
   \   00000EE6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000EEA   0xF8A1 0x0042      STRH     R0,[R1, #+66]
   \   00000EEE   0xE205             B.N      ??DebugModifyValue_5
   1198                  //ControlRow_Weight[2][4]  = DebugModifyNum[33];
   1199                }
   1200                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_101: (+1)
   \   00000EF0   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000EF4   0x7800             LDRB     R0,[R0, #+0]
   \   00000EF6   0x2804             CMP      R0,#+4
   \   00000EF8   0xD109             BNE.N    ??DebugModifyValue_102
   1201                {
   1202                  DebugModifyNum[34]++;
   \   00000EFA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000EFE   0xF8B0 0x0044      LDRH     R0,[R0, #+68]
   \   00000F02   0x1C40             ADDS     R0,R0,#+1
   \   00000F04   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F08   0xF8A1 0x0044      STRH     R0,[R1, #+68]
   \   00000F0C   0xE1F6             B.N      ??DebugModifyValue_5
   1203                  //ControlRow_Weight[3][4]  = DebugModifyNum[34];
   1204                }
   1205                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_102: (+1)
   \   00000F0E   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000F12   0x7800             LDRB     R0,[R0, #+0]
   \   00000F14   0x2805             CMP      R0,#+5
   \   00000F16   0xD109             BNE.N    ??DebugModifyValue_103
   1206                {
   1207                  DebugModifyNum[35]++;
   \   00000F18   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000F1C   0xF8B0 0x0046      LDRH     R0,[R0, #+70]
   \   00000F20   0x1C40             ADDS     R0,R0,#+1
   \   00000F22   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F26   0xF8A1 0x0046      STRH     R0,[R1, #+70]
   \   00000F2A   0xE1E7             B.N      ??DebugModifyValue_5
   1208                  //ControlRow_Weight[0][5] = DebugModifyNum[35];
   1209                }
   1210                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_103: (+1)
   \   00000F2C   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000F30   0x7800             LDRB     R0,[R0, #+0]
   \   00000F32   0x2806             CMP      R0,#+6
   \   00000F34   0xD109             BNE.N    ??DebugModifyValue_104
   1211                {
   1212                  DebugModifyNum[36]++;
   \   00000F36   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000F3A   0xF8B0 0x0048      LDRH     R0,[R0, #+72]
   \   00000F3E   0x1C40             ADDS     R0,R0,#+1
   \   00000F40   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F44   0xF8A1 0x0048      STRH     R0,[R1, #+72]
   \   00000F48   0xE1D8             B.N      ??DebugModifyValue_5
   1213                  //ControlRow_Weight[1][5] = DebugModifyNum[36];
   1214                }
   1215                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_104: (+1)
   \   00000F4A   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000F4E   0x7800             LDRB     R0,[R0, #+0]
   \   00000F50   0x2807             CMP      R0,#+7
   \   00000F52   0xD109             BNE.N    ??DebugModifyValue_105
   1216                {
   1217                  DebugModifyNum[37]++;
   \   00000F54   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000F58   0xF8B0 0x004A      LDRH     R0,[R0, #+74]
   \   00000F5C   0x1C40             ADDS     R0,R0,#+1
   \   00000F5E   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F62   0xF8A1 0x004A      STRH     R0,[R1, #+74]
   \   00000F66   0xE1C9             B.N      ??DebugModifyValue_5
   1218                  //ControlRow_Weight[2][5] = DebugModifyNum[37];
   1219                }
   1220                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_105: (+1)
   \   00000F68   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000F6C   0x7800             LDRB     R0,[R0, #+0]
   \   00000F6E   0x2808             CMP      R0,#+8
   \   00000F70   0xD109             BNE.N    ??DebugModifyValue_106
   1221                {
   1222                  DebugModifyNum[38]++;
   \   00000F72   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000F76   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000F7A   0x1C40             ADDS     R0,R0,#+1
   \   00000F7C   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F80   0xF8A1 0x004C      STRH     R0,[R1, #+76]
   \   00000F84   0xE1BA             B.N      ??DebugModifyValue_5
   1223                  //ControlRow_Weight[3][5] = DebugModifyNum[38];
   1224                }
   1225                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_106: (+1)
   \   00000F86   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000F8A   0x7800             LDRB     R0,[R0, #+0]
   \   00000F8C   0x2809             CMP      R0,#+9
   \   00000F8E   0xD109             BNE.N    ??DebugModifyValue_107
   1226                {
   1227                  DebugModifyNum[39]++;
   \   00000F90   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000F94   0xF8B0 0x004E      LDRH     R0,[R0, #+78]
   \   00000F98   0x1C40             ADDS     R0,R0,#+1
   \   00000F9A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000F9E   0xF8A1 0x004E      STRH     R0,[R1, #+78]
   \   00000FA2   0xE1AB             B.N      ??DebugModifyValue_5
   1228                  //ControlRow_Weight[0][6] = DebugModifyNum[39];
   1229                }
   1230                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_107: (+1)
   \   00000FA4   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000FA8   0x7800             LDRB     R0,[R0, #+0]
   \   00000FAA   0x280A             CMP      R0,#+10
   \   00000FAC   0xD109             BNE.N    ??DebugModifyValue_108
   1231                {
   1232                  DebugModifyNum[40]++;
   \   00000FAE   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000FB2   0xF8B0 0x0050      LDRH     R0,[R0, #+80]
   \   00000FB6   0x1C40             ADDS     R0,R0,#+1
   \   00000FB8   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000FBC   0xF8A1 0x0050      STRH     R0,[R1, #+80]
   \   00000FC0   0xE19C             B.N      ??DebugModifyValue_5
   1233                  //ControlRow_Weight[1][6] = DebugModifyNum[40];
   1234                }
   1235                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_108: (+1)
   \   00000FC2   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000FC6   0x7800             LDRB     R0,[R0, #+0]
   \   00000FC8   0x280B             CMP      R0,#+11
   \   00000FCA   0xD109             BNE.N    ??DebugModifyValue_109
   1236                {
   1237                  DebugModifyNum[41]++;
   \   00000FCC   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000FD0   0xF8B0 0x0052      LDRH     R0,[R0, #+82]
   \   00000FD4   0x1C40             ADDS     R0,R0,#+1
   \   00000FD6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000FDA   0xF8A1 0x0052      STRH     R0,[R1, #+82]
   \   00000FDE   0xE18D             B.N      ??DebugModifyValue_5
   1238                  //ControlRow_Weight[2][6] = DebugModifyNum[41];
   1239                }
   1240                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_109: (+1)
   \   00000FE0   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000FE4   0x7800             LDRB     R0,[R0, #+0]
   \   00000FE6   0x280C             CMP      R0,#+12
   \   00000FE8   0xD109             BNE.N    ??DebugModifyValue_110
   1241                {
   1242                  DebugModifyNum[42]++;
   \   00000FEA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000FEE   0xF8B0 0x0054      LDRH     R0,[R0, #+84]
   \   00000FF2   0x1C40             ADDS     R0,R0,#+1
   \   00000FF4   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000FF8   0xF8A1 0x0054      STRH     R0,[R1, #+84]
   \   00000FFC   0xE17E             B.N      ??DebugModifyValue_5
   1243                  //ControlRow_Weight[3][6] = DebugModifyNum[42];
   1244                }
   1245                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_110: (+1)
   \   00000FFE   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001002   0x7800             LDRB     R0,[R0, #+0]
   \   00001004   0x280D             CMP      R0,#+13
   \   00001006   0xD109             BNE.N    ??DebugModifyValue_111
   1246                {
   1247                  DebugModifyNum[43]++;
   \   00001008   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000100C   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   00001010   0x1C40             ADDS     R0,R0,#+1
   \   00001012   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001016   0xF8A1 0x0056      STRH     R0,[R1, #+86]
   \   0000101A   0xE16F             B.N      ??DebugModifyValue_5
   1248                  //ControlRow_Weight[0][7] = DebugModifyNum[43];
   1249                }
   1250                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_111: (+1)
   \   0000101C   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001020   0x7800             LDRB     R0,[R0, #+0]
   \   00001022   0x280E             CMP      R0,#+14
   \   00001024   0xF040 0x816A      BNE.W    ??DebugModifyValue_5
   1251                {
   1252                  DebugModifyNum[44]++;
   \   00001028   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000102C   0xF8B0 0x0058      LDRH     R0,[R0, #+88]
   \   00001030   0x1C40             ADDS     R0,R0,#+1
   \   00001032   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001036   0xF8A1 0x0058      STRH     R0,[R1, #+88]
   \   0000103A   0xE15F             B.N      ??DebugModifyValue_5
   1253                  //ControlRow_Weight[1][7] = DebugModifyNum[44];
   1254                }
   1255                else
   1256                {
   1257                }
   1258              }
   1259              //当前是第3页。
   1260              else if(DebugModifyPage == 3)
   \                     ??DebugModifyValue_97: (+1)
   \   0000103C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00001040   0x7800             LDRB     R0,[R0, #+0]
   \   00001042   0x2803             CMP      R0,#+3
   \   00001044   0xF040 0x815A      BNE.W    ??DebugModifyValue_5
   1261              {
   1262                //根据光标位置来改值。
   1263                if(DebugModifyCursor == 0)
   \   00001048   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   0000104C   0x7800             LDRB     R0,[R0, #+0]
   \   0000104E   0x2800             CMP      R0,#+0
   \   00001050   0xD109             BNE.N    ??DebugModifyValue_112
   1264                {
   1265                  DebugModifyNum[45]++;
   \   00001052   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001056   0xF8B0 0x005A      LDRH     R0,[R0, #+90]
   \   0000105A   0x1C40             ADDS     R0,R0,#+1
   \   0000105C   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001060   0xF8A1 0x005A      STRH     R0,[R1, #+90]
   \   00001064   0xE14A             B.N      ??DebugModifyValue_5
   1266                  //ControlRow_Weight[2][7] = DebugModifyNum[45];
   1267                }
   1268                else if(DebugModifyCursor == 1)
   \                     ??DebugModifyValue_112: (+1)
   \   00001066   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   0000106A   0x7800             LDRB     R0,[R0, #+0]
   \   0000106C   0x2801             CMP      R0,#+1
   \   0000106E   0xD109             BNE.N    ??DebugModifyValue_113
   1269                {
   1270                  DebugModifyNum[46]++;
   \   00001070   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001074   0xF8B0 0x005C      LDRH     R0,[R0, #+92]
   \   00001078   0x1C40             ADDS     R0,R0,#+1
   \   0000107A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000107E   0xF8A1 0x005C      STRH     R0,[R1, #+92]
   \   00001082   0xE13B             B.N      ??DebugModifyValue_5
   1271                  //ControlRow_Weight[3][7]  = DebugModifyNum[46];
   1272                }
   1273                else if(DebugModifyCursor == 2)
   \                     ??DebugModifyValue_113: (+1)
   \   00001084   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001088   0x7800             LDRB     R0,[R0, #+0]
   \   0000108A   0x2802             CMP      R0,#+2
   \   0000108C   0xD109             BNE.N    ??DebugModifyValue_114
   1274                {
   1275                  DebugModifyNum[47] += 10;
   \   0000108E   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001092   0xF8B0 0x005E      LDRH     R0,[R0, #+94]
   \   00001096   0x300A             ADDS     R0,R0,#+10
   \   00001098   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000109C   0xF8A1 0x005E      STRH     R0,[R1, #+94]
   \   000010A0   0xE12C             B.N      ??DebugModifyValue_5
   1276                  //TimeRealRun += 10;
   1277                }
   1278                else if(DebugModifyCursor == 3)
   \                     ??DebugModifyValue_114: (+1)
   \   000010A2   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000010A6   0x7800             LDRB     R0,[R0, #+0]
   \   000010A8   0x2803             CMP      R0,#+3
   \   000010AA   0xD109             BNE.N    ??DebugModifyValue_115
   1279                {
   1280                  DebugModifyNum[48] += 1;
   \   000010AC   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000010B0   0xF8B0 0x0060      LDRH     R0,[R0, #+96]
   \   000010B4   0x1C40             ADDS     R0,R0,#+1
   \   000010B6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000010BA   0xF8A1 0x0060      STRH     R0,[R1, #+96]
   \   000010BE   0xE11D             B.N      ??DebugModifyValue_5
   1281                  //SpeedPIDPVal += 1;
   1282                }
   1283                else if(DebugModifyCursor == 4)
   \                     ??DebugModifyValue_115: (+1)
   \   000010C0   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000010C4   0x7800             LDRB     R0,[R0, #+0]
   \   000010C6   0x2804             CMP      R0,#+4
   \   000010C8   0xD109             BNE.N    ??DebugModifyValue_116
   1284                {
   1285                  DebugModifyNum[49] += 1;
   \   000010CA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000010CE   0xF8B0 0x0062      LDRH     R0,[R0, #+98]
   \   000010D2   0x1C40             ADDS     R0,R0,#+1
   \   000010D4   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000010D8   0xF8A1 0x0062      STRH     R0,[R1, #+98]
   \   000010DC   0xE10E             B.N      ??DebugModifyValue_5
   1286                  //SpeedPIDDVal += 1;
   1287                }
   1288                else if(DebugModifyCursor == 5)
   \                     ??DebugModifyValue_116: (+1)
   \   000010DE   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000010E2   0x7800             LDRB     R0,[R0, #+0]
   \   000010E4   0x2805             CMP      R0,#+5
   \   000010E6   0xD109             BNE.N    ??DebugModifyValue_117
   1289                {
   1290                  DebugModifyNum[50]++;
   \   000010E8   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000010EC   0xF8B0 0x0064      LDRH     R0,[R0, #+100]
   \   000010F0   0x1C40             ADDS     R0,R0,#+1
   \   000010F2   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000010F6   0xF8A1 0x0064      STRH     R0,[R1, #+100]
   \   000010FA   0xE0FF             B.N      ??DebugModifyValue_5
   1291                  //SpeedTargetValGryoResult++;
   1292                }
   1293                else if(DebugModifyCursor == 6)
   \                     ??DebugModifyValue_117: (+1)
   \   000010FC   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001100   0x7800             LDRB     R0,[R0, #+0]
   \   00001102   0x2806             CMP      R0,#+6
   \   00001104   0xD110             BNE.N    ??DebugModifyValue_118
   1294                {
   1295                  DebugModifyNum[51]++;
   \   00001106   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000110A   0xF8B0 0x0066      LDRH     R0,[R0, #+102]
   \   0000110E   0x1C40             ADDS     R0,R0,#+1
   \   00001110   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001114   0xF8A1 0x0066      STRH     R0,[R1, #+102]
   \   00001118   0xE0F0             B.N      ??DebugModifyValue_5
   \   0000111A   0xBF00             Nop      
   \                     ??DebugModifyValue_28:
   \   0000111C   0x........         DC32     LimitRightWBMax
   \   00001120   0x........         DC32     LimitLeftWMin
   \   00001124   0x........         DC32     LimitRightWMin
   1296                  //SpeedTargetValAngle++;
   1297                }
   1298                else if(DebugModifyCursor == 7)
   \                     ??DebugModifyValue_118: (+1)
   \   00001128   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   0000112C   0x7800             LDRB     R0,[R0, #+0]
   \   0000112E   0x2807             CMP      R0,#+7
   \   00001130   0xD126             BNE.N    ??DebugModifyValue_119
   1299                {
   1300                  DebugModifyNum[52]++;
   \   00001132   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001136   0xF8B0 0x0068      LDRH     R0,[R0, #+104]
   \   0000113A   0x1C40             ADDS     R0,R0,#+1
   \   0000113C   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001140   0xF8A1 0x0068      STRH     R0,[R1, #+104]
   1301                  limitStopLineBlackXiu = DebugModifyNum[52];
   \   00001144   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001148   0xF8B0 0x0068      LDRH     R0,[R0, #+104]
   \   0000114C   0x....             LDR.N    R1,??DataTable4
   \   0000114E   0x7008             STRB     R0,[R1, #+0]
   \   00001150   0xE0D4             B.N      ??DebugModifyValue_5
   \   00001152   0xBF00             Nop      
   \                     ??DebugModifyValue_31:
   \   00001154   0x........         DC32     LimitLeftWMax
   \   00001158   0x........         DC32     LimitRightWMax
   \   0000115C   0x........         DC32     LimitLeftBMin
   \   00001160   0x........         DC32     LimitRightBMin
   \   00001164   0x........         DC32     LimitLeftBMax
   \   00001168   0x........         DC32     LimitRightBMax
   \   0000116C   0x........         DC32     SpeedTargetValStraight
   \   00001170   0x........         DC32     SpeedBrick
   \   00001174   0x........         DC32     SpeedTargetValGryoUp
   \   00001178   0x........         DC32     SpeedTargetValGryoResult
   \   0000117C   0x........         DC32     SpeedXiaoZhiDao
   1302                  //SpeedTargetValStraight = DebugModifyNum[52];
   1303                }
   1304                else if(DebugModifyCursor == 8)
   \                     ??DebugModifyValue_119: (+1)
   \   00001180   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001184   0x7800             LDRB     R0,[R0, #+0]
   \   00001186   0x2808             CMP      R0,#+8
   \   00001188   0xD117             BNE.N    ??DebugModifyValue_120
   1305                {
   1306                  DebugModifyNum[53]++;
   \   0000118A   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000118E   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   00001192   0x1C40             ADDS     R0,R0,#+1
   \   00001194   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001198   0xF8A1 0x006A      STRH     R0,[R1, #+106]
   1307                  ServoPIDDMat[0] = DebugModifyNum[53];
   \   0000119C   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011A0   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   000011A4   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000011A8   0x8008             STRH     R0,[R1, #+0]
   1308                  ServoPIDD2Mat[0] = DebugModifyNum[53];
   \   000011AA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011AE   0xF8B0 0x006A      LDRH     R0,[R0, #+106]
   \   000011B2   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000011B6   0x8008             STRH     R0,[R1, #+0]
   \   000011B8   0xE0A0             B.N      ??DebugModifyValue_5
   1309                  //GyroResultForbidBackCountNum = DebugModifyNum[53];
   1310                }
   1311                else if(DebugModifyCursor == 9)
   \                     ??DebugModifyValue_120: (+1)
   \   000011BA   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000011BE   0x7800             LDRB     R0,[R0, #+0]
   \   000011C0   0x2809             CMP      R0,#+9
   \   000011C2   0xD115             BNE.N    ??DebugModifyValue_121
   1312                {
   1313                  DebugModifyNum[54]++;
   \   000011C4   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011C8   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000011CC   0x1C40             ADDS     R0,R0,#+1
   \   000011CE   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000011D2   0xF8A1 0x006C      STRH     R0,[R1, #+108]
   1314                  ServoPIDDMat[1] = DebugModifyNum[54];
   \   000011D6   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011DA   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000011DE   0x....             LDR.N    R1,??DataTable5
   \   000011E0   0x8048             STRH     R0,[R1, #+2]
   1315                  ServoPIDD2Mat[1] = DebugModifyNum[54];
   \   000011E2   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011E6   0xF8B0 0x006C      LDRH     R0,[R0, #+108]
   \   000011EA   0x....             LDR.N    R1,??DataTable5_1
   \   000011EC   0x8048             STRH     R0,[R1, #+2]
   \   000011EE   0xE085             B.N      ??DebugModifyValue_5
   1316                  //PathRealStraightCountLimit = DebugModifyNum[54];
   1317                }
   1318                else if(DebugModifyCursor == 10)
   \                     ??DebugModifyValue_121: (+1)
   \   000011F0   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000011F4   0x7800             LDRB     R0,[R0, #+0]
   \   000011F6   0x280A             CMP      R0,#+10
   \   000011F8   0xD115             BNE.N    ??DebugModifyValue_122
   1319                {
   1320                  DebugModifyNum[55]++;
   \   000011FA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000011FE   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   00001202   0x1C40             ADDS     R0,R0,#+1
   \   00001204   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001208   0xF8A1 0x006E      STRH     R0,[R1, #+110]
   1321                  ServoPIDDMat[2] = DebugModifyNum[55];
   \   0000120C   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001210   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   00001214   0x....             LDR.N    R1,??DataTable5
   \   00001216   0x8088             STRH     R0,[R1, #+4]
   1322                  ServoPIDD2Mat[2] = DebugModifyNum[55];
   \   00001218   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000121C   0xF8B0 0x006E      LDRH     R0,[R0, #+110]
   \   00001220   0x....             LDR.N    R1,??DataTable5_1
   \   00001222   0x8088             STRH     R0,[R1, #+4]
   \   00001224   0xE06A             B.N      ??DebugModifyValue_5
   1323                  //StopFlagMaxCountNum = DebugModifyNum[55];
   1324                }
   1325                else if(DebugModifyCursor == 11)
   \                     ??DebugModifyValue_122: (+1)
   \   00001226   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   0000122A   0x7800             LDRB     R0,[R0, #+0]
   \   0000122C   0x280B             CMP      R0,#+11
   \   0000122E   0xD115             BNE.N    ??DebugModifyValue_123
   1326                {
   1327                  DebugModifyNum[56]++;
   \   00001230   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001234   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   00001238   0x1C40             ADDS     R0,R0,#+1
   \   0000123A   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000123E   0xF8A1 0x0070      STRH     R0,[R1, #+112]
   1328                  ServoPIDDMat[3] = DebugModifyNum[56];
   \   00001242   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001246   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   0000124A   0x....             LDR.N    R1,??DataTable5
   \   0000124C   0x80C8             STRH     R0,[R1, #+6]
   1329                  ServoPIDD2Mat[3] = DebugModifyNum[56];
   \   0000124E   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001252   0xF8B0 0x0070      LDRH     R0,[R0, #+112]
   \   00001256   0x....             LDR.N    R1,??DataTable5_1
   \   00001258   0x80C8             STRH     R0,[R1, #+6]
   \   0000125A   0xE04F             B.N      ??DebugModifyValue_5
   1330                  //LightHouseNoStopFlag = DebugModifyNum[56];
   1331                }
   1332                else if(DebugModifyCursor == 12)
   \                     ??DebugModifyValue_123: (+1)
   \   0000125C   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001260   0x7800             LDRB     R0,[R0, #+0]
   \   00001262   0x280C             CMP      R0,#+12
   \   00001264   0xD115             BNE.N    ??DebugModifyValue_124
   1333                {
   1334                  DebugModifyNum[57]++;
   \   00001266   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000126A   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   0000126E   0x1C40             ADDS     R0,R0,#+1
   \   00001270   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00001274   0xF8A1 0x0072      STRH     R0,[R1, #+114]
   1335                  ServoPIDDMat[4] = DebugModifyNum[57];
   \   00001278   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000127C   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   00001280   0x....             LDR.N    R1,??DataTable5
   \   00001282   0x8108             STRH     R0,[R1, #+8]
   1336                  ServoPIDD2Mat[4] = DebugModifyNum[57];
   \   00001284   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00001288   0xF8B0 0x0072      LDRH     R0,[R0, #+114]
   \   0000128C   0x....             LDR.N    R1,??DataTable5_1
   \   0000128E   0x8108             STRH     R0,[R1, #+8]
   \   00001290   0xE034             B.N      ??DebugModifyValue_5
   1337                  //AngleHeadLineNum = DebugModifyNum[57];
   1338                }
   1339                else if(DebugModifyCursor == 13)
   \                     ??DebugModifyValue_124: (+1)
   \   00001292   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00001296   0x7800             LDRB     R0,[R0, #+0]
   \   00001298   0x280D             CMP      R0,#+13
   \   0000129A   0xD115             BNE.N    ??DebugModifyValue_125
   1340                {
   1341                  DebugModifyNum[58]++;
   \   0000129C   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012A0   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000012A4   0x1C40             ADDS     R0,R0,#+1
   \   000012A6   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000012AA   0xF8A1 0x0074      STRH     R0,[R1, #+116]
   1342                  ServoPIDDMat[5] = DebugModifyNum[58];
   \   000012AE   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012B2   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000012B6   0x....             LDR.N    R1,??DataTable5
   \   000012B8   0x8148             STRH     R0,[R1, #+10]
   1343                  ServoPIDD2Mat[5] = DebugModifyNum[58];
   \   000012BA   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012BE   0xF8B0 0x0074      LDRH     R0,[R0, #+116]
   \   000012C2   0x....             LDR.N    R1,??DataTable5_1
   \   000012C4   0x8148             STRH     R0,[R1, #+10]
   \   000012C6   0xE019             B.N      ??DebugModifyValue_5
   1344                  //SpeedTargetValWaitStop = DebugModifyNum[58];
   1345                }
   1346                else if(DebugModifyCursor == 14)
   \                     ??DebugModifyValue_125: (+1)
   \   000012C8   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000012CC   0x7800             LDRB     R0,[R0, #+0]
   \   000012CE   0x280E             CMP      R0,#+14
   \   000012D0   0xD114             BNE.N    ??DebugModifyValue_5
   1347                {
   1348                  DebugModifyNum[59]++;
   \   000012D2   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012D6   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000012DA   0x1C40             ADDS     R0,R0,#+1
   \   000012DC   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000012E0   0xF8A1 0x0076      STRH     R0,[R1, #+118]
   1349                  ServoPIDDMat[6] = DebugModifyNum[59];
   \   000012E4   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012E8   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000012EC   0x....             LDR.N    R1,??DataTable5
   \   000012EE   0x8188             STRH     R0,[R1, #+12]
   1350                  ServoPIDD2Mat[6] = DebugModifyNum[59];
   \   000012F0   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   000012F4   0xF8B0 0x0076      LDRH     R0,[R0, #+118]
   \   000012F8   0x....             LDR.N    R1,??DataTable5_1
   \   000012FA   0x8188             STRH     R0,[R1, #+12]
   1351                  //SpeedTargetValGryoUp = DebugModifyNum[59];
   1352                }
   1353                else
   1354                {
   1355                }      
   1356                
   1357              }
   1358              else
   1359              {
   1360              }
   1361            }
   1362            
   1363            return 1;
   \                     ??DebugModifyValue_5: (+1)
   \   000012FC   0x2001             MOVS     R0,#+1
   \   000012FE   0x4770             BX       LR               ;; return
   1364          }
   1365          
   1366          
   1367          //按键信息处理

   \                                 In section .text, align 2, keep-with-next
   1368          uint8 DebugButtonDeal(void)
   1369          {
   \                     DebugButtonDeal: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1370            //当前为显示界面。
   1371            if(DebugScreenChosen == DebugScreenChosenDisplay)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD148             BNE.N    ??DebugButtonDeal_0
   1372            {
   1373              //1. 首先判断3号按键是否按下，3号按键表示切换显示/调参
   1374              if(DebugButtonFlag[3] == 1)
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000010   0x78C0             LDRB     R0,[R0, #+3]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD107             BNE.N    ??DebugButtonDeal_1
   1375              {
   1376                //切换到调参界面。
   1377                DebugScreenChosen = DebugScreenChosenModify;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
   1378                //清屏准备显示新内容。
   1379                LCD_CLS();
   \   0000001E   0x.... 0x....      BL       LCD_CLS
   1380                
   1381                return 1;
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0xE106             B.N      ??DebugButtonDeal_2
   1382              }
   1383              else
   1384              {
   1385              }
   1386              
   1387              //2. 再判断2号按键是否按下，2号按键在显示界面下暂时没有定义////////////////
   1388              if(DebugButtonFlag[2] == 1)
   \                     ??DebugButtonDeal_1: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000002A   0x7880             LDRB     R0,[R0, #+2]
   \   0000002C   0x2801             CMP      R0,#+1
   \   0000002E   0xD101             BNE.N    ??DebugButtonDeal_3
   1389              {
   1390                
   1391                
   1392                return 1;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0xE0FF             B.N      ??DebugButtonDeal_2
   1393              }
   1394              else
   1395              {
   1396              }
   1397              
   1398              //3. 再判断1号按键是否按下，1号按键在显示界面下表示下一页。
   1399              if(DebugButtonFlag[1] == 1)
   \                     ??DebugButtonDeal_3: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000038   0x7840             LDRB     R0,[R0, #+1]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD114             BNE.N    ??DebugButtonDeal_4
   1400              {
   1401                //显示界面下的页数加1，到顶就回到0.取值范围为0~DebugDisplayPageNum - 1
   1402                if(DebugDisplayPage >= DebugDisplayPageNum - 1)
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2804             CMP      R0,#+4
   \   00000046   0xDB04             BLT.N    ??DebugButtonDeal_5
   1403                {
   1404                  DebugDisplayPage = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
   \   00000050   0xE006             B.N      ??DebugButtonDeal_6
   1405                }
   1406                else
   1407                {
   1408                  DebugDisplayPage++;
   \                     ??DebugButtonDeal_5: (+1)
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x1C40             ADDS     R0,R0,#+1
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   1409                }
   1410                //清屏准备显示新内容。
   1411                LCD_CLS();
   \                     ??DebugButtonDeal_6: (+1)
   \   00000060   0x.... 0x....      BL       LCD_CLS
   1412                
   1413                return 1;
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0xE0E5             B.N      ??DebugButtonDeal_2
   1414              }
   1415              else
   1416              {      
   1417              }    
   1418              
   1419              //4. 再判断0号按键是否按下，2号按键在显示界面下表示上一页。
   1420              if(DebugButtonFlag[0] == 1)
   \                     ??DebugButtonDeal_4: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xF040 0x80DF      BNE.W    ??DebugButtonDeal_7
   1421              {
   1422                //显示界面下的页数减1，到底就回到顶.取值范围为0~DebugDisplayPageNum - 1   
   1423                if(DebugDisplayPage == 0)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD104             BNE.N    ??DebugButtonDeal_8
   1424                {
   1425                  DebugDisplayPage = DebugDisplayPageNum - 1;
   \   0000007E   0x2004             MOVS     R0,#+4
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   00000084   0x7008             STRB     R0,[R1, #+0]
   \   00000086   0xE006             B.N      ??DebugButtonDeal_9
   1426                }
   1427                else
   1428                {
   1429                  DebugDisplayPage--;
   \                     ??DebugButtonDeal_8: (+1)
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x1E40             SUBS     R0,R0,#+1
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   00000094   0x7008             STRB     R0,[R1, #+0]
   1430                }
   1431                //清屏准备显示新内容。
   1432                LCD_CLS();
   \                     ??DebugButtonDeal_9: (+1)
   \   00000096   0x.... 0x....      BL       LCD_CLS
   1433                
   1434                return 1;
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0xE0CA             B.N      ??DebugButtonDeal_2
   1435              }
   1436              else
   1437              {
   1438              }
   1439              
   1440            }
   1441            //当前为调参界面。
   1442            else
   1443            {
   1444              //1. 再判断3号按键是否按下，3号按键表示切换显示/调参。
   1445              if(DebugButtonFlag[3] == 1)
   \                     ??DebugButtonDeal_0: (+1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000A2   0x78C0             LDRB     R0,[R0, #+3]
   \   000000A4   0x2801             CMP      R0,#+1
   \   000000A6   0xD107             BNE.N    ??DebugButtonDeal_10
   1446              {
   1447                //切换到显示界面。
   1448                DebugScreenChosen = DebugScreenChosenDisplay;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
   1449                //清屏准备显示新内容。
   1450                LCD_CLS();
   \   000000B0   0x.... 0x....      BL       LCD_CLS
   1451                
   1452                return 1;      
   \   000000B4   0x2001             MOVS     R0,#+1
   \   000000B6   0xE0BD             B.N      ??DebugButtonDeal_2
   1453              }
   1454              else
   1455              {     
   1456              }
   1457          
   1458              //2. 再判断2号按键是否按下，2号按键在调参界面下表示 确认/保存。
   1459              if(DebugButtonFlag[2] == 1)
   \                     ??DebugButtonDeal_10: (+1)
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000BC   0x7880             LDRB     R0,[R0, #+2]
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xD10F             BNE.N    ??DebugButtonDeal_11
   1460              {
   1461                //之前修改标志为0，再按下2号键表示马上要进行修改。则屏幕上要出现更改标志。
   1462                if(DebugModifyFlag == 0)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000C6   0x7800             LDRB     R0,[R0, #+0]
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD104             BNE.N    ??DebugButtonDeal_12
   1463                {
   1464                  DebugModifyFlag = 1;
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000000D2   0x7008             STRB     R0,[R1, #+0]
   \   000000D4   0xE003             B.N      ??DebugButtonDeal_13
   1465                }
   1466                //之前修改标志为1，再按上2号键表示已经修改完成，需要保存并退出到上下移模式。更改标志消失。
   1467                else
   1468                {
   1469                  DebugModifyFlag = 0;
   \                     ??DebugButtonDeal_12: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000000DC   0x7008             STRB     R0,[R1, #+0]
   1470                  ///////////////////////////////保存怎么保存？？？？
   1471                }
   1472                
   1473                return 1;
   \                     ??DebugButtonDeal_13: (+1)
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0xE0A8             B.N      ??DebugButtonDeal_2
   1474              }
   1475              else
   1476              {
   1477              }
   1478              
   1479              //3. 再判断1号按键是否按下，1号按键在调参界面下表示 光标下移/值减一个单位。
   1480              if(DebugButtonFlag[1] == 1)
   \                     ??DebugButtonDeal_11: (+1)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000E6   0x7840             LDRB     R0,[R0, #+1]
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xD14E             BNE.N    ??DebugButtonDeal_14
   1481              {
   1482                //之前修改标志为0，表示是上下移模式，按下1号键表示下移光标。
   1483                if(DebugModifyFlag == 0)
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x2800             CMP      R0,#+0
   \   000000F4   0xD144             BNE.N    ??DebugButtonDeal_15
   1484                {
   1485                  //光标的取值范围为0~14
   1486                  if(DebugModifyCursor >= 14)
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x280E             CMP      R0,#+14
   \   000000FE   0xDB31             BLT.N    ??DebugButtonDeal_16
   1487                  {
   1488                    //记录上一次的光标位置
   1489                    DebugModifyCursorPre = 14;
   \   00000100   0x200E             MOVS     R0,#+14
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000106   0x7008             STRB     R0,[R1, #+0]
   1490                    DebugModifyCursor = 0;         
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000010E   0x7008             STRB     R0,[R1, #+0]
   1491                    //DebugModifyPage有0,1,2,3共4种取值。翻页就在这4页之间翻。
   1492                    if(DebugModifyPage == 0)
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000114   0x7800             LDRB     R0,[R0, #+0]
   \   00000116   0x2800             CMP      R0,#+0
   \   00000118   0xD104             BNE.N    ??DebugButtonDeal_17
   1493                    {
   1494                      DebugModifyPage = 1;
   \   0000011A   0x2001             MOVS     R0,#+1
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000120   0x7008             STRB     R0,[R1, #+0]
   \   00000122   0xE01C             B.N      ??DebugButtonDeal_18
   1495                    }
   1496                    else if(DebugModifyPage == 1)
   \                     ??DebugButtonDeal_17: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000128   0x7800             LDRB     R0,[R0, #+0]
   \   0000012A   0x2801             CMP      R0,#+1
   \   0000012C   0xD104             BNE.N    ??DebugButtonDeal_19
   1497                    {
   1498                      DebugModifyPage = 2;
   \   0000012E   0x2002             MOVS     R0,#+2
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000134   0x7008             STRB     R0,[R1, #+0]
   \   00000136   0xE012             B.N      ??DebugButtonDeal_18
   1499                    }
   1500                    else if(DebugModifyPage == 2)
   \                     ??DebugButtonDeal_19: (+1)
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   0000013C   0x7800             LDRB     R0,[R0, #+0]
   \   0000013E   0x2802             CMP      R0,#+2
   \   00000140   0xD104             BNE.N    ??DebugButtonDeal_20
   1501                    {
   1502                      DebugModifyPage = 3;
   \   00000142   0x2003             MOVS     R0,#+3
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000148   0x7008             STRB     R0,[R1, #+0]
   \   0000014A   0xE008             B.N      ??DebugButtonDeal_18
   1503                    }
   1504                    else if(DebugModifyPage == 3)
   \                     ??DebugButtonDeal_20: (+1)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000150   0x7800             LDRB     R0,[R0, #+0]
   \   00000152   0x2803             CMP      R0,#+3
   \   00000154   0xD103             BNE.N    ??DebugButtonDeal_18
   1505                    {
   1506                      DebugModifyPage = 0;
   \   00000156   0x2000             MOVS     R0,#+0
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000015C   0x7008             STRB     R0,[R1, #+0]
   1507                    }          
   1508                    else
   1509                    {
   1510                    }
   1511                    //清屏准备显示新内容。
   1512                    LCD_CLS();
   \                     ??DebugButtonDeal_18: (+1)
   \   0000015E   0x.... 0x....      BL       LCD_CLS
   \   00000162   0xE010             B.N      ??DebugButtonDeal_21
   1513                  }
   1514                  else
   1515                  {
   1516                    //记录上一次的光标位置
   1517                    DebugModifyCursorPre = DebugModifyCursor;
   \                     ??DebugButtonDeal_16: (+1)
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000168   0x7800             LDRB     R0,[R0, #+0]
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000016E   0x7008             STRB     R0,[R1, #+0]
   1518                    DebugModifyCursor++;
   \   00000170   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000174   0x7800             LDRB     R0,[R0, #+0]
   \   00000176   0x1C40             ADDS     R0,R0,#+1
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000017C   0x7008             STRB     R0,[R1, #+0]
   \   0000017E   0xE002             B.N      ??DebugButtonDeal_21
   1519                    
   1520                  }
   1521                  
   1522                }
   1523                //之前修改标志为1，表示是加减值模式，按下1号键表示光标所在值要减一个单位。
   1524                else
   1525                {
   1526                  //0表示减1个单位。
   1527                  DebugModifyValue(0);
   \                     ??DebugButtonDeal_15: (+1)
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x.... 0x....      BL       DebugModifyValue
   1528                }
   1529                
   1530                return 1;
   \                     ??DebugButtonDeal_21: (+1)
   \   00000186   0x2001             MOVS     R0,#+1
   \   00000188   0xE054             B.N      ??DebugButtonDeal_2
   1531              }
   1532              else
   1533              {     
   1534              }
   1535          
   1536              //4. 再判断0号按键是否按下，0号按键在调参界面下表示 光标上移/值加一个单位。
   1537              if(DebugButtonFlag[0] == 1)
   \                     ??DebugButtonDeal_14: (+1)
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000018E   0x7800             LDRB     R0,[R0, #+0]
   \   00000190   0x2801             CMP      R0,#+1
   \   00000192   0xD14E             BNE.N    ??DebugButtonDeal_7
   1538              {
   1539                //之前修改标志为0，表示是上下移模式，按下0号键表示上移光标。
   1540                if(DebugModifyFlag == 0)
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000198   0x7800             LDRB     R0,[R0, #+0]
   \   0000019A   0x2800             CMP      R0,#+0
   \   0000019C   0xD144             BNE.N    ??DebugButtonDeal_22
   1541                {
   1542                  //光标的取值范围为0~14
   1543                  if(DebugModifyCursor == 0)
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   000001A2   0x7800             LDRB     R0,[R0, #+0]
   \   000001A4   0x2800             CMP      R0,#+0
   \   000001A6   0xD131             BNE.N    ??DebugButtonDeal_23
   1544                  {
   1545                    //记录上一次的光标位置。
   1546                    DebugModifyCursorPre = 0;
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000001AE   0x7008             STRB     R0,[R1, #+0]
   1547                    DebugModifyCursor = 14;
   \   000001B0   0x200E             MOVS     R0,#+14
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000001B6   0x7008             STRB     R0,[R1, #+0]
   1548                    //DebugModifyPage有0, 1, 2, 3共4种取值。翻页就在这4页之间翻。
   1549                    if(DebugModifyPage == 0)
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001BC   0x7800             LDRB     R0,[R0, #+0]
   \   000001BE   0x2800             CMP      R0,#+0
   \   000001C0   0xD104             BNE.N    ??DebugButtonDeal_24
   1550                    {
   1551                      DebugModifyPage = 3;
   \   000001C2   0x2003             MOVS     R0,#+3
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001C8   0x7008             STRB     R0,[R1, #+0]
   \   000001CA   0xE01C             B.N      ??DebugButtonDeal_25
   1552                    }
   1553                    else if(DebugModifyPage == 1)
   \                     ??DebugButtonDeal_24: (+1)
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001D0   0x7800             LDRB     R0,[R0, #+0]
   \   000001D2   0x2801             CMP      R0,#+1
   \   000001D4   0xD104             BNE.N    ??DebugButtonDeal_26
   1554                    {
   1555                      DebugModifyPage = 0;
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001DC   0x7008             STRB     R0,[R1, #+0]
   \   000001DE   0xE012             B.N      ??DebugButtonDeal_25
   1556                    }
   1557                    else if(DebugModifyPage == 2)
   \                     ??DebugButtonDeal_26: (+1)
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001E4   0x7800             LDRB     R0,[R0, #+0]
   \   000001E6   0x2802             CMP      R0,#+2
   \   000001E8   0xD104             BNE.N    ??DebugButtonDeal_27
   1558                    {
   1559                      DebugModifyPage = 1;
   \   000001EA   0x2001             MOVS     R0,#+1
   \   000001EC   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001F0   0x7008             STRB     R0,[R1, #+0]
   \   000001F2   0xE008             B.N      ??DebugButtonDeal_25
   1560                    }
   1561                    else if(DebugModifyPage == 3)
   \                     ??DebugButtonDeal_27: (+1)
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001F8   0x7800             LDRB     R0,[R0, #+0]
   \   000001FA   0x2803             CMP      R0,#+3
   \   000001FC   0xD103             BNE.N    ??DebugButtonDeal_25
   1562                    {
   1563                      DebugModifyPage = 2;
   \   000001FE   0x2002             MOVS     R0,#+2
   \   00000200   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000204   0x7008             STRB     R0,[R1, #+0]
   1564                    }          
   1565                    else
   1566                    {
   1567                    }
   1568                    //清屏准备显示新内容。
   1569                    LCD_CLS();   
   \                     ??DebugButtonDeal_25: (+1)
   \   00000206   0x.... 0x....      BL       LCD_CLS
   \   0000020A   0xE010             B.N      ??DebugButtonDeal_28
   1570                  }
   1571                  else
   1572                  {
   1573                    //记录上一次的光标位置。
   1574                    DebugModifyCursorPre = DebugModifyCursor;
   \                     ??DebugButtonDeal_23: (+1)
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000210   0x7800             LDRB     R0,[R0, #+0]
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000216   0x7008             STRB     R0,[R1, #+0]
   1575                    DebugModifyCursor--;
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   0000021C   0x7800             LDRB     R0,[R0, #+0]
   \   0000021E   0x1E40             SUBS     R0,R0,#+1
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000224   0x7008             STRB     R0,[R1, #+0]
   \   00000226   0xE002             B.N      ??DebugButtonDeal_28
   1576                  }
   1577               
   1578                }
   1579                //之前修改标志为1，表示是加减值模式，按下0号键表示光标所在值要加一个单位。
   1580                else
   1581                {
   1582                  //1表示加1个单位。
   1583                  DebugModifyValue(1);
   \                     ??DebugButtonDeal_22: (+1)
   \   00000228   0x2001             MOVS     R0,#+1
   \   0000022A   0x.... 0x....      BL       DebugModifyValue
   1584                }
   1585                
   1586                return 1;
   \                     ??DebugButtonDeal_28: (+1)
   \   0000022E   0x2001             MOVS     R0,#+1
   \   00000230   0xE000             B.N      ??DebugButtonDeal_2
   1587              }
   1588              else
   1589              {      
   1590              }
   1591              
   1592            }
   1593            
   1594            return 1;
   \                     ??DebugButtonDeal_7: (+1)
   \   00000232   0x2001             MOVS     R0,#+1
   \                     ??DebugButtonDeal_2: (+1)
   \   00000234   0xBD02             POP      {R1,PC}          ;; return
   1595          }
   1596          
   1597          //光标位置标注
   1598          //num为光标位置0~14

   \                                 In section .text, align 4, keep-with-next
   1599          uint8 DebugModifyCursorMark(void)
   1600          {    
   \                     DebugModifyCursorMark: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1601            
   1602            if(DebugModifyCursor == 0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD11B             BNE.N    ??DebugModifyCursorMark_0
   1603            {
   1604              LCD_P6x8Str(0, 1, "#");
   \   0000000C   0xA278             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       LCD_P6x8Str
   1605              if(DebugModifyCursorPre == 1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD105             BNE.N    ??DebugModifyCursorMark_2
   1606              {
   1607                LCD_P6x8Str(0, 2, " ");
   \   00000020   0xA274             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   00000022   0x2102             MOVS     R1,#+2
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       LCD_P6x8Str
   \   0000002A   0xE1B1             B.N      ??DebugModifyCursorMark_3
   1608              }
   1609              else if(DebugModifyCursorPre == 14)
   \                     ??DebugModifyCursorMark_2: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x280E             CMP      R0,#+14
   \   00000034   0xF040 0x81AC      BNE.W    ??DebugModifyCursorMark_3
   1610              {
   1611                LCD_P6x8Str(64, 7, " ");
   \   00000038   0xA26E             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   0000003A   0x2107             MOVS     R1,#+7
   \   0000003C   0x2040             MOVS     R0,#+64
   \   0000003E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000042   0xE1A5             B.N      ??DebugModifyCursorMark_3
   1612              }
   1613              else
   1614              {     
   1615              }
   1616            }
   1617            else if(DebugModifyCursor == 1)
   \                     ??DebugModifyCursorMark_0: (+1)
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2801             CMP      R0,#+1
   \   0000004C   0xD11B             BNE.N    ??DebugModifyCursorMark_4
   1618            {
   1619              LCD_P6x8Str(0, 2, "#");
   \   0000004E   0xA268             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   00000050   0x2102             MOVS     R1,#+2
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      BL       LCD_P6x8Str
   1620              if(DebugModifyCursorPre == 2)
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000005C   0x7800             LDRB     R0,[R0, #+0]
   \   0000005E   0x2802             CMP      R0,#+2
   \   00000060   0xD105             BNE.N    ??DebugModifyCursorMark_5
   1621              {
   1622                LCD_P6x8Str(0, 3, " ");
   \   00000062   0xA264             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   00000064   0x2103             MOVS     R1,#+3
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       LCD_P6x8Str
   \   0000006C   0xE190             B.N      ??DebugModifyCursorMark_3
   1623              }
   1624              else if(DebugModifyCursorPre == 0)
   \                     ??DebugModifyCursorMark_5: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xF040 0x818B      BNE.W    ??DebugModifyCursorMark_3
   1625              {
   1626                LCD_P6x8Str(0, 1, " ");
   \   0000007A   0xA25E             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       LCD_P6x8Str
   \   00000084   0xE184             B.N      ??DebugModifyCursorMark_3
   1627              }
   1628              else
   1629              {     
   1630              }
   1631            }
   1632            else if(DebugModifyCursor == 2)
   \                     ??DebugModifyCursorMark_4: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable6_2
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2802             CMP      R0,#+2
   \   0000008C   0xD119             BNE.N    ??DebugModifyCursorMark_6
   1633            {
   1634              LCD_P6x8Str(0, 3, "#");
   \   0000008E   0xA258             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   00000090   0x2103             MOVS     R1,#+3
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       LCD_P6x8Str
   1635              if(DebugModifyCursorPre == 3)
   \   00000098   0x....             LDR.N    R0,??DataTable6_9
   \   0000009A   0x7800             LDRB     R0,[R0, #+0]
   \   0000009C   0x2803             CMP      R0,#+3
   \   0000009E   0xD105             BNE.N    ??DebugModifyCursorMark_7
   1636              {
   1637                LCD_P6x8Str(0, 4, " ");
   \   000000A0   0xA254             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000000A2   0x2104             MOVS     R1,#+4
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x.... 0x....      BL       LCD_P6x8Str
   \   000000AA   0xE171             B.N      ??DebugModifyCursorMark_3
   1638              }
   1639              else if(DebugModifyCursorPre == 1)
   \                     ??DebugModifyCursorMark_7: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable6_9
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x2801             CMP      R0,#+1
   \   000000B2   0xF040 0x816D      BNE.W    ??DebugModifyCursorMark_3
   1640              {
   1641                LCD_P6x8Str(0, 2, " ");
   \   000000B6   0xA24F             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000000B8   0x2102             MOVS     R1,#+2
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      BL       LCD_P6x8Str
   \   000000C0   0xE166             B.N      ??DebugModifyCursorMark_3
   1642              }
   1643              else
   1644              {     
   1645              }
   1646            }  
   1647            else if(DebugModifyCursor == 3)
   \                     ??DebugModifyCursorMark_6: (+1)
   \   000000C2   0x....             LDR.N    R0,??DataTable6_2
   \   000000C4   0x7800             LDRB     R0,[R0, #+0]
   \   000000C6   0x2803             CMP      R0,#+3
   \   000000C8   0xD119             BNE.N    ??DebugModifyCursorMark_8
   1648            {
   1649              LCD_P6x8Str(0, 4, "#");
   \   000000CA   0xA249             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   000000CC   0x2104             MOVS     R1,#+4
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x.... 0x....      BL       LCD_P6x8Str
   1650              if(DebugModifyCursorPre == 4)
   \   000000D4   0x....             LDR.N    R0,??DataTable6_9
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x2804             CMP      R0,#+4
   \   000000DA   0xD105             BNE.N    ??DebugModifyCursorMark_9
   1651              {
   1652                LCD_P6x8Str(0, 5, " ");
   \   000000DC   0xA245             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000000DE   0x2105             MOVS     R1,#+5
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      BL       LCD_P6x8Str
   \   000000E6   0xE153             B.N      ??DebugModifyCursorMark_3
   1653              }
   1654              else if(DebugModifyCursorPre == 2)
   \                     ??DebugModifyCursorMark_9: (+1)
   \   000000E8   0x....             LDR.N    R0,??DataTable6_9
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x2802             CMP      R0,#+2
   \   000000EE   0xF040 0x814F      BNE.W    ??DebugModifyCursorMark_3
   1655              {
   1656                LCD_P6x8Str(0, 3, " ");
   \   000000F2   0xA240             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000000F4   0x2103             MOVS     R1,#+3
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x.... 0x....      BL       LCD_P6x8Str
   \   000000FC   0xE148             B.N      ??DebugModifyCursorMark_3
   1657              }
   1658              else
   1659              {     
   1660              }
   1661            }  
   1662            else if(DebugModifyCursor == 4)
   \                     ??DebugModifyCursorMark_8: (+1)
   \   000000FE   0x....             LDR.N    R0,??DataTable6_2
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x2804             CMP      R0,#+4
   \   00000104   0xD119             BNE.N    ??DebugModifyCursorMark_10
   1663            {
   1664              LCD_P6x8Str(0, 5, "#");
   \   00000106   0xA23A             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   00000108   0x2105             MOVS     R1,#+5
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x.... 0x....      BL       LCD_P6x8Str
   1665              if(DebugModifyCursorPre == 5)
   \   00000110   0x....             LDR.N    R0,??DataTable6_9
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2805             CMP      R0,#+5
   \   00000116   0xD105             BNE.N    ??DebugModifyCursorMark_11
   1666              {
   1667                LCD_P6x8Str(0, 6, " ");
   \   00000118   0xA236             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   0000011A   0x2106             MOVS     R1,#+6
   \   0000011C   0x2000             MOVS     R0,#+0
   \   0000011E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000122   0xE135             B.N      ??DebugModifyCursorMark_3
   1668              }
   1669              else if(DebugModifyCursorPre == 3)
   \                     ??DebugModifyCursorMark_11: (+1)
   \   00000124   0x....             LDR.N    R0,??DataTable6_9
   \   00000126   0x7800             LDRB     R0,[R0, #+0]
   \   00000128   0x2803             CMP      R0,#+3
   \   0000012A   0xF040 0x8131      BNE.W    ??DebugModifyCursorMark_3
   1670              {
   1671                LCD_P6x8Str(0, 4, " ");
   \   0000012E   0xA231             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   00000130   0x2104             MOVS     R1,#+4
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x.... 0x....      BL       LCD_P6x8Str
   \   00000138   0xE12A             B.N      ??DebugModifyCursorMark_3
   1672              }
   1673              else
   1674              {     
   1675              }
   1676            } 
   1677            else if(DebugModifyCursor == 5)
   \                     ??DebugModifyCursorMark_10: (+1)
   \   0000013A   0x....             LDR.N    R0,??DataTable6_2
   \   0000013C   0x7800             LDRB     R0,[R0, #+0]
   \   0000013E   0x2805             CMP      R0,#+5
   \   00000140   0xD119             BNE.N    ??DebugModifyCursorMark_12
   1678            {
   1679              LCD_P6x8Str(0, 6, "#");
   \   00000142   0xA22B             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   00000144   0x2106             MOVS     R1,#+6
   \   00000146   0x2000             MOVS     R0,#+0
   \   00000148   0x.... 0x....      BL       LCD_P6x8Str
   1680              if(DebugModifyCursorPre == 6)
   \   0000014C   0x....             LDR.N    R0,??DataTable6_9
   \   0000014E   0x7800             LDRB     R0,[R0, #+0]
   \   00000150   0x2806             CMP      R0,#+6
   \   00000152   0xD105             BNE.N    ??DebugModifyCursorMark_13
   1681              {
   1682                LCD_P6x8Str(0, 7, " ");
   \   00000154   0xA227             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   00000156   0x2107             MOVS     R1,#+7
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x.... 0x....      BL       LCD_P6x8Str
   \   0000015E   0xE117             B.N      ??DebugModifyCursorMark_3
   1683              }
   1684              else if(DebugModifyCursorPre == 4)
   \                     ??DebugModifyCursorMark_13: (+1)
   \   00000160   0x....             LDR.N    R0,??DataTable6_9
   \   00000162   0x7800             LDRB     R0,[R0, #+0]
   \   00000164   0x2804             CMP      R0,#+4
   \   00000166   0xF040 0x8113      BNE.W    ??DebugModifyCursorMark_3
   1685              {
   1686                LCD_P6x8Str(0, 5, " ");
   \   0000016A   0xA222             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   0000016C   0x2105             MOVS     R1,#+5
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x.... 0x....      BL       LCD_P6x8Str
   \   00000174   0xE10C             B.N      ??DebugModifyCursorMark_3
   1687              }
   1688              else
   1689              {     
   1690              }
   1691            }  
   1692            else if(DebugModifyCursor == 6)
   \                     ??DebugModifyCursorMark_12: (+1)
   \   00000176   0x....             LDR.N    R0,??DataTable6_2
   \   00000178   0x7800             LDRB     R0,[R0, #+0]
   \   0000017A   0x2806             CMP      R0,#+6
   \   0000017C   0xD119             BNE.N    ??DebugModifyCursorMark_14
   1693            {
   1694              LCD_P6x8Str(0, 7, "#");
   \   0000017E   0xA21C             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   00000180   0x2107             MOVS     R1,#+7
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x.... 0x....      BL       LCD_P6x8Str
   1695              if(DebugModifyCursorPre == 7)
   \   00000188   0x....             LDR.N    R0,??DataTable6_9
   \   0000018A   0x7800             LDRB     R0,[R0, #+0]
   \   0000018C   0x2807             CMP      R0,#+7
   \   0000018E   0xD105             BNE.N    ??DebugModifyCursorMark_15
   1696              {
   1697                LCD_P6x8Str(64, 0, " ");
   \   00000190   0xA218             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   00000192   0x2100             MOVS     R1,#+0
   \   00000194   0x2040             MOVS     R0,#+64
   \   00000196   0x.... 0x....      BL       LCD_P6x8Str
   \   0000019A   0xE0F9             B.N      ??DebugModifyCursorMark_3
   1698              }
   1699              else if(DebugModifyCursorPre == 5)
   \                     ??DebugModifyCursorMark_15: (+1)
   \   0000019C   0x....             LDR.N    R0,??DataTable6_9
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0x2805             CMP      R0,#+5
   \   000001A2   0xF040 0x80F5      BNE.W    ??DebugModifyCursorMark_3
   1700              {
   1701                LCD_P6x8Str(0, 6, " ");
   \   000001A6   0xA213             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000001A8   0x2106             MOVS     R1,#+6
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0x.... 0x....      BL       LCD_P6x8Str
   \   000001B0   0xE0EE             B.N      ??DebugModifyCursorMark_3
   1702              }
   1703              else
   1704              {     
   1705              }
   1706            }
   1707            else if(DebugModifyCursor == 7)
   \                     ??DebugModifyCursorMark_14: (+1)
   \   000001B2   0x....             LDR.N    R0,??DataTable6_2
   \   000001B4   0x7800             LDRB     R0,[R0, #+0]
   \   000001B6   0x2807             CMP      R0,#+7
   \   000001B8   0xD11E             BNE.N    ??DebugModifyCursorMark_16
   1708            {
   1709              LCD_P6x8Str(64, 0, "#");
   \   000001BA   0xA20D             ADR.N    R2,??DebugModifyCursorMark_1  ;; "#"
   \   000001BC   0x2100             MOVS     R1,#+0
   \   000001BE   0x2040             MOVS     R0,#+64
   \   000001C0   0x.... 0x....      BL       LCD_P6x8Str
   1710              if(DebugModifyCursorPre == 8)
   \   000001C4   0x....             LDR.N    R0,??DataTable6_9
   \   000001C6   0x7800             LDRB     R0,[R0, #+0]
   \   000001C8   0x2808             CMP      R0,#+8
   \   000001CA   0xD105             BNE.N    ??DebugModifyCursorMark_17
   1711              {
   1712                LCD_P6x8Str(64, 1, " ");
   \   000001CC   0xA209             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000001CE   0x2101             MOVS     R1,#+1
   \   000001D0   0x2040             MOVS     R0,#+64
   \   000001D2   0x.... 0x....      BL       LCD_P6x8Str
   \   000001D6   0xE0DB             B.N      ??DebugModifyCursorMark_3
   1713              }
   1714              else if(DebugModifyCursorPre == 6)
   \                     ??DebugModifyCursorMark_17: (+1)
   \   000001D8   0x....             LDR.N    R0,??DataTable6_9
   \   000001DA   0x7800             LDRB     R0,[R0, #+0]
   \   000001DC   0x2806             CMP      R0,#+6
   \   000001DE   0xF040 0x80D7      BNE.W    ??DebugModifyCursorMark_3
   1715              {
   1716                LCD_P6x8Str(0, 7, " ");
   \   000001E2   0xA204             ADR.N    R2,??DebugModifyCursorMark_1+0x4  ;; " "
   \   000001E4   0x2107             MOVS     R1,#+7
   \   000001E6   0x2000             MOVS     R0,#+0
   \   000001E8   0x.... 0x....      BL       LCD_P6x8Str
   \   000001EC   0xE0D0             B.N      ??DebugModifyCursorMark_3
   \   000001EE   0xBF00             Nop      
   \                     ??DebugModifyCursorMark_1:
   \   000001F0   0x23 0x00          DC8      "#",0x0,0x0
   \              0x00 0x00    
   \   000001F4   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    
   1717              }
   1718              else
   1719              {     
   1720              }
   1721            }
   1722            else if(DebugModifyCursor == 8)
   \                     ??DebugModifyCursorMark_16: (+1)
   \   000001F8   0x....             LDR.N    R0,??DataTable6_2
   \   000001FA   0x7800             LDRB     R0,[R0, #+0]
   \   000001FC   0x2808             CMP      R0,#+8
   \   000001FE   0xD119             BNE.N    ??DebugModifyCursorMark_18
   1723            {
   1724              LCD_P6x8Str(64, 1, "#");
   \   00000200   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   00000202   0x2101             MOVS     R1,#+1
   \   00000204   0x2040             MOVS     R0,#+64
   \   00000206   0x.... 0x....      BL       LCD_P6x8Str
   1725              if(DebugModifyCursorPre == 9)
   \   0000020A   0x....             LDR.N    R0,??DataTable6_9
   \   0000020C   0x7800             LDRB     R0,[R0, #+0]
   \   0000020E   0x2809             CMP      R0,#+9
   \   00000210   0xD105             BNE.N    ??DebugModifyCursorMark_19
   1726              {
   1727                LCD_P6x8Str(64, 2, " ");
   \   00000212   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000214   0x2102             MOVS     R1,#+2
   \   00000216   0x2040             MOVS     R0,#+64
   \   00000218   0x.... 0x....      BL       LCD_P6x8Str
   \   0000021C   0xE0B8             B.N      ??DebugModifyCursorMark_3
   1728              }
   1729              else if(DebugModifyCursorPre == 7)
   \                     ??DebugModifyCursorMark_19: (+1)
   \   0000021E   0x....             LDR.N    R0,??DataTable6_9
   \   00000220   0x7800             LDRB     R0,[R0, #+0]
   \   00000222   0x2807             CMP      R0,#+7
   \   00000224   0xF040 0x80B4      BNE.W    ??DebugModifyCursorMark_3
   1730              {
   1731                LCD_P6x8Str(64, 0, " ");
   \   00000228   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   0000022A   0x2100             MOVS     R1,#+0
   \   0000022C   0x2040             MOVS     R0,#+64
   \   0000022E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000232   0xE0AD             B.N      ??DebugModifyCursorMark_3
   1732              }
   1733              else
   1734              {     
   1735              }
   1736            }
   1737            else if(DebugModifyCursor == 9)
   \                     ??DebugModifyCursorMark_18: (+1)
   \   00000234   0x....             LDR.N    R0,??DataTable6_2
   \   00000236   0x7800             LDRB     R0,[R0, #+0]
   \   00000238   0x2809             CMP      R0,#+9
   \   0000023A   0xD119             BNE.N    ??DebugModifyCursorMark_20
   1738            {
   1739              LCD_P6x8Str(64, 2, "#");
   \   0000023C   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   0000023E   0x2102             MOVS     R1,#+2
   \   00000240   0x2040             MOVS     R0,#+64
   \   00000242   0x.... 0x....      BL       LCD_P6x8Str
   1740              if(DebugModifyCursorPre == 10)
   \   00000246   0x....             LDR.N    R0,??DataTable6_9
   \   00000248   0x7800             LDRB     R0,[R0, #+0]
   \   0000024A   0x280A             CMP      R0,#+10
   \   0000024C   0xD105             BNE.N    ??DebugModifyCursorMark_21
   1741              {
   1742                LCD_P6x8Str(64, 3, " ");
   \   0000024E   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000250   0x2103             MOVS     R1,#+3
   \   00000252   0x2040             MOVS     R0,#+64
   \   00000254   0x.... 0x....      BL       LCD_P6x8Str
   \   00000258   0xE09A             B.N      ??DebugModifyCursorMark_3
   1743              }
   1744              else if(DebugModifyCursorPre == 8)
   \                     ??DebugModifyCursorMark_21: (+1)
   \   0000025A   0x....             LDR.N    R0,??DataTable6_9
   \   0000025C   0x7800             LDRB     R0,[R0, #+0]
   \   0000025E   0x2808             CMP      R0,#+8
   \   00000260   0xF040 0x8096      BNE.W    ??DebugModifyCursorMark_3
   1745              {
   1746                LCD_P6x8Str(64, 1, " ");
   \   00000264   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000266   0x2101             MOVS     R1,#+1
   \   00000268   0x2040             MOVS     R0,#+64
   \   0000026A   0x.... 0x....      BL       LCD_P6x8Str
   \   0000026E   0xE08F             B.N      ??DebugModifyCursorMark_3
   1747              }
   1748              else
   1749              {     
   1750              }
   1751            }
   1752            else if(DebugModifyCursor == 10)
   \                     ??DebugModifyCursorMark_20: (+1)
   \   00000270   0x....             LDR.N    R0,??DataTable6_2
   \   00000272   0x7800             LDRB     R0,[R0, #+0]
   \   00000274   0x280A             CMP      R0,#+10
   \   00000276   0xD118             BNE.N    ??DebugModifyCursorMark_22
   1753            {
   1754              LCD_P6x8Str(64, 3, "#");
   \   00000278   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   0000027A   0x2103             MOVS     R1,#+3
   \   0000027C   0x2040             MOVS     R0,#+64
   \   0000027E   0x.... 0x....      BL       LCD_P6x8Str
   1755              if(DebugModifyCursorPre == 11)
   \   00000282   0x....             LDR.N    R0,??DataTable6_9
   \   00000284   0x7800             LDRB     R0,[R0, #+0]
   \   00000286   0x280B             CMP      R0,#+11
   \   00000288   0xD105             BNE.N    ??DebugModifyCursorMark_23
   1756              {
   1757                LCD_P6x8Str(64, 4, " ");
   \   0000028A   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   0000028C   0x2104             MOVS     R1,#+4
   \   0000028E   0x2040             MOVS     R0,#+64
   \   00000290   0x.... 0x....      BL       LCD_P6x8Str
   \   00000294   0xE07C             B.N      ??DebugModifyCursorMark_3
   1758              }
   1759              else if(DebugModifyCursorPre == 9)
   \                     ??DebugModifyCursorMark_23: (+1)
   \   00000296   0x....             LDR.N    R0,??DataTable6_9
   \   00000298   0x7800             LDRB     R0,[R0, #+0]
   \   0000029A   0x2809             CMP      R0,#+9
   \   0000029C   0xD178             BNE.N    ??DebugModifyCursorMark_3
   1760              {
   1761                LCD_P6x8Str(64, 2, " ");
   \   0000029E   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   000002A0   0x2102             MOVS     R1,#+2
   \   000002A2   0x2040             MOVS     R0,#+64
   \   000002A4   0x.... 0x....      BL       LCD_P6x8Str
   \   000002A8   0xE072             B.N      ??DebugModifyCursorMark_3
   1762              }
   1763              else
   1764              {     
   1765              }
   1766            }
   1767            else if(DebugModifyCursor == 11)
   \                     ??DebugModifyCursorMark_22: (+1)
   \   000002AA   0x....             LDR.N    R0,??DataTable6_2
   \   000002AC   0x7800             LDRB     R0,[R0, #+0]
   \   000002AE   0x280B             CMP      R0,#+11
   \   000002B0   0xD118             BNE.N    ??DebugModifyCursorMark_24
   1768            {
   1769              LCD_P6x8Str(64, 4, "#");
   \   000002B2   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   000002B4   0x2104             MOVS     R1,#+4
   \   000002B6   0x2040             MOVS     R0,#+64
   \   000002B8   0x.... 0x....      BL       LCD_P6x8Str
   1770              if(DebugModifyCursorPre == 12)
   \   000002BC   0x....             LDR.N    R0,??DataTable6_9
   \   000002BE   0x7800             LDRB     R0,[R0, #+0]
   \   000002C0   0x280C             CMP      R0,#+12
   \   000002C2   0xD105             BNE.N    ??DebugModifyCursorMark_25
   1771              {
   1772                LCD_P6x8Str(64, 5, " ");
   \   000002C4   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   000002C6   0x2105             MOVS     R1,#+5
   \   000002C8   0x2040             MOVS     R0,#+64
   \   000002CA   0x.... 0x....      BL       LCD_P6x8Str
   \   000002CE   0xE05F             B.N      ??DebugModifyCursorMark_3
   1773              }
   1774              else if(DebugModifyCursorPre == 10)
   \                     ??DebugModifyCursorMark_25: (+1)
   \   000002D0   0x....             LDR.N    R0,??DataTable6_9
   \   000002D2   0x7800             LDRB     R0,[R0, #+0]
   \   000002D4   0x280A             CMP      R0,#+10
   \   000002D6   0xD15B             BNE.N    ??DebugModifyCursorMark_3
   1775              {
   1776                LCD_P6x8Str(64, 3, " ");
   \   000002D8   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   000002DA   0x2103             MOVS     R1,#+3
   \   000002DC   0x2040             MOVS     R0,#+64
   \   000002DE   0x.... 0x....      BL       LCD_P6x8Str
   \   000002E2   0xE055             B.N      ??DebugModifyCursorMark_3
   1777              }
   1778              else
   1779              {     
   1780              }
   1781            }
   1782            else if(DebugModifyCursor == 12)
   \                     ??DebugModifyCursorMark_24: (+1)
   \   000002E4   0x....             LDR.N    R0,??DataTable6_2
   \   000002E6   0x7800             LDRB     R0,[R0, #+0]
   \   000002E8   0x280C             CMP      R0,#+12
   \   000002EA   0xD118             BNE.N    ??DebugModifyCursorMark_26
   1783            {
   1784              LCD_P6x8Str(64, 5, "#");
   \   000002EC   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   000002EE   0x2105             MOVS     R1,#+5
   \   000002F0   0x2040             MOVS     R0,#+64
   \   000002F2   0x.... 0x....      BL       LCD_P6x8Str
   1785              if(DebugModifyCursorPre == 13)
   \   000002F6   0x....             LDR.N    R0,??DataTable6_9
   \   000002F8   0x7800             LDRB     R0,[R0, #+0]
   \   000002FA   0x280D             CMP      R0,#+13
   \   000002FC   0xD105             BNE.N    ??DebugModifyCursorMark_27
   1786              {
   1787                LCD_P6x8Str(64, 6, " ");
   \   000002FE   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000300   0x2106             MOVS     R1,#+6
   \   00000302   0x2040             MOVS     R0,#+64
   \   00000304   0x.... 0x....      BL       LCD_P6x8Str
   \   00000308   0xE042             B.N      ??DebugModifyCursorMark_3
   1788              }
   1789              else if(DebugModifyCursorPre == 11)
   \                     ??DebugModifyCursorMark_27: (+1)
   \   0000030A   0x....             LDR.N    R0,??DataTable6_9
   \   0000030C   0x7800             LDRB     R0,[R0, #+0]
   \   0000030E   0x280B             CMP      R0,#+11
   \   00000310   0xD13E             BNE.N    ??DebugModifyCursorMark_3
   1790              {
   1791                LCD_P6x8Str(64, 4, " ");
   \   00000312   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000314   0x2104             MOVS     R1,#+4
   \   00000316   0x2040             MOVS     R0,#+64
   \   00000318   0x.... 0x....      BL       LCD_P6x8Str
   \   0000031C   0xE038             B.N      ??DebugModifyCursorMark_3
   1792              }
   1793              else
   1794              {     
   1795              }
   1796            }
   1797            else if(DebugModifyCursor == 13)
   \                     ??DebugModifyCursorMark_26: (+1)
   \   0000031E   0x....             LDR.N    R0,??DataTable6_2
   \   00000320   0x7800             LDRB     R0,[R0, #+0]
   \   00000322   0x280D             CMP      R0,#+13
   \   00000324   0xD118             BNE.N    ??DebugModifyCursorMark_28
   1798            {
   1799              LCD_P6x8Str(64, 6, "#");
   \   00000326   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   00000328   0x2106             MOVS     R1,#+6
   \   0000032A   0x2040             MOVS     R0,#+64
   \   0000032C   0x.... 0x....      BL       LCD_P6x8Str
   1800              if(DebugModifyCursorPre == 14)
   \   00000330   0x....             LDR.N    R0,??DataTable6_9
   \   00000332   0x7800             LDRB     R0,[R0, #+0]
   \   00000334   0x280E             CMP      R0,#+14
   \   00000336   0xD105             BNE.N    ??DebugModifyCursorMark_29
   1801              {
   1802                LCD_P6x8Str(64, 7, " ");
   \   00000338   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   0000033A   0x2107             MOVS     R1,#+7
   \   0000033C   0x2040             MOVS     R0,#+64
   \   0000033E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000342   0xE025             B.N      ??DebugModifyCursorMark_3
   1803              }
   1804              else if(DebugModifyCursorPre == 12)
   \                     ??DebugModifyCursorMark_29: (+1)
   \   00000344   0x....             LDR.N    R0,??DataTable6_9
   \   00000346   0x7800             LDRB     R0,[R0, #+0]
   \   00000348   0x280C             CMP      R0,#+12
   \   0000034A   0xD121             BNE.N    ??DebugModifyCursorMark_3
   1805              {
   1806                LCD_P6x8Str(64, 5, " ");
   \   0000034C   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   0000034E   0x2105             MOVS     R1,#+5
   \   00000350   0x2040             MOVS     R0,#+64
   \   00000352   0x.... 0x....      BL       LCD_P6x8Str
   \   00000356   0xE01B             B.N      ??DebugModifyCursorMark_3
   1807              }
   1808              else
   1809              {     
   1810              }
   1811            }
   1812            else if(DebugModifyCursor == 14)
   \                     ??DebugModifyCursorMark_28: (+1)
   \   00000358   0x....             LDR.N    R0,??DataTable6_2
   \   0000035A   0x7800             LDRB     R0,[R0, #+0]
   \   0000035C   0x280E             CMP      R0,#+14
   \   0000035E   0xD117             BNE.N    ??DebugModifyCursorMark_3
   1813            {
   1814              LCD_P6x8Str(64, 7, "#");
   \   00000360   0x....             ADR.N    R2,??DataTable6  ;; "#"
   \   00000362   0x2107             MOVS     R1,#+7
   \   00000364   0x2040             MOVS     R0,#+64
   \   00000366   0x.... 0x....      BL       LCD_P6x8Str
   1815              if(DebugModifyCursorPre == 0)
   \   0000036A   0x....             LDR.N    R0,??DataTable6_9
   \   0000036C   0x7800             LDRB     R0,[R0, #+0]
   \   0000036E   0x2800             CMP      R0,#+0
   \   00000370   0xD105             BNE.N    ??DebugModifyCursorMark_30
   1816              {
   1817                LCD_P6x8Str(0, 1, " ");
   \   00000372   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000374   0x2101             MOVS     R1,#+1
   \   00000376   0x2000             MOVS     R0,#+0
   \   00000378   0x.... 0x....      BL       LCD_P6x8Str
   \   0000037C   0xE008             B.N      ??DebugModifyCursorMark_3
   1818              }
   1819              else if(DebugModifyCursorPre == 13)
   \                     ??DebugModifyCursorMark_30: (+1)
   \   0000037E   0x....             LDR.N    R0,??DataTable6_9
   \   00000380   0x7800             LDRB     R0,[R0, #+0]
   \   00000382   0x280D             CMP      R0,#+13
   \   00000384   0xD104             BNE.N    ??DebugModifyCursorMark_3
   1820              {
   1821                LCD_P6x8Str(64, 6, " ");
   \   00000386   0x....             ADR.N    R2,??DataTable6_1  ;; " "
   \   00000388   0x2106             MOVS     R1,#+6
   \   0000038A   0x2040             MOVS     R0,#+64
   \   0000038C   0x.... 0x....      BL       LCD_P6x8Str
   1822              }
   1823              else
   1824              {     
   1825              }
   1826            }
   1827            else
   1828            {
   1829            }
   1830            
   1831            return 1;
   \                     ??DebugModifyCursorMark_3: (+1)
   \   00000390   0x2001             MOVS     R0,#+1
   \   00000392   0xBD02             POP      {R1,PC}          ;; return
   1832          }
   1833          
   1834          
   1835          //OLED屏显示信息刷新。

   \                                 In section .text, align 4, keep-with-next
   1836          uint8 DebugOLEDUpdate(void)
   1837          {
   \                     DebugOLEDUpdate: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x6DE2      SUB      SP,SP,#+1808
   1838            uint32 temp;
   1839            uint8 i;
   1840              
   1841            //当前为显示界面。
   1842            if(DebugScreenChosen == DebugScreenChosenDisplay)
   \   00000006   0xF8DF 0x0EC8      LDR.W    R0,??DebugOLEDUpdate_0
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xF041 0x82FD      BNE.W    ??DebugOLEDUpdate_1
   1843            {
   1844              //第0页，用来显示调节舵机P值所需要的一些参数。
   1845              //序号+英文名+正负号+数值（没有光标和更改标志）
   1846              //0. DF = DeviFuse                   现偏差。            3位数，有正负。
   1847              //1. DD = DeviNow - DeviPre;         偏差变化率。        3位数，有正负。
   1848              //2. DL = DeviNowLevel               偏差等级。          1位数，无正负。
   1849              //3. DR = DeviRowChosen              偏差选取行。        2位数，无正负。
   1850              //4. SP = ServoPIDPMat[DeviNowLevel] 舵机P值。           3位数，无正负。
   1851              //5. SD = ServoPIDDMat[DeviNowLevel] 舵机D值。           3位数，无正负。
   1852              //6. SV = ServoPIDInputVal-ServoPIDCen       舵机实际值。        3位数，有正负。
   1853              if(DebugDisplayPage == 0)
   \   00000012   0xF8DF 0x0EC0      LDR.W    R0,??DebugOLEDUpdate_0+0x4
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xF040 0x82F9      BNE.W    ??DebugOLEDUpdate_2
   1854              {
   1855                //显示界面第0页用的，第1个表示符号，中间3个表示值，最后1个表示字符串末尾。
   1856                uint8 DF00[5] = {0, 0, 0, 0, 0};   //偏差DevuFuse
   \   0000001E   0xA803             ADD      R0,SP,#+12
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0xC006             STM      R0!,{R1,R2}
   \   00000026   0x3808             SUBS     R0,R0,#+8
   1857                uint8 DD01[5] = {0, 0, 0, 0, 0};   //偏差变化率DevuFuse-DeviPre
   \   00000028   0xA801             ADD      R0,SP,#+4
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0xC006             STM      R0!,{R1,R2}
   \   00000030   0x3808             SUBS     R0,R0,#+8
   1858                uint8 DL02[5] = {0, 0, 0, 0, 0};   //偏差等级DeviNowLevel
   \   00000032   0xA81B             ADD      R0,SP,#+108
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0xC006             STM      R0!,{R1,R2}
   \   0000003A   0x3808             SUBS     R0,R0,#+8
   1859                uint8 DR03[5] = {0, 0, 0, 0, 0};   //偏差选取行DeviRowChosen
   \   0000003C   0xA819             ADD      R0,SP,#+100
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0xC006             STM      R0!,{R1,R2}
   \   00000044   0x3808             SUBS     R0,R0,#+8
   1860                uint8 SP04[5] = {0, 0, 0, 0, 0};   //舵机P值ServoPIDPMat[DeviNowLevel]
   \   00000046   0xA817             ADD      R0,SP,#+92
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0xC006             STM      R0!,{R1,R2}
   \   0000004E   0x3808             SUBS     R0,R0,#+8
   1861                uint8 SD05[5] = {0, 0, 0, 0, 0};   //舵机D值ServoPIDDMat[DeviNowLevel]
   \   00000050   0xA815             ADD      R0,SP,#+84
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x2200             MOVS     R2,#+0
   \   00000056   0xC006             STM      R0!,{R1,R2}
   \   00000058   0x3808             SUBS     R0,R0,#+8
   1862                uint8 SV06[5] = {0, 0, 0, 0, 0};   //舵机实际值FTM1_C0V-ServoPIDCen
   \   0000005A   0xA813             ADD      R0,SP,#+76
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0xC006             STM      R0!,{R1,R2}
   \   00000062   0x3808             SUBS     R0,R0,#+8
   1863                uint8 QL07[5] = {0, 0, 0, 0, 0};   //左编码器返回值QuadLeftCount
   \   00000064   0xA811             ADD      R0,SP,#+68
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0xC006             STM      R0!,{R1,R2}
   \   0000006C   0x3808             SUBS     R0,R0,#+8
   1864                uint8 QR08[5] = {0, 0, 0, 0, 0};   //右编码器返回值QuadRightCount
   \   0000006E   0xA80F             ADD      R0,SP,#+60
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0xC006             STM      R0!,{R1,R2}
   \   00000076   0x3808             SUBS     R0,R0,#+8
   1865                uint8 LS09[5] = {0, 0, 0, 0, 0};   //左线扫描起点BlackLeftLastEdgeStartCol
   \   00000078   0xA80D             ADD      R0,SP,#+52
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0xC006             STM      R0!,{R1,R2}
   \   00000080   0x3808             SUBS     R0,R0,#+8
   1866                uint8 RS10[5] = {0, 0, 0, 0, 0};   //右线扫描起点BlackRighttLastEdgeStartCol
   \   00000082   0xA80B             ADD      R0,SP,#+44
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0xC006             STM      R0!,{R1,R2}
   \   0000008A   0x3808             SUBS     R0,R0,#+8
   1867                uint8 CS11[5] = {0, 0, 0, 0, 0};   //扫描起点定位点BlackCenEdgeStartCol
   \   0000008C   0xA809             ADD      R0,SP,#+36
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x2200             MOVS     R2,#+0
   \   00000092   0xC006             STM      R0!,{R1,R2}
   \   00000094   0x3808             SUBS     R0,R0,#+8
   1868                uint8 LH12[5] = {0, 0, 0, 0, 0};   //左线头BlackLeftHeadLine
   \   00000096   0xA807             ADD      R0,SP,#+28
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0xC006             STM      R0!,{R1,R2}
   \   0000009E   0x3808             SUBS     R0,R0,#+8
   1869                uint8 RH13[5] = {0, 0, 0, 0, 0};   //右线头BlackRightHeadLine
   \   000000A0   0xA805             ADD      R0,SP,#+20
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0x2200             MOVS     R2,#+0
   \   000000A6   0xC006             STM      R0!,{R1,R2}
   \   000000A8   0x3808             SUBS     R0,R0,#+8
   1870          
   1871                //第0个显示值。
   1872                if(DeviFuse < 0)
   \   000000AA   0xF8DF 0x0EE0      LDR.W    R0,??DebugOLEDUpdate_3
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xD507             BPL.N    ??DebugOLEDUpdate_4
   1873                {
   1874                  DF00[0] = 45;      //45代表-
   \   000000B4   0x202D             MOVS     R0,#+45
   \   000000B6   0xF88D 0x000C      STRB     R0,[SP, #+12]
   1875                  temp = 0 - DeviFuse;
   \   000000BA   0xF8DF 0x0ED0      LDR.W    R0,??DebugOLEDUpdate_3
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x4240             RSBS     R0,R0,#+0
   \   000000C2   0xE005             B.N      ??DebugOLEDUpdate_5
   1876                }
   1877                else
   1878                {
   1879                  DF00[0] = 32;   //32代表空格
   \                     ??DebugOLEDUpdate_4: (+1)
   \   000000C4   0x2020             MOVS     R0,#+32
   \   000000C6   0xF88D 0x000C      STRB     R0,[SP, #+12]
   1880                  temp = DeviFuse;
   \   000000CA   0xF8DF 0x0EC0      LDR.W    R0,??DebugOLEDUpdate_3
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   1881                }
   1882                DF00[1] = temp / 100 + 48;           //48代表0
   \                     ??DebugOLEDUpdate_5: (+1)
   \   000000D0   0x2164             MOVS     R1,#+100
   \   000000D2   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000D6   0x3130             ADDS     R1,R1,#+48
   \   000000D8   0xF88D 0x100D      STRB     R1,[SP, #+13]
   1883                DF00[2] = (temp % 100) / 10 + 48;
   \   000000DC   0x2164             MOVS     R1,#+100
   \   000000DE   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000E2   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000000E6   0x220A             MOVS     R2,#+10
   \   000000E8   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000000EC   0x3130             ADDS     R1,R1,#+48
   \   000000EE   0xF88D 0x100E      STRB     R1,[SP, #+14]
   1884                DF00[3] = (temp % 10) / 1 + 48;
   \   000000F2   0x210A             MOVS     R1,#+10
   \   000000F4   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000F8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000FC   0x2101             MOVS     R1,#+1
   \   000000FE   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000102   0x3030             ADDS     R0,R0,#+48
   \   00000104   0xF88D 0x000F      STRB     R0,[SP, #+15]
   1885                //第1个显示值。
   1886                if(DeviFuse - DeviPre < 0)
   \   00000108   0xF8DF 0x0E80      LDR.W    R0,??DebugOLEDUpdate_3
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0xF8DF 0x1E80      LDR.W    R1,??DebugOLEDUpdate_3+0x4
   \   00000112   0x6809             LDR      R1,[R1, #+0]
   \   00000114   0x1A40             SUBS     R0,R0,R1
   \   00000116   0x2800             CMP      R0,#+0
   \   00000118   0xD50A             BPL.N    ??DebugOLEDUpdate_6
   1887                {
   1888                  DD01[0] = 45;
   \   0000011A   0x202D             MOVS     R0,#+45
   \   0000011C   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1889                  temp = DeviPre - DeviFuse;
   \   00000120   0xF8DF 0x0E6C      LDR.W    R0,??DebugOLEDUpdate_3+0x4
   \   00000124   0x6800             LDR      R0,[R0, #+0]
   \   00000126   0xF8DF 0x1E64      LDR.W    R1,??DebugOLEDUpdate_3
   \   0000012A   0x6809             LDR      R1,[R1, #+0]
   \   0000012C   0x1A40             SUBS     R0,R0,R1
   \   0000012E   0xE009             B.N      ??DebugOLEDUpdate_7
   1890                }
   1891                else
   1892                {
   1893                  DD01[0] = 32;
   \                     ??DebugOLEDUpdate_6: (+1)
   \   00000130   0x2020             MOVS     R0,#+32
   \   00000132   0xF88D 0x0004      STRB     R0,[SP, #+4]
   1894                  temp = DeviFuse - DeviPre;        
   \   00000136   0xF8DF 0x0E54      LDR.W    R0,??DebugOLEDUpdate_3
   \   0000013A   0x6800             LDR      R0,[R0, #+0]
   \   0000013C   0xF8DF 0x1E50      LDR.W    R1,??DebugOLEDUpdate_3+0x4
   \   00000140   0x6809             LDR      R1,[R1, #+0]
   \   00000142   0x1A40             SUBS     R0,R0,R1
   1895                }
   1896                DD01[1] = temp / 100 + 48;
   \                     ??DebugOLEDUpdate_7: (+1)
   \   00000144   0x2164             MOVS     R1,#+100
   \   00000146   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000014A   0x3130             ADDS     R1,R1,#+48
   \   0000014C   0xF88D 0x1005      STRB     R1,[SP, #+5]
   1897                DD01[2] = (temp % 100) / 10 + 48;
   \   00000150   0x2164             MOVS     R1,#+100
   \   00000152   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000156   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000015A   0x220A             MOVS     R2,#+10
   \   0000015C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000160   0x3130             ADDS     R1,R1,#+48
   \   00000162   0xF88D 0x1006      STRB     R1,[SP, #+6]
   1898                DD01[3] = (temp % 10) / 1 + 48;      
   \   00000166   0x210A             MOVS     R1,#+10
   \   00000168   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000016C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000170   0x2101             MOVS     R1,#+1
   \   00000172   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000176   0x3030             ADDS     R0,R0,#+48
   \   00000178   0xF88D 0x0007      STRB     R0,[SP, #+7]
   1899                //第2个显示值。
   1900                temp = BatteryCheckVal;
   \   0000017C   0xF8DF 0x0E14      LDR.W    R0,??DebugOLEDUpdate_3+0x8
   \   00000180   0x8800             LDRH     R0,[R0, #+0]
   1901                DL02[0] = 32;
   \   00000182   0x2120             MOVS     R1,#+32
   \   00000184   0xF88D 0x106C      STRB     R1,[SP, #+108]
   1902                DL02[1] = temp / 100 + 48;
   \   00000188   0x2164             MOVS     R1,#+100
   \   0000018A   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000018E   0x3130             ADDS     R1,R1,#+48
   \   00000190   0xF88D 0x106D      STRB     R1,[SP, #+109]
   1903                DL02[2] = (temp % 100) / 10 + 48;            
   \   00000194   0x2164             MOVS     R1,#+100
   \   00000196   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000019A   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000019E   0x220A             MOVS     R2,#+10
   \   000001A0   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000001A4   0x3130             ADDS     R1,R1,#+48
   \   000001A6   0xF88D 0x106E      STRB     R1,[SP, #+110]
   1904                DL02[3] = (temp % 10) / 1 + 48;
   \   000001AA   0x210A             MOVS     R1,#+10
   \   000001AC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000001B0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000001B4   0x2101             MOVS     R1,#+1
   \   000001B6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000001BA   0x3030             ADDS     R0,R0,#+48
   \   000001BC   0xF88D 0x006F      STRB     R0,[SP, #+111]
   1905                //第3个显示值。
   1906                temp = Steer_kp[2];
   \   000001C0   0xF8DF 0x0DD4      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   000001C4   0x8880             LDRH     R0,[R0, #+4]
   1907                DR03[0] = 32;
   \   000001C6   0x2120             MOVS     R1,#+32
   \   000001C8   0xF88D 0x1064      STRB     R1,[SP, #+100]
   1908                DR03[1] = temp / 100 + 48;
   \   000001CC   0x2164             MOVS     R1,#+100
   \   000001CE   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000001D2   0x3130             ADDS     R1,R1,#+48
   \   000001D4   0xF88D 0x1065      STRB     R1,[SP, #+101]
   1909                DR03[2] = (temp % 100) / 10 + 48;
   \   000001D8   0x2164             MOVS     R1,#+100
   \   000001DA   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000001DE   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000001E2   0x220A             MOVS     R2,#+10
   \   000001E4   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000001E8   0x3130             ADDS     R1,R1,#+48
   \   000001EA   0xF88D 0x1066      STRB     R1,[SP, #+102]
   1910                DR03[3] = (temp % 10) / 1 + 48;
   \   000001EE   0x210A             MOVS     R1,#+10
   \   000001F0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000001F4   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000001F8   0x2101             MOVS     R1,#+1
   \   000001FA   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000001FE   0x3030             ADDS     R0,R0,#+48
   \   00000200   0xF88D 0x0067      STRB     R0,[SP, #+103]
   1911                //第4个显示值。
   1912                temp = Steer_kp[3];
   \   00000204   0xF8DF 0x0D90      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   00000208   0x88C0             LDRH     R0,[R0, #+6]
   1913                SP04[0] = 32;
   \   0000020A   0x2120             MOVS     R1,#+32
   \   0000020C   0xF88D 0x105C      STRB     R1,[SP, #+92]
   1914                SP04[1] = temp / 100 + 48;
   \   00000210   0x2164             MOVS     R1,#+100
   \   00000212   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000216   0x3130             ADDS     R1,R1,#+48
   \   00000218   0xF88D 0x105D      STRB     R1,[SP, #+93]
   1915                SP04[2] = (temp % 100) / 10 + 48;
   \   0000021C   0x2164             MOVS     R1,#+100
   \   0000021E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000222   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000226   0x220A             MOVS     R2,#+10
   \   00000228   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000022C   0x3130             ADDS     R1,R1,#+48
   \   0000022E   0xF88D 0x105E      STRB     R1,[SP, #+94]
   1916                SP04[3] = (temp % 10) / 1 + 48;        
   \   00000232   0x210A             MOVS     R1,#+10
   \   00000234   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000238   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000023C   0x2101             MOVS     R1,#+1
   \   0000023E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000242   0x3030             ADDS     R0,R0,#+48
   \   00000244   0xF88D 0x005F      STRB     R0,[SP, #+95]
   1917                //第5个显示值。
   1918                temp = Steer_kp[4];
   \   00000248   0xF8DF 0x0D4C      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   0000024C   0x8900             LDRH     R0,[R0, #+8]
   1919                SD05[0] = 32;
   \   0000024E   0x2120             MOVS     R1,#+32
   \   00000250   0xF88D 0x1054      STRB     R1,[SP, #+84]
   1920                SD05[1] = temp / 100 + 48;
   \   00000254   0x2164             MOVS     R1,#+100
   \   00000256   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000025A   0x3130             ADDS     R1,R1,#+48
   \   0000025C   0xF88D 0x1055      STRB     R1,[SP, #+85]
   1921                SD05[2] = (temp % 100) / 10 + 48;
   \   00000260   0x2164             MOVS     R1,#+100
   \   00000262   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000266   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000026A   0x220A             MOVS     R2,#+10
   \   0000026C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000270   0x3130             ADDS     R1,R1,#+48
   \   00000272   0xF88D 0x1056      STRB     R1,[SP, #+86]
   1922                SD05[3] = (temp % 10) / 1 + 48;        
   \   00000276   0x210A             MOVS     R1,#+10
   \   00000278   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000027C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000280   0x2101             MOVS     R1,#+1
   \   00000282   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000286   0x3030             ADDS     R0,R0,#+48
   \   00000288   0xF88D 0x0057      STRB     R0,[SP, #+87]
   1923                //第6个显示值。
   1924                temp = Steer_kp[5];
   \   0000028C   0xF8DF 0x0D08      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   00000290   0x8940             LDRH     R0,[R0, #+10]
   1925                SV06[0] = 32;
   \   00000292   0x2120             MOVS     R1,#+32
   \   00000294   0xF88D 0x104C      STRB     R1,[SP, #+76]
   1926                SV06[1] = temp / 100 + 48;
   \   00000298   0x2164             MOVS     R1,#+100
   \   0000029A   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000029E   0x3130             ADDS     R1,R1,#+48
   \   000002A0   0xF88D 0x104D      STRB     R1,[SP, #+77]
   1927                SV06[2] = (temp % 100) / 10 + 48;
   \   000002A4   0x2164             MOVS     R1,#+100
   \   000002A6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000002AA   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000002AE   0x220A             MOVS     R2,#+10
   \   000002B0   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000002B4   0x3130             ADDS     R1,R1,#+48
   \   000002B6   0xF88D 0x104E      STRB     R1,[SP, #+78]
   1928                SV06[3] = (temp % 10) / 1 + 48;         
   \   000002BA   0x210A             MOVS     R1,#+10
   \   000002BC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000002C0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000002C4   0x2101             MOVS     R1,#+1
   \   000002C6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000002CA   0x3030             ADDS     R0,R0,#+48
   \   000002CC   0xF88D 0x004F      STRB     R0,[SP, #+79]
   1929                //第7个显示值。
   1930                temp = Steer_kp[6];
   \   000002D0   0xF8DF 0x0CC4      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   000002D4   0x8980             LDRH     R0,[R0, #+12]
   1931                QL07[0] = 32;  //空格
   \   000002D6   0x2120             MOVS     R1,#+32
   \   000002D8   0xF88D 0x1044      STRB     R1,[SP, #+68]
   1932                QL07[1] = temp / 100 + 48;
   \   000002DC   0x2164             MOVS     R1,#+100
   \   000002DE   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000002E2   0x3130             ADDS     R1,R1,#+48
   \   000002E4   0xF88D 0x1045      STRB     R1,[SP, #+69]
   1933                QL07[2] = (temp % 100) / 10 + 48;
   \   000002E8   0x2164             MOVS     R1,#+100
   \   000002EA   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000002EE   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000002F2   0x220A             MOVS     R2,#+10
   \   000002F4   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000002F8   0x3130             ADDS     R1,R1,#+48
   \   000002FA   0xF88D 0x1046      STRB     R1,[SP, #+70]
   1934                QL07[3] = (temp % 10) / 1 + 48;
   \   000002FE   0x210A             MOVS     R1,#+10
   \   00000300   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000304   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000308   0x2101             MOVS     R1,#+1
   \   0000030A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000030E   0x3030             ADDS     R0,R0,#+48
   \   00000310   0xF88D 0x0047      STRB     R0,[SP, #+71]
   1935                //第8个显示值。
   1936                temp = Steer_kp[7];
   \   00000314   0xF8DF 0x0C80      LDR.W    R0,??DebugOLEDUpdate_3+0xC
   \   00000318   0x89C0             LDRH     R0,[R0, #+14]
   1937                QR08[0] = 32;  //空格
   \   0000031A   0x2120             MOVS     R1,#+32
   \   0000031C   0xF88D 0x103C      STRB     R1,[SP, #+60]
   1938                QR08[1] = temp / 100 + 48;
   \   00000320   0x2164             MOVS     R1,#+100
   \   00000322   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000326   0x3130             ADDS     R1,R1,#+48
   \   00000328   0xF88D 0x103D      STRB     R1,[SP, #+61]
   1939                QR08[2] = (temp % 100) / 10 + 48;
   \   0000032C   0x2164             MOVS     R1,#+100
   \   0000032E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000332   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000336   0x220A             MOVS     R2,#+10
   \   00000338   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000033C   0x3130             ADDS     R1,R1,#+48
   \   0000033E   0xF88D 0x103E      STRB     R1,[SP, #+62]
   1940                QR08[3] = (temp % 10) / 1 + 48;   
   \   00000342   0x210A             MOVS     R1,#+10
   \   00000344   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000348   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000034C   0x2101             MOVS     R1,#+1
   \   0000034E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000352   0x3030             ADDS     R0,R0,#+48
   \   00000354   0xF88D 0x003F      STRB     R0,[SP, #+63]
   1941                //第9显示值。
   1942                temp = BlackLeftEdgeStartCol;
   \   00000358   0xF8DF 0x0C50      LDR.W    R0,??DebugOLEDUpdate_3+0x20
   \   0000035C   0x7800             LDRB     R0,[R0, #+0]
   1943                LS09[0] = 32;  //空格
   \   0000035E   0x2120             MOVS     R1,#+32
   \   00000360   0xF88D 0x1034      STRB     R1,[SP, #+52]
   1944                LS09[1] = temp / 100 + 48;
   \   00000364   0x2164             MOVS     R1,#+100
   \   00000366   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000036A   0x3130             ADDS     R1,R1,#+48
   \   0000036C   0xF88D 0x1035      STRB     R1,[SP, #+53]
   1945                LS09[2] = (temp % 100) / 10 + 48;
   \   00000370   0x2164             MOVS     R1,#+100
   \   00000372   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000376   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000037A   0x220A             MOVS     R2,#+10
   \   0000037C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000380   0x3130             ADDS     R1,R1,#+48
   \   00000382   0xF88D 0x1036      STRB     R1,[SP, #+54]
   1946                LS09[3] = (temp % 10) / 1 + 48;  
   \   00000386   0x210A             MOVS     R1,#+10
   \   00000388   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000038C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000390   0x2101             MOVS     R1,#+1
   \   00000392   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000396   0x3030             ADDS     R0,R0,#+48
   \   00000398   0xF88D 0x0037      STRB     R0,[SP, #+55]
   1947                //第10个显示值。
   1948                temp = BlackRightEdgeStartCol;
   \   0000039C   0xF8DF 0x0C10      LDR.W    R0,??DebugOLEDUpdate_3+0x24
   \   000003A0   0x7800             LDRB     R0,[R0, #+0]
   1949                RS10[0] = 32;  //空格
   \   000003A2   0x2120             MOVS     R1,#+32
   \   000003A4   0xF88D 0x102C      STRB     R1,[SP, #+44]
   1950                RS10[1] = temp / 100 + 48;
   \   000003A8   0x2164             MOVS     R1,#+100
   \   000003AA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000003AE   0x3130             ADDS     R1,R1,#+48
   \   000003B0   0xF88D 0x102D      STRB     R1,[SP, #+45]
   1951                RS10[2] = (temp % 100) / 10 + 48;
   \   000003B4   0x2164             MOVS     R1,#+100
   \   000003B6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000003BA   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000003BE   0x220A             MOVS     R2,#+10
   \   000003C0   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000003C4   0x3130             ADDS     R1,R1,#+48
   \   000003C6   0xF88D 0x102E      STRB     R1,[SP, #+46]
   1952                RS10[3] = (temp % 10) / 1 + 48;  
   \   000003CA   0x210A             MOVS     R1,#+10
   \   000003CC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000003D0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000003D4   0x2101             MOVS     R1,#+1
   \   000003D6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000003DA   0x3030             ADDS     R0,R0,#+48
   \   000003DC   0xF88D 0x002F      STRB     R0,[SP, #+47]
   1953                //第11个显示值。
   1954                temp = BlackCenEdgeStartCol;
   \   000003E0   0xF8DF 0x0BD0      LDR.W    R0,??DebugOLEDUpdate_3+0x28
   \   000003E4   0x7800             LDRB     R0,[R0, #+0]
   1955                CS11[0] = 32;  //空格
   \   000003E6   0x2120             MOVS     R1,#+32
   \   000003E8   0xF88D 0x1024      STRB     R1,[SP, #+36]
   1956                CS11[1] = temp / 100 + 48;
   \   000003EC   0x2164             MOVS     R1,#+100
   \   000003EE   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000003F2   0x3130             ADDS     R1,R1,#+48
   \   000003F4   0xF88D 0x1025      STRB     R1,[SP, #+37]
   1957                CS11[2] = (temp % 100) / 10 + 48;
   \   000003F8   0x2164             MOVS     R1,#+100
   \   000003FA   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000003FE   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000402   0x220A             MOVS     R2,#+10
   \   00000404   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000408   0x3130             ADDS     R1,R1,#+48
   \   0000040A   0xF88D 0x1026      STRB     R1,[SP, #+38]
   1958                CS11[3] = (temp % 10) / 1 + 48;  
   \   0000040E   0x210A             MOVS     R1,#+10
   \   00000410   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000414   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000418   0x2101             MOVS     R1,#+1
   \   0000041A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000041E   0x3030             ADDS     R0,R0,#+48
   \   00000420   0xF88D 0x0027      STRB     R0,[SP, #+39]
   1959                //第10个显示值。
   1960                temp = BlackLeftHeadLine;
   \   00000424   0xF8DF 0x0EFC      LDR.W    R0,??DebugOLEDUpdate_8
   \   00000428   0x7800             LDRB     R0,[R0, #+0]
   1961                LH12[0] = 32;  //空格
   \   0000042A   0x2120             MOVS     R1,#+32
   \   0000042C   0xF88D 0x101C      STRB     R1,[SP, #+28]
   1962                LH12[1] = temp / 100 + 48;
   \   00000430   0x2164             MOVS     R1,#+100
   \   00000432   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000436   0x3130             ADDS     R1,R1,#+48
   \   00000438   0xF88D 0x101D      STRB     R1,[SP, #+29]
   1963                LH12[2] = (temp % 100) / 10 + 48;
   \   0000043C   0x2164             MOVS     R1,#+100
   \   0000043E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000442   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000446   0x220A             MOVS     R2,#+10
   \   00000448   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000044C   0x3130             ADDS     R1,R1,#+48
   \   0000044E   0xF88D 0x101E      STRB     R1,[SP, #+30]
   1964                LH12[3] = (temp % 10) / 1 + 48;  
   \   00000452   0x210A             MOVS     R1,#+10
   \   00000454   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000458   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000045C   0x2101             MOVS     R1,#+1
   \   0000045E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000462   0x3030             ADDS     R0,R0,#+48
   \   00000464   0xF88D 0x001F      STRB     R0,[SP, #+31]
   1965                //第11个显示值。
   1966                temp = BlackRightHeadLine;
   \   00000468   0xF8DF 0x0EBC      LDR.W    R0,??DebugOLEDUpdate_8+0x4
   \   0000046C   0x7800             LDRB     R0,[R0, #+0]
   1967                RH13[0] = 32;  //空格
   \   0000046E   0x2120             MOVS     R1,#+32
   \   00000470   0xF88D 0x1014      STRB     R1,[SP, #+20]
   1968                RH13[1] = temp / 100 + 48;
   \   00000474   0x2164             MOVS     R1,#+100
   \   00000476   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000047A   0x3130             ADDS     R1,R1,#+48
   \   0000047C   0xF88D 0x1015      STRB     R1,[SP, #+21]
   1969                RH13[2] = (temp % 100) / 10 + 48;
   \   00000480   0x2164             MOVS     R1,#+100
   \   00000482   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000486   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000048A   0x220A             MOVS     R2,#+10
   \   0000048C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000490   0x3130             ADDS     R1,R1,#+48
   \   00000492   0xF88D 0x1016      STRB     R1,[SP, #+22]
   1970                RH13[3] = (temp % 10) / 1 + 48;        
   \   00000496   0x210A             MOVS     R1,#+10
   \   00000498   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000049C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000004A0   0x2101             MOVS     R1,#+1
   \   000004A2   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000004A6   0x3030             ADDS     R0,R0,#+48
   \   000004A8   0xF88D 0x0017      STRB     R0,[SP, #+23]
   1971                //列，行，字符串。
   1972                LCD_P6x8Str(55, 0, "D_0"); 
   \   000004AC   0xA249             ADR.N    R2,??DebugOLEDUpdate_9  ;; "D_0"
   \   000004AE   0x2100             MOVS     R1,#+0
   \   000004B0   0x2037             MOVS     R0,#+55
   \   000004B2   0x.... 0x....      BL       LCD_P6x8Str
   1973           
   1974                LCD_P6x8Str(0, 1, "DF");
   \   000004B6   0xA248             ADR.N    R2,??DebugOLEDUpdate_9+0x4  ;; 0x44, 0x46, 0x00, 0x00
   \   000004B8   0x2101             MOVS     R1,#+1
   \   000004BA   0x2000             MOVS     R0,#+0
   \   000004BC   0x.... 0x....      BL       LCD_P6x8Str
   1975                LCD_P6x8Str(0, 2, "DD");
   \   000004C0   0xA246             ADR.N    R2,??DebugOLEDUpdate_9+0x8  ;; 0x44, 0x44, 0x00, 0x00
   \   000004C2   0x2102             MOVS     R1,#+2
   \   000004C4   0x2000             MOVS     R0,#+0
   \   000004C6   0x.... 0x....      BL       LCD_P6x8Str
   1976                LCD_P6x8Str(0, 3, "P1");
   \   000004CA   0xA245             ADR.N    R2,??DebugOLEDUpdate_9+0xC  ;; 0x50, 0x31, 0x00, 0x00
   \   000004CC   0x2103             MOVS     R1,#+3
   \   000004CE   0x2000             MOVS     R0,#+0
   \   000004D0   0x.... 0x....      BL       LCD_P6x8Str
   1977                LCD_P6x8Str(0, 4, "P2");
   \   000004D4   0xA243             ADR.N    R2,??DebugOLEDUpdate_9+0x10  ;; 0x50, 0x32, 0x00, 0x00
   \   000004D6   0x2104             MOVS     R1,#+4
   \   000004D8   0x2000             MOVS     R0,#+0
   \   000004DA   0x.... 0x....      BL       LCD_P6x8Str
   1978                LCD_P6x8Str(0, 5, "P3");
   \   000004DE   0xA242             ADR.N    R2,??DebugOLEDUpdate_9+0x14  ;; 0x50, 0x33, 0x00, 0x00
   \   000004E0   0x2105             MOVS     R1,#+5
   \   000004E2   0x2000             MOVS     R0,#+0
   \   000004E4   0x.... 0x....      BL       LCD_P6x8Str
   1979                LCD_P6x8Str(0, 6, "P4");
   \   000004E8   0xA240             ADR.N    R2,??DebugOLEDUpdate_9+0x18  ;; 0x50, 0x34, 0x00, 0x00
   \   000004EA   0x2106             MOVS     R1,#+6
   \   000004EC   0x2000             MOVS     R0,#+0
   \   000004EE   0x.... 0x....      BL       LCD_P6x8Str
   1980                LCD_P6x8Str(0, 7, "P5");
   \   000004F2   0xA23F             ADR.N    R2,??DebugOLEDUpdate_9+0x1C  ;; 0x50, 0x35, 0x00, 0x00
   \   000004F4   0x2107             MOVS     R1,#+7
   \   000004F6   0x2000             MOVS     R0,#+0
   \   000004F8   0x.... 0x....      BL       LCD_P6x8Str
   1981                
   1982                LCD_P6x8Str(18, 1, DF00);
   \   000004FC   0xAA03             ADD      R2,SP,#+12
   \   000004FE   0x2101             MOVS     R1,#+1
   \   00000500   0x2012             MOVS     R0,#+18
   \   00000502   0x.... 0x....      BL       LCD_P6x8Str
   1983                LCD_P6x8Str(18, 2, DD01);
   \   00000506   0xAA01             ADD      R2,SP,#+4
   \   00000508   0x2102             MOVS     R1,#+2
   \   0000050A   0x2012             MOVS     R0,#+18
   \   0000050C   0x.... 0x....      BL       LCD_P6x8Str
   1984                LCD_P6x8Str(18, 3, DL02);
   \   00000510   0xAA1B             ADD      R2,SP,#+108
   \   00000512   0x2103             MOVS     R1,#+3
   \   00000514   0x2012             MOVS     R0,#+18
   \   00000516   0x.... 0x....      BL       LCD_P6x8Str
   1985                LCD_P6x8Str(18, 4, DR03);
   \   0000051A   0xAA19             ADD      R2,SP,#+100
   \   0000051C   0x2104             MOVS     R1,#+4
   \   0000051E   0x2012             MOVS     R0,#+18
   \   00000520   0x.... 0x....      BL       LCD_P6x8Str
   1986                LCD_P6x8Str(18, 5, SP04);
   \   00000524   0xAA17             ADD      R2,SP,#+92
   \   00000526   0x2105             MOVS     R1,#+5
   \   00000528   0x2012             MOVS     R0,#+18
   \   0000052A   0x.... 0x....      BL       LCD_P6x8Str
   1987                LCD_P6x8Str(18, 6, SD05);
   \   0000052E   0xAA15             ADD      R2,SP,#+84
   \   00000530   0x2106             MOVS     R1,#+6
   \   00000532   0x2012             MOVS     R0,#+18
   \   00000534   0x.... 0x....      BL       LCD_P6x8Str
   1988                LCD_P6x8Str(18, 7, SV06);
   \   00000538   0xAA13             ADD      R2,SP,#+76
   \   0000053A   0x2107             MOVS     R1,#+7
   \   0000053C   0x2012             MOVS     R0,#+18
   \   0000053E   0x.... 0x....      BL       LCD_P6x8Str
   1989                
   1990                LCD_P6x8Str(64, 1, "P6");
   \   00000542   0xA22C             ADR.N    R2,??DebugOLEDUpdate_9+0x20  ;; 0x50, 0x36, 0x00, 0x00
   \   00000544   0x2101             MOVS     R1,#+1
   \   00000546   0x2040             MOVS     R0,#+64
   \   00000548   0x.... 0x....      BL       LCD_P6x8Str
   1991                LCD_P6x8Str(64, 2, "P7");
   \   0000054C   0xA22A             ADR.N    R2,??DebugOLEDUpdate_9+0x24  ;; 0x50, 0x37, 0x00, 0x00
   \   0000054E   0x2102             MOVS     R1,#+2
   \   00000550   0x2040             MOVS     R0,#+64
   \   00000552   0x.... 0x....      BL       LCD_P6x8Str
   1992                LCD_P6x8Str(64, 3, "LS");
   \   00000556   0xA229             ADR.N    R2,??DebugOLEDUpdate_9+0x28  ;; 0x4C, 0x53, 0x00, 0x00
   \   00000558   0x2103             MOVS     R1,#+3
   \   0000055A   0x2040             MOVS     R0,#+64
   \   0000055C   0x.... 0x....      BL       LCD_P6x8Str
   1993                LCD_P6x8Str(64, 4, "RS");
   \   00000560   0xA227             ADR.N    R2,??DebugOLEDUpdate_9+0x2C  ;; 0x52, 0x53, 0x00, 0x00
   \   00000562   0x2104             MOVS     R1,#+4
   \   00000564   0x2040             MOVS     R0,#+64
   \   00000566   0x.... 0x....      BL       LCD_P6x8Str
   1994                LCD_P6x8Str(64, 5, "CS");
   \   0000056A   0xA226             ADR.N    R2,??DebugOLEDUpdate_9+0x30  ;; 0x43, 0x53, 0x00, 0x00
   \   0000056C   0x2105             MOVS     R1,#+5
   \   0000056E   0x2040             MOVS     R0,#+64
   \   00000570   0x.... 0x....      BL       LCD_P6x8Str
   1995                LCD_P6x8Str(64, 6, "LH");
   \   00000574   0xA224             ADR.N    R2,??DebugOLEDUpdate_9+0x34  ;; 0x4C, 0x48, 0x00, 0x00
   \   00000576   0x2106             MOVS     R1,#+6
   \   00000578   0x2040             MOVS     R0,#+64
   \   0000057A   0x.... 0x....      BL       LCD_P6x8Str
   1996                LCD_P6x8Str(64, 7, "RH"); 
   \   0000057E   0xA223             ADR.N    R2,??DebugOLEDUpdate_9+0x38  ;; 0x52, 0x48, 0x00, 0x00
   \   00000580   0x2107             MOVS     R1,#+7
   \   00000582   0x2040             MOVS     R0,#+64
   \   00000584   0x.... 0x....      BL       LCD_P6x8Str
   1997                
   1998                LCD_P6x8Str(64+18, 1, QL07);
   \   00000588   0xAA11             ADD      R2,SP,#+68
   \   0000058A   0x2101             MOVS     R1,#+1
   \   0000058C   0x2052             MOVS     R0,#+82
   \   0000058E   0x.... 0x....      BL       LCD_P6x8Str
   1999                LCD_P6x8Str(64+18, 2, QR08);
   \   00000592   0xAA0F             ADD      R2,SP,#+60
   \   00000594   0x2102             MOVS     R1,#+2
   \   00000596   0x2052             MOVS     R0,#+82
   \   00000598   0x.... 0x....      BL       LCD_P6x8Str
   2000                LCD_P6x8Str(64+18, 3, LS09);
   \   0000059C   0xAA0D             ADD      R2,SP,#+52
   \   0000059E   0x2103             MOVS     R1,#+3
   \   000005A0   0x2052             MOVS     R0,#+82
   \   000005A2   0x.... 0x....      BL       LCD_P6x8Str
   2001                LCD_P6x8Str(64+18, 4, RS10);
   \   000005A6   0xAA0B             ADD      R2,SP,#+44
   \   000005A8   0x2104             MOVS     R1,#+4
   \   000005AA   0x2052             MOVS     R0,#+82
   \   000005AC   0x.... 0x....      BL       LCD_P6x8Str
   2002                LCD_P6x8Str(64+18, 5, CS11);
   \   000005B0   0xAA09             ADD      R2,SP,#+36
   \   000005B2   0x2105             MOVS     R1,#+5
   \   000005B4   0x2052             MOVS     R0,#+82
   \   000005B6   0x.... 0x....      BL       LCD_P6x8Str
   2003                LCD_P6x8Str(64+18, 6, LH12);
   \   000005BA   0xAA07             ADD      R2,SP,#+28
   \   000005BC   0x2106             MOVS     R1,#+6
   \   000005BE   0x2052             MOVS     R0,#+82
   \   000005C0   0x.... 0x....      BL       LCD_P6x8Str
   2004                LCD_P6x8Str(64+18, 7, RH13);
   \   000005C4   0xAA05             ADD      R2,SP,#+20
   \   000005C6   0x2107             MOVS     R1,#+7
   \   000005C8   0x2052             MOVS     R0,#+82
   \   000005CA   0x.... 0x....      BL       LCD_P6x8Str
   \   000005CE   0xF001 0xBBFD      B.W      ??DebugOLEDUpdate_10
   \   000005D2   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_9:
   \   000005D4   0x44 0x5F          DC8      "D_0"
   \              0x30 0x00    
   \   000005D8   0x44 0x46          DC8      0x44, 0x46, 0x00, 0x00
   \              0x00 0x00    
   \   000005DC   0x44 0x44          DC8      0x44, 0x44, 0x00, 0x00
   \              0x00 0x00    
   \   000005E0   0x50 0x31          DC8      0x50, 0x31, 0x00, 0x00
   \              0x00 0x00    
   \   000005E4   0x50 0x32          DC8      0x50, 0x32, 0x00, 0x00
   \              0x00 0x00    
   \   000005E8   0x50 0x33          DC8      0x50, 0x33, 0x00, 0x00
   \              0x00 0x00    
   \   000005EC   0x50 0x34          DC8      0x50, 0x34, 0x00, 0x00
   \              0x00 0x00    
   \   000005F0   0x50 0x35          DC8      0x50, 0x35, 0x00, 0x00
   \              0x00 0x00    
   \   000005F4   0x50 0x36          DC8      0x50, 0x36, 0x00, 0x00
   \              0x00 0x00    
   \   000005F8   0x50 0x37          DC8      0x50, 0x37, 0x00, 0x00
   \              0x00 0x00    
   \   000005FC   0x4C 0x53          DC8      0x4C, 0x53, 0x00, 0x00
   \              0x00 0x00    
   \   00000600   0x52 0x53          DC8      0x52, 0x53, 0x00, 0x00
   \              0x00 0x00    
   \   00000604   0x43 0x53          DC8      0x43, 0x53, 0x00, 0x00
   \              0x00 0x00    
   \   00000608   0x4C 0x48          DC8      0x4C, 0x48, 0x00, 0x00
   \              0x00 0x00    
   \   0000060C   0x52 0x48          DC8      0x52, 0x48, 0x00, 0x00
   \              0x00 0x00    
   2005          
   2006              }
   2007              //第1页。用来显示固定6行的左黑线两边的黑点白点的像素值。
   2008              else if(DebugDisplayPage == 1)
   \                     ??DebugOLEDUpdate_2: (+1)
   \   00000610   0xF8DF 0x08C0      LDR.W    R0,??DebugOLEDUpdate_0+0x4
   \   00000614   0x7800             LDRB     R0,[R0, #+0]
   \   00000616   0x2801             CMP      R0,#+1
   \   00000618   0xF040 0x8251      BNE.W    ??DebugOLEDUpdate_11
   2009              {
   2010                //显示界面第1页用的。
   2011                uint8 D_1_LB[18][4] = {0, 0, 0, 0};
   \   0000061C   0xA88F             ADD      R0,SP,#+572
   \   0000061E   0x2148             MOVS     R1,#+72
   \   00000620   0x.... 0x....      BL       __aeabi_memclr4
   2012                uint8 D_1_LW[18][4] = {0, 0, 0, 0};
   \   00000624   0xA87D             ADD      R0,SP,#+500
   \   00000626   0x2148             MOVS     R1,#+72
   \   00000628   0x.... 0x....      BL       __aeabi_memclr4
   2013                
   2014                //建立字符串的尾巴。
   2015                for(i = 0; i < 18; i++)
   \   0000062C   0x2400             MOVS     R4,#+0
   \   0000062E   0xE00C             B.N      ??DebugOLEDUpdate_12
   2016                {
   2017                  D_1_LB[i][3] = 0;
   \                     ??DebugOLEDUpdate_13: (+1)
   \   00000630   0x2000             MOVS     R0,#+0
   \   00000632   0xA98F             ADD      R1,SP,#+572
   \   00000634   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000636   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000063A   0x70C8             STRB     R0,[R1, #+3]
   2018                  D_1_LW[i][3] = 0;
   \   0000063C   0x2000             MOVS     R0,#+0
   \   0000063E   0xA97D             ADD      R1,SP,#+500
   \   00000640   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000642   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000646   0x70C8             STRB     R0,[R1, #+3]
   2019                }      
   \   00000648   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_12: (+1)
   \   0000064A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000064C   0x2C12             CMP      R4,#+18
   \   0000064E   0xDBEF             BLT.N    ??DebugOLEDUpdate_13
   2020                
   2021                //计算左边18个值和右边18个值，左右边关于中间对称。。
   2022                //12 06 00
   2023                //13 07 01
   2024                //14 08 02
   2025                //15 09 03
   2026                //16 10 04
   2027                //17 11 05
   2028                for(i = 0; i <= 5; i++)
   \   00000650   0x2400             MOVS     R4,#+0
   \   00000652   0xE15A             B.N      ??DebugOLEDUpdate_14
   2029                {
   2030                  //当前行的左黑线提取失败。
   2031                  if(BlackLeftLoc[9 + i * 10][0] ==  MaxValUint8)
   2032                  {
   2033                    D_1_LB[i][0] = 32;
   2034                    D_1_LB[i][1] = 32;
   2035                    D_1_LB[i][2] = 32;   
   2036          
   2037                    D_1_LB[i + 6][0] = 32;
   2038                    D_1_LB[i + 6][1] = 32;
   2039                    D_1_LB[i + 6][2] = 32;         
   2040          
   2041                    D_1_LB[i + 12][0] = 32;
   2042                    D_1_LB[i + 12][1] = 32;
   2043                    D_1_LB[i + 12][2] = 32;
   2044          
   2045                    D_1_LW[i][0] = 32;
   2046                    D_1_LW[i][1] = 32;
   2047                    D_1_LW[i][2] = 32;
   2048          
   2049                    D_1_LW[i + 6][0] = 32;
   2050                    D_1_LW[i + 6][1] = 32;
   2051                    D_1_LW[i + 6][2] = 32;
   2052          
   2053                    D_1_LW[i + 12][0] = 32;
   2054                    D_1_LW[i + 12][1] = 32;
   2055                    D_1_LW[i + 12][2] = 32;
   2056                  }
   2057                  //当前行的左黑线提取成功。
   2058                  else
   2059                  {
   2060                    //0-5表示第3列。
   2061                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0] + 1 + BlackLeftEdgeNum] - ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0]];
   \                     ??DebugOLEDUpdate_15: (+1)
   \   00000654   0xF8DF 0x0CD4      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000658   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000065A   0xF640 0x11C4      MOVW     R1,#+2500
   \   0000065E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000662   0xF8DF 0x1CCC      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   00000666   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000668   0x221E             MOVS     R2,#+30
   \   0000066A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000066E   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000670   0x1808             ADDS     R0,R1,R0
   \   00000672   0xF890 0x08CE      LDRB     R0,[R0, #+2254]
   \   00000676   0xF8DF 0x1CB4      LDR.W    R1,??DebugOLEDUpdate_8+0x8
   \   0000067A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000067C   0xF640 0x12C4      MOVW     R2,#+2500
   \   00000680   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000684   0xF8DF 0x2CA8      LDR.W    R2,??DebugOLEDUpdate_8+0xC
   \   00000688   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000068A   0x231E             MOVS     R3,#+30
   \   0000068C   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000690   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000692   0x1851             ADDS     R1,R2,R1
   \   00000694   0xF891 0x18CA      LDRB     R1,[R1, #+2250]
   \   00000698   0x1A40             SUBS     R0,R0,R1
   2062                    D_1_LB[i][0] = temp / 100 + 48;
   \   0000069A   0x2164             MOVS     R1,#+100
   \   0000069C   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000006A0   0x3130             ADDS     R1,R1,#+48
   \   000006A2   0xAA8F             ADD      R2,SP,#+572
   \   000006A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006A6   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2063                    D_1_LB[i][1] = (temp % 100) / 10 + 48;
   \   000006AA   0x2164             MOVS     R1,#+100
   \   000006AC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000006B0   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000006B4   0x220A             MOVS     R2,#+10
   \   000006B6   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000006BA   0x3130             ADDS     R1,R1,#+48
   \   000006BC   0xAA8F             ADD      R2,SP,#+572
   \   000006BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006C0   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000006C4   0x7051             STRB     R1,[R2, #+1]
   2064                    D_1_LB[i][2] = (temp % 10) / 1 + 48;   
   \   000006C6   0x210A             MOVS     R1,#+10
   \   000006C8   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000006CC   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000006D0   0x2101             MOVS     R1,#+1
   \   000006D2   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000006D6   0x3030             ADDS     R0,R0,#+48
   \   000006D8   0xA98F             ADD      R1,SP,#+572
   \   000006DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006DC   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000006E0   0x7088             STRB     R0,[R1, #+2]
   2065                    
   2066                    //6-11表示第2列。
   2067                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0]];
   \   000006E2   0xF8DF 0x0C48      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   000006E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006E8   0xF640 0x11C4      MOVW     R1,#+2500
   \   000006EC   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000006F0   0xF8DF 0x1C3C      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   000006F4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006F6   0x221E             MOVS     R2,#+30
   \   000006F8   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000006FC   0x7EC9             LDRB     R1,[R1, #+27]
   \   000006FE   0x1808             ADDS     R0,R1,R0
   \   00000700   0xF890 0x08CA      LDRB     R0,[R0, #+2250]
   2068                    D_1_LB[i + 6][0] = temp / 100 + 48;
   \   00000704   0x2164             MOVS     R1,#+100
   \   00000706   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000070A   0x3130             ADDS     R1,R1,#+48
   \   0000070C   0xAA8F             ADD      R2,SP,#+572
   \   0000070E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000710   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000714   0x7611             STRB     R1,[R2, #+24]
   2069                    D_1_LB[i + 6][1] = (temp % 100) / 10 + 48;
   \   00000716   0x2164             MOVS     R1,#+100
   \   00000718   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000071C   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000720   0x220A             MOVS     R2,#+10
   \   00000722   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000726   0x3130             ADDS     R1,R1,#+48
   \   00000728   0xAA8F             ADD      R2,SP,#+572
   \   0000072A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000072C   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000730   0x7651             STRB     R1,[R2, #+25]
   2070                    D_1_LB[i + 6][2] = (temp % 10) / 1 + 48;         
   \   00000732   0x210A             MOVS     R1,#+10
   \   00000734   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000738   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000073C   0x2101             MOVS     R1,#+1
   \   0000073E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000742   0x3030             ADDS     R0,R0,#+48
   \   00000744   0xA98F             ADD      R1,SP,#+572
   \   00000746   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000748   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000074C   0x7688             STRB     R0,[R1, #+26]
   2071                    
   2072                    //12-17表示第1列。
   2073                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0] - 1];
   \   0000074E   0xF8DF 0x0BDC      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000752   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000754   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000758   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000075C   0xF8DF 0x1BD0      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   00000760   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000762   0x221E             MOVS     R2,#+30
   \   00000764   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000768   0x7EC9             LDRB     R1,[R1, #+27]
   \   0000076A   0x1808             ADDS     R0,R1,R0
   \   0000076C   0xF890 0x08C9      LDRB     R0,[R0, #+2249]
   2074                    D_1_LB[i + 12][0] = temp / 100 + 48;
   \   00000770   0x2164             MOVS     R1,#+100
   \   00000772   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000776   0x3130             ADDS     R1,R1,#+48
   \   00000778   0xAA8F             ADD      R2,SP,#+572
   \   0000077A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000077C   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000780   0xF882 0x1030      STRB     R1,[R2, #+48]
   2075                    D_1_LB[i + 12][1] = (temp % 100) / 10 + 48;
   \   00000784   0x2164             MOVS     R1,#+100
   \   00000786   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000078A   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000078E   0x220A             MOVS     R2,#+10
   \   00000790   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000794   0x3130             ADDS     R1,R1,#+48
   \   00000796   0xAA8F             ADD      R2,SP,#+572
   \   00000798   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000079A   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000079E   0xF882 0x1031      STRB     R1,[R2, #+49]
   2076                    D_1_LB[i + 12][2] = (temp % 10) / 1 + 48;
   \   000007A2   0x210A             MOVS     R1,#+10
   \   000007A4   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000007A8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000007AC   0x2101             MOVS     R1,#+1
   \   000007AE   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000007B2   0x3030             ADDS     R0,R0,#+48
   \   000007B4   0xA98F             ADD      R1,SP,#+572
   \   000007B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007B8   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000007BC   0xF881 0x0032      STRB     R0,[R1, #+50]
   2077            
   2078                    //0-5表示第4列。
   2079                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0] + 1 + BlackLeftEdgeNum];
   \   000007C0   0xF8DF 0x0B68      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   000007C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007C6   0xF640 0x11C4      MOVW     R1,#+2500
   \   000007CA   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000007CE   0xF8DF 0x1B60      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   000007D2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007D4   0x221E             MOVS     R2,#+30
   \   000007D6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000007DA   0x7EC9             LDRB     R1,[R1, #+27]
   \   000007DC   0x1808             ADDS     R0,R1,R0
   \   000007DE   0xF890 0x08CE      LDRB     R0,[R0, #+2254]
   2080                    D_1_LW[i][0] = temp / 100 + 48;
   \   000007E2   0x2164             MOVS     R1,#+100
   \   000007E4   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000007E8   0x3130             ADDS     R1,R1,#+48
   \   000007EA   0xAA7D             ADD      R2,SP,#+500
   \   000007EC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007EE   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2081                    D_1_LW[i][1] = (temp % 100) / 10 + 48;
   \   000007F2   0x2164             MOVS     R1,#+100
   \   000007F4   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000007F8   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000007FC   0x220A             MOVS     R2,#+10
   \   000007FE   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000802   0x3130             ADDS     R1,R1,#+48
   \   00000804   0xAA7D             ADD      R2,SP,#+500
   \   00000806   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000808   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000080C   0x7051             STRB     R1,[R2, #+1]
   2082                    D_1_LW[i][2] = (temp % 10) / 1 + 48;
   \   0000080E   0x210A             MOVS     R1,#+10
   \   00000810   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000814   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000818   0x2101             MOVS     R1,#+1
   \   0000081A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000081E   0x3030             ADDS     R0,R0,#+48
   \   00000820   0xA97D             ADD      R1,SP,#+500
   \   00000822   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000824   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000828   0x7088             STRB     R0,[R1, #+2]
   2083                    
   2084                    //6-11表示第5列。
   2085                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0] + 2 + BlackLeftEdgeNum];
   \   0000082A   0xF8DF 0x0B00      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   0000082E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000830   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000834   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000838   0xF8DF 0x1AF4      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   0000083C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000083E   0x221E             MOVS     R2,#+30
   \   00000840   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000844   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000846   0x1808             ADDS     R0,R1,R0
   \   00000848   0xF890 0x08CF      LDRB     R0,[R0, #+2255]
   2086                    D_1_LW[i + 6][0] = temp / 100 + 48;
   \   0000084C   0x2164             MOVS     R1,#+100
   \   0000084E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000852   0x3130             ADDS     R1,R1,#+48
   \   00000854   0xAA7D             ADD      R2,SP,#+500
   \   00000856   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000858   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000085C   0x7611             STRB     R1,[R2, #+24]
   2087                    D_1_LW[i + 6][1] = (temp % 100) / 10 + 48;
   \   0000085E   0x2164             MOVS     R1,#+100
   \   00000860   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000864   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000868   0x220A             MOVS     R2,#+10
   \   0000086A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000086E   0x3130             ADDS     R1,R1,#+48
   \   00000870   0xAA7D             ADD      R2,SP,#+500
   \   00000872   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000874   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000878   0x7651             STRB     R1,[R2, #+25]
   2088                    D_1_LW[i + 6][2] = (temp % 10) / 1 + 48;
   \   0000087A   0x210A             MOVS     R1,#+10
   \   0000087C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000880   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000884   0x2101             MOVS     R1,#+1
   \   00000886   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000088A   0x3030             ADDS     R0,R0,#+48
   \   0000088C   0xA97D             ADD      R1,SP,#+500
   \   0000088E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000890   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000894   0x7688             STRB     R0,[R1, #+26]
   2089                    
   2090                    //12-17表示第6列。
   2091                    temp = ImgNew[9 + i * 10][BlackLeftLoc[9 + i * 10][0] + 3 + BlackLeftEdgeNum];
   \   00000896   0xF8DF 0x0A94      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   0000089A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000089C   0xF640 0x11C4      MOVW     R1,#+2500
   \   000008A0   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000008A4   0xF8DF 0x1A88      LDR.W    R1,??DebugOLEDUpdate_8+0xC
   \   000008A8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000008AA   0x221E             MOVS     R2,#+30
   \   000008AC   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000008B0   0x7EC9             LDRB     R1,[R1, #+27]
   \   000008B2   0x1808             ADDS     R0,R1,R0
   \   000008B4   0xF890 0x08D0      LDRB     R0,[R0, #+2256]
   2092                    D_1_LW[i + 12][0] = temp / 100 + 48;
   \   000008B8   0x2164             MOVS     R1,#+100
   \   000008BA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000008BE   0x3130             ADDS     R1,R1,#+48
   \   000008C0   0xAA7D             ADD      R2,SP,#+500
   \   000008C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000008C4   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000008C8   0xF882 0x1030      STRB     R1,[R2, #+48]
   2093                    D_1_LW[i + 12][1] = (temp % 100) / 10 + 48;
   \   000008CC   0x2164             MOVS     R1,#+100
   \   000008CE   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000008D2   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000008D6   0x220A             MOVS     R2,#+10
   \   000008D8   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000008DC   0x3130             ADDS     R1,R1,#+48
   \   000008DE   0xAA7D             ADD      R2,SP,#+500
   \   000008E0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000008E2   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000008E6   0xF882 0x1031      STRB     R1,[R2, #+49]
   2094                    D_1_LW[i + 12][2] = (temp % 10) / 1 + 48;
   \   000008EA   0x210A             MOVS     R1,#+10
   \   000008EC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000008F0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000008F4   0x2101             MOVS     R1,#+1
   \   000008F6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000008FA   0x3030             ADDS     R0,R0,#+48
   \   000008FC   0xA97D             ADD      R1,SP,#+500
   \   000008FE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000900   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000904   0xF881 0x0032      STRB     R0,[R1, #+50]
   2095                  }
   \                     ??DebugOLEDUpdate_16: (+1)
   \   00000908   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_14: (+1)
   \   0000090A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000090C   0x2C06             CMP      R4,#+6
   \   0000090E   0xDA7D             BGE.N    ??DebugOLEDUpdate_17
   \   00000910   0xF8DF 0x0A1C      LDR.W    R0,??DebugOLEDUpdate_8+0xC
   \   00000914   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000916   0x210A             MOVS     R1,#+10
   \   00000918   0xFB01 0xF104      MUL      R1,R1,R4
   \   0000091C   0x2203             MOVS     R2,#+3
   \   0000091E   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000922   0x7EC0             LDRB     R0,[R0, #+27]
   \   00000924   0x28FF             CMP      R0,#+255
   \   00000926   0xF47F 0xAE95      BNE.W    ??DebugOLEDUpdate_15
   \   0000092A   0x2020             MOVS     R0,#+32
   \   0000092C   0xA98F             ADD      R1,SP,#+572
   \   0000092E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000930   0xF801 0x0024      STRB     R0,[R1, R4, LSL #+2]
   \   00000934   0x2020             MOVS     R0,#+32
   \   00000936   0xA98F             ADD      R1,SP,#+572
   \   00000938   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000093A   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000093E   0x7048             STRB     R0,[R1, #+1]
   \   00000940   0x2020             MOVS     R0,#+32
   \   00000942   0xA98F             ADD      R1,SP,#+572
   \   00000944   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000946   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000094A   0x7088             STRB     R0,[R1, #+2]
   \   0000094C   0x2020             MOVS     R0,#+32
   \   0000094E   0xA98F             ADD      R1,SP,#+572
   \   00000950   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000952   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000956   0x7608             STRB     R0,[R1, #+24]
   \   00000958   0x2020             MOVS     R0,#+32
   \   0000095A   0xA98F             ADD      R1,SP,#+572
   \   0000095C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000095E   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000962   0x7648             STRB     R0,[R1, #+25]
   \   00000964   0x2020             MOVS     R0,#+32
   \   00000966   0xA98F             ADD      R1,SP,#+572
   \   00000968   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000096A   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000096E   0x7688             STRB     R0,[R1, #+26]
   \   00000970   0x2020             MOVS     R0,#+32
   \   00000972   0xA98F             ADD      R1,SP,#+572
   \   00000974   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000976   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000097A   0xF881 0x0030      STRB     R0,[R1, #+48]
   \   0000097E   0x2020             MOVS     R0,#+32
   \   00000980   0xA98F             ADD      R1,SP,#+572
   \   00000982   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000984   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000988   0xF881 0x0031      STRB     R0,[R1, #+49]
   \   0000098C   0x2020             MOVS     R0,#+32
   \   0000098E   0xA98F             ADD      R1,SP,#+572
   \   00000990   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000992   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000996   0xF881 0x0032      STRB     R0,[R1, #+50]
   \   0000099A   0x2020             MOVS     R0,#+32
   \   0000099C   0xA97D             ADD      R1,SP,#+500
   \   0000099E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009A0   0xF801 0x0024      STRB     R0,[R1, R4, LSL #+2]
   \   000009A4   0x2020             MOVS     R0,#+32
   \   000009A6   0xA97D             ADD      R1,SP,#+500
   \   000009A8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009AA   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009AE   0x7048             STRB     R0,[R1, #+1]
   \   000009B0   0x2020             MOVS     R0,#+32
   \   000009B2   0xA97D             ADD      R1,SP,#+500
   \   000009B4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009B6   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009BA   0x7088             STRB     R0,[R1, #+2]
   \   000009BC   0x2020             MOVS     R0,#+32
   \   000009BE   0xA97D             ADD      R1,SP,#+500
   \   000009C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009C2   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009C6   0x7608             STRB     R0,[R1, #+24]
   \   000009C8   0x2020             MOVS     R0,#+32
   \   000009CA   0xA97D             ADD      R1,SP,#+500
   \   000009CC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009CE   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009D2   0x7648             STRB     R0,[R1, #+25]
   \   000009D4   0x2020             MOVS     R0,#+32
   \   000009D6   0xA97D             ADD      R1,SP,#+500
   \   000009D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009DA   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009DE   0x7688             STRB     R0,[R1, #+26]
   \   000009E0   0x2020             MOVS     R0,#+32
   \   000009E2   0xA97D             ADD      R1,SP,#+500
   \   000009E4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009E6   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009EA   0xF881 0x0030      STRB     R0,[R1, #+48]
   \   000009EE   0x2020             MOVS     R0,#+32
   \   000009F0   0xA97D             ADD      R1,SP,#+500
   \   000009F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009F4   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000009F8   0xF881 0x0031      STRB     R0,[R1, #+49]
   \   000009FC   0x2020             MOVS     R0,#+32
   \   000009FE   0xA97D             ADD      R1,SP,#+500
   \   00000A00   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A02   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000A06   0xF881 0x0032      STRB     R0,[R1, #+50]
   \   00000A0A   0xE77D             B.N      ??DebugOLEDUpdate_16
   2096                }     
   2097                
   2098                //36个值的显示。
   2099                LCD_P6x8Str(55, 0, "D_1");
   \                     ??DebugOLEDUpdate_17: (+1)
   \   00000A0C   0xA234             ADR.N    R2,??DebugOLEDUpdate_18  ;; "D_1"
   \   00000A0E   0x2100             MOVS     R1,#+0
   \   00000A10   0x2037             MOVS     R0,#+55
   \   00000A12   0x.... 0x....      BL       LCD_P6x8Str
   2100                LCD_P6x8Str(14, 1, "LB");
   \   00000A16   0xA233             ADR.N    R2,??DebugOLEDUpdate_18+0x4  ;; 0x4C, 0x42, 0x00, 0x00
   \   00000A18   0x2101             MOVS     R1,#+1
   \   00000A1A   0x200E             MOVS     R0,#+14
   \   00000A1C   0x.... 0x....      BL       LCD_P6x8Str
   2101                LCD_P6x8Str(48, 1, "C");
   \   00000A20   0xA231             ADR.N    R2,??DebugOLEDUpdate_18+0x8  ;; "C"
   \   00000A22   0x2101             MOVS     R1,#+1
   \   00000A24   0x2030             MOVS     R0,#+48
   \   00000A26   0x.... 0x....      BL       LCD_P6x8Str
   2102                LCD_P6x8Str(86, 1, "LW");
   \   00000A2A   0xA230             ADR.N    R2,??DebugOLEDUpdate_18+0xC  ;; 0x4C, 0x57, 0x00, 0x00
   \   00000A2C   0x2101             MOVS     R1,#+1
   \   00000A2E   0x2056             MOVS     R0,#+86
   \   00000A30   0x.... 0x....      BL       LCD_P6x8Str
   2103                
   2104                for(i = 0; i <= 5; i++)
   \   00000A34   0x2400             MOVS     R4,#+0
   \                     ??DebugOLEDUpdate_19: (+1)
   \   00000A36   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A38   0x2C06             CMP      R4,#+6
   \   00000A3A   0xF281 0x81C7      BGE.W    ??DebugOLEDUpdate_10
   2105                {
   2106                  LCD_P6x8Str(42, i+2, D_1_LB[i]);
   \   00000A3E   0xA88F             ADD      R0,SP,#+572
   \   00000A40   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A42   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   00000A46   0x1CA1             ADDS     R1,R4,#+2
   \   00000A48   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000A4A   0x202A             MOVS     R0,#+42
   \   00000A4C   0x.... 0x....      BL       LCD_P6x8Str
   2107                  LCD_P6x8Str(21, i+2, D_1_LB[i+6]);
   \   00000A50   0xA88F             ADD      R0,SP,#+572
   \   00000A52   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A54   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000A58   0xF110 0x0218      ADDS     R2,R0,#+24
   \   00000A5C   0x1CA1             ADDS     R1,R4,#+2
   \   00000A5E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000A60   0x2015             MOVS     R0,#+21
   \   00000A62   0x.... 0x....      BL       LCD_P6x8Str
   2108                  LCD_P6x8Str(0, i+2, D_1_LB[i+12]);
   \   00000A66   0xA88F             ADD      R0,SP,#+572
   \   00000A68   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A6A   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000A6E   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000A72   0x1CA1             ADDS     R1,R4,#+2
   \   00000A74   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000A76   0x2000             MOVS     R0,#+0
   \   00000A78   0x.... 0x....      BL       LCD_P6x8Str
   2109                  LCD_P6x8Str(64, i+2, D_1_LW[i]);
   \   00000A7C   0xA87D             ADD      R0,SP,#+500
   \   00000A7E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A80   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   00000A84   0x1CA1             ADDS     R1,R4,#+2
   \   00000A86   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000A88   0x2040             MOVS     R0,#+64
   \   00000A8A   0x.... 0x....      BL       LCD_P6x8Str
   2110                  LCD_P6x8Str(85, i+2, D_1_LW[i+6]);
   \   00000A8E   0xA87D             ADD      R0,SP,#+500
   \   00000A90   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A92   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000A96   0xF110 0x0218      ADDS     R2,R0,#+24
   \   00000A9A   0x1CA1             ADDS     R1,R4,#+2
   \   00000A9C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000A9E   0x2055             MOVS     R0,#+85
   \   00000AA0   0x.... 0x....      BL       LCD_P6x8Str
   2111                  LCD_P6x8Str(106, i+2, D_1_LW[i+12]);        
   \   00000AA4   0xA87D             ADD      R0,SP,#+500
   \   00000AA6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000AA8   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000AAC   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000AB0   0x1CA1             ADDS     R1,R4,#+2
   \   00000AB2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000AB4   0x206A             MOVS     R0,#+106
   \   00000AB6   0x.... 0x....      BL       LCD_P6x8Str
   2112                }
   \   00000ABA   0x1C64             ADDS     R4,R4,#+1
   \   00000ABC   0xE7BB             B.N      ??DebugOLEDUpdate_19
   2113              }
   2114              //第2页.用来显示固定6行的右黑线两边的黑点白点的像素值。
   2115              else if(DebugDisplayPage == 2)
   \                     ??DebugOLEDUpdate_11: (+1)
   \   00000ABE   0xF8DF 0x0414      LDR.W    R0,??DebugOLEDUpdate_0+0x4
   \   00000AC2   0x7800             LDRB     R0,[R0, #+0]
   \   00000AC4   0x2802             CMP      R0,#+2
   \   00000AC6   0xF040 0x8277      BNE.W    ??DebugOLEDUpdate_20
   2116              {
   2117                //显示界面第2页用的。
   2118                uint8 D_2_RB[18][4] = {0, 0, 0, 0};  
   \   00000ACA   0xA86B             ADD      R0,SP,#+428
   \   00000ACC   0x2148             MOVS     R1,#+72
   \   00000ACE   0x.... 0x....      BL       __aeabi_memclr4
   2119                uint8 D_2_RW[18][4] = {0, 0, 0, 0};  
   \   00000AD2   0xA859             ADD      R0,SP,#+356
   \   00000AD4   0x2148             MOVS     R1,#+72
   \   00000AD6   0x.... 0x....      BL       __aeabi_memclr4
   2120                
   2121                //建立字符串的尾巴。
   2122                for(i = 0; i < 18; i++)
   \   00000ADA   0x2400             MOVS     R4,#+0
   \   00000ADC   0xE015             B.N      ??DebugOLEDUpdate_21
   \   00000ADE   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_18:
   \   00000AE0   0x44 0x5F          DC8      "D_1"
   \              0x31 0x00    
   \   00000AE4   0x4C 0x42          DC8      0x4C, 0x42, 0x00, 0x00
   \              0x00 0x00    
   \   00000AE8   0x43 0x00          DC8      "C",0x0,0x0
   \              0x00 0x00    
   \   00000AEC   0x4C 0x57          DC8      0x4C, 0x57, 0x00, 0x00
   \              0x00 0x00    
   2123                {
   2124                  D_2_RB[i][3] = 0;
   \                     ??DebugOLEDUpdate_22: (+1)
   \   00000AF0   0x2000             MOVS     R0,#+0
   \   00000AF2   0xA96B             ADD      R1,SP,#+428
   \   00000AF4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000AF6   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000AFA   0x70C8             STRB     R0,[R1, #+3]
   2125                  D_2_RW[i][3] = 0;
   \   00000AFC   0x2000             MOVS     R0,#+0
   \   00000AFE   0xA959             ADD      R1,SP,#+356
   \   00000B00   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B02   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000B06   0x70C8             STRB     R0,[R1, #+3]
   2126                }
   \   00000B08   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_21: (+1)
   \   00000B0A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B0C   0x2C12             CMP      R4,#+18
   \   00000B0E   0xDBEF             BLT.N    ??DebugOLEDUpdate_22
   2127                
   2128                //计算左边18个值和右边18个值，左右边关于中间对称。。
   2129                //12 06 00
   2130                //13 07 01
   2131                //14 08 02
   2132                //15 09 03
   2133                //16 10 04
   2134                //17 11 05
   2135                for(i = 0; i <= 5; i++)
   \   00000B10   0x2400             MOVS     R4,#+0
   \   00000B12   0xE15A             B.N      ??DebugOLEDUpdate_23
   2136                {
   2137                  //当前行的右黑线提取失败。
   2138                  if(BlackRightLoc[9 + i * 10][0] ==  MaxValUint8)
   2139                  {
   2140                    D_2_RB[i][0] = 32;
   2141                    D_2_RB[i][1] = 32;
   2142                    D_2_RB[i][2] = 32;
   2143          
   2144                    D_2_RB[i + 6][0] = 32;
   2145                    D_2_RB[i + 6][1] = 32;
   2146                    D_2_RB[i + 6][2] = 32;
   2147          
   2148                    D_2_RB[i + 12][0] = 32;
   2149                    D_2_RB[i + 12][1] = 32;
   2150                    D_2_RB[i + 12][2] = 32;
   2151          
   2152                    D_2_RW[i][0] = 32;
   2153                    D_2_RW[i][1] = 32;
   2154                    D_2_RW[i][2] = 32;
   2155          
   2156                    D_2_RW[i + 6][0] = 32;
   2157                    D_2_RW[i + 6][1] = 32;
   2158                    D_2_RW[i + 6][2] = 32;
   2159          
   2160                    D_2_RW[i + 12][0] = 32;
   2161                    D_2_RW[i + 12][1] = 32;
   2162                    D_2_RW[i + 12][2] = 32;
   2163                  }
   2164                  //当前行的右黑线提取成功。
   2165                  else
   2166                  {
   2167                    //0-5表示第4列。
   2168                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0] - 1 - BlackLeftEdgeNum] - ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0]];
   \                     ??DebugOLEDUpdate_24: (+1)
   \   00000B14   0xF8DF 0x0814      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000B18   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B1A   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000B1E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000B22   0xF8DF 0x1E98      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000B26   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B28   0x221E             MOVS     R2,#+30
   \   00000B2A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000B2E   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000B30   0x1808             ADDS     R0,R1,R0
   \   00000B32   0xF890 0x08C6      LDRB     R0,[R0, #+2246]
   \   00000B36   0xF8DF 0x17F4      LDR.W    R1,??DebugOLEDUpdate_8+0x8
   \   00000B3A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B3C   0xF640 0x12C4      MOVW     R2,#+2500
   \   00000B40   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000B44   0xF8DF 0x2E74      LDR.W    R2,??DebugOLEDUpdate_25+0x4
   \   00000B48   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B4A   0x231E             MOVS     R3,#+30
   \   00000B4C   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000B50   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000B52   0x1851             ADDS     R1,R2,R1
   \   00000B54   0xF891 0x18CA      LDRB     R1,[R1, #+2250]
   \   00000B58   0x1A40             SUBS     R0,R0,R1
   2169                    D_2_RB[i][0] = temp / 100 + 48;
   \   00000B5A   0x2164             MOVS     R1,#+100
   \   00000B5C   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000B60   0x3130             ADDS     R1,R1,#+48
   \   00000B62   0xAA6B             ADD      R2,SP,#+428
   \   00000B64   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B66   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2170                    D_2_RB[i][1] = (temp % 100) / 10 + 48;
   \   00000B6A   0x2164             MOVS     R1,#+100
   \   00000B6C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000B70   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000B74   0x220A             MOVS     R2,#+10
   \   00000B76   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000B7A   0x3130             ADDS     R1,R1,#+48
   \   00000B7C   0xAA6B             ADD      R2,SP,#+428
   \   00000B7E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B80   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000B84   0x7051             STRB     R1,[R2, #+1]
   2171                    D_2_RB[i][2] = (temp % 10) / 1 + 48;
   \   00000B86   0x210A             MOVS     R1,#+10
   \   00000B88   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000B8C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000B90   0x2101             MOVS     R1,#+1
   \   00000B92   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000B96   0x3030             ADDS     R0,R0,#+48
   \   00000B98   0xA96B             ADD      R1,SP,#+428
   \   00000B9A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B9C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000BA0   0x7088             STRB     R0,[R1, #+2]
   2172                    
   2173                    //6-11表示第5列。
   2174                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0]];
   \   00000BA2   0xF8DF 0x0788      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000BA6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000BA8   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000BAC   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000BB0   0xF8DF 0x1E08      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000BB4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000BB6   0x221E             MOVS     R2,#+30
   \   00000BB8   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000BBC   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000BBE   0x1808             ADDS     R0,R1,R0
   \   00000BC0   0xF890 0x08CA      LDRB     R0,[R0, #+2250]
   2175                    D_2_RB[i + 6][0] = temp / 100 + 48;
   \   00000BC4   0x2164             MOVS     R1,#+100
   \   00000BC6   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000BCA   0x3130             ADDS     R1,R1,#+48
   \   00000BCC   0xAA6B             ADD      R2,SP,#+428
   \   00000BCE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000BD0   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000BD4   0x7611             STRB     R1,[R2, #+24]
   2176                    D_2_RB[i + 6][1] = (temp % 100) / 10 + 48;
   \   00000BD6   0x2164             MOVS     R1,#+100
   \   00000BD8   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000BDC   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000BE0   0x220A             MOVS     R2,#+10
   \   00000BE2   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000BE6   0x3130             ADDS     R1,R1,#+48
   \   00000BE8   0xAA6B             ADD      R2,SP,#+428
   \   00000BEA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000BEC   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000BF0   0x7651             STRB     R1,[R2, #+25]
   2177                    D_2_RB[i + 6][2] = (temp % 10) / 1 + 48;
   \   00000BF2   0x210A             MOVS     R1,#+10
   \   00000BF4   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000BF8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000BFC   0x2101             MOVS     R1,#+1
   \   00000BFE   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000C02   0x3030             ADDS     R0,R0,#+48
   \   00000C04   0xA96B             ADD      R1,SP,#+428
   \   00000C06   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C08   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000C0C   0x7688             STRB     R0,[R1, #+26]
   2178                    
   2179                    //12-17表示第6列。
   2180                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0] + 1];
   \   00000C0E   0xF8DF 0x071C      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000C12   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C14   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000C18   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000C1C   0xF8DF 0x1D9C      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000C20   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C22   0x221E             MOVS     R2,#+30
   \   00000C24   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000C28   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000C2A   0x1808             ADDS     R0,R1,R0
   \   00000C2C   0xF890 0x08CB      LDRB     R0,[R0, #+2251]
   2181                    D_2_RB[i + 12][0] = temp / 100 + 48;
   \   00000C30   0x2164             MOVS     R1,#+100
   \   00000C32   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000C36   0x3130             ADDS     R1,R1,#+48
   \   00000C38   0xAA6B             ADD      R2,SP,#+428
   \   00000C3A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C3C   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000C40   0xF882 0x1030      STRB     R1,[R2, #+48]
   2182                    D_2_RB[i + 12][1] = (temp % 100) / 10 + 48;
   \   00000C44   0x2164             MOVS     R1,#+100
   \   00000C46   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000C4A   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000C4E   0x220A             MOVS     R2,#+10
   \   00000C50   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000C54   0x3130             ADDS     R1,R1,#+48
   \   00000C56   0xAA6B             ADD      R2,SP,#+428
   \   00000C58   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C5A   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000C5E   0xF882 0x1031      STRB     R1,[R2, #+49]
   2183                    D_2_RB[i + 12][2] = (temp % 10) / 1 + 48;
   \   00000C62   0x210A             MOVS     R1,#+10
   \   00000C64   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000C68   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000C6C   0x2101             MOVS     R1,#+1
   \   00000C6E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000C72   0x3030             ADDS     R0,R0,#+48
   \   00000C74   0xA96B             ADD      R1,SP,#+428
   \   00000C76   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C78   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000C7C   0xF881 0x0032      STRB     R0,[R1, #+50]
   2184            
   2185                    //0-5表示第3列。
   2186                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0] - 1 - BlackLeftEdgeNum];
   \   00000C80   0xF8DF 0x06A8      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000C84   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C86   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000C8A   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000C8E   0xF8DF 0x1D2C      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000C92   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C94   0x221E             MOVS     R2,#+30
   \   00000C96   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000C9A   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000C9C   0x1808             ADDS     R0,R1,R0
   \   00000C9E   0xF890 0x08C6      LDRB     R0,[R0, #+2246]
   2187                    D_2_RW[i][0] = temp / 100 + 48;
   \   00000CA2   0x2164             MOVS     R1,#+100
   \   00000CA4   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000CA8   0x3130             ADDS     R1,R1,#+48
   \   00000CAA   0xAA59             ADD      R2,SP,#+356
   \   00000CAC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CAE   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2188                    D_2_RW[i][1] = (temp % 100) / 10 + 48;
   \   00000CB2   0x2164             MOVS     R1,#+100
   \   00000CB4   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000CB8   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000CBC   0x220A             MOVS     R2,#+10
   \   00000CBE   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000CC2   0x3130             ADDS     R1,R1,#+48
   \   00000CC4   0xAA59             ADD      R2,SP,#+356
   \   00000CC6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CC8   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000CCC   0x7051             STRB     R1,[R2, #+1]
   2189                    D_2_RW[i][2] = (temp % 10) / 1 + 48;
   \   00000CCE   0x210A             MOVS     R1,#+10
   \   00000CD0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000CD4   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000CD8   0x2101             MOVS     R1,#+1
   \   00000CDA   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000CDE   0x3030             ADDS     R0,R0,#+48
   \   00000CE0   0xA959             ADD      R1,SP,#+356
   \   00000CE2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CE4   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000CE8   0x7088             STRB     R0,[R1, #+2]
   2190                    
   2191                    //6-11表示第2列。
   2192                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0] - 2 - BlackLeftEdgeNum];
   \   00000CEA   0xF8DF 0x0640      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000CEE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CF0   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000CF4   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000CF8   0xF8DF 0x1CC0      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000CFC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CFE   0x221E             MOVS     R2,#+30
   \   00000D00   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000D04   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000D06   0x1808             ADDS     R0,R1,R0
   \   00000D08   0xF890 0x08C5      LDRB     R0,[R0, #+2245]
   2193                    D_2_RW[i + 6][0] = temp / 100 + 48;
   \   00000D0C   0x2164             MOVS     R1,#+100
   \   00000D0E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000D12   0x3130             ADDS     R1,R1,#+48
   \   00000D14   0xAA59             ADD      R2,SP,#+356
   \   00000D16   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D18   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000D1C   0x7611             STRB     R1,[R2, #+24]
   2194                    D_2_RW[i + 6][1] = (temp % 100) / 10 + 48;
   \   00000D1E   0x2164             MOVS     R1,#+100
   \   00000D20   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000D24   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000D28   0x220A             MOVS     R2,#+10
   \   00000D2A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000D2E   0x3130             ADDS     R1,R1,#+48
   \   00000D30   0xAA59             ADD      R2,SP,#+356
   \   00000D32   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D34   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000D38   0x7651             STRB     R1,[R2, #+25]
   2195                    D_2_RW[i + 6][2] = (temp % 10) / 1 + 48;
   \   00000D3A   0x210A             MOVS     R1,#+10
   \   00000D3C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000D40   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000D44   0x2101             MOVS     R1,#+1
   \   00000D46   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000D4A   0x3030             ADDS     R0,R0,#+48
   \   00000D4C   0xA959             ADD      R1,SP,#+356
   \   00000D4E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D50   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000D54   0x7688             STRB     R0,[R1, #+26]
   2196                    
   2197                    //12-17表示第1列。
   2198                    temp = ImgNew[9 + i * 10][BlackRightLoc[9 + i * 10][0] - 3 - BlackLeftEdgeNum];
   \   00000D56   0xF8DF 0x05D4      LDR.W    R0,??DebugOLEDUpdate_8+0x8
   \   00000D5A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D5C   0xF640 0x11C4      MOVW     R1,#+2500
   \   00000D60   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000D64   0xF8DF 0x1C54      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   00000D68   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D6A   0x221E             MOVS     R2,#+30
   \   00000D6C   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000D70   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000D72   0x1808             ADDS     R0,R1,R0
   \   00000D74   0xF890 0x08C4      LDRB     R0,[R0, #+2244]
   2199                    D_2_RW[i + 12][0] = temp / 100 + 48;
   \   00000D78   0x2164             MOVS     R1,#+100
   \   00000D7A   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000D7E   0x3130             ADDS     R1,R1,#+48
   \   00000D80   0xAA59             ADD      R2,SP,#+356
   \   00000D82   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D84   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000D88   0xF882 0x1030      STRB     R1,[R2, #+48]
   2200                    D_2_RW[i + 12][1] = (temp % 100) / 10 + 48;
   \   00000D8C   0x2164             MOVS     R1,#+100
   \   00000D8E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000D92   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000D96   0x220A             MOVS     R2,#+10
   \   00000D98   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00000D9C   0x3130             ADDS     R1,R1,#+48
   \   00000D9E   0xAA59             ADD      R2,SP,#+356
   \   00000DA0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DA2   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00000DA6   0xF882 0x1031      STRB     R1,[R2, #+49]
   2201                    D_2_RW[i + 12][2] = (temp % 10) / 1 + 48;          
   \   00000DAA   0x210A             MOVS     R1,#+10
   \   00000DAC   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000DB0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000DB4   0x2101             MOVS     R1,#+1
   \   00000DB6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000DBA   0x3030             ADDS     R0,R0,#+48
   \   00000DBC   0xA959             ADD      R1,SP,#+356
   \   00000DBE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DC0   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000DC4   0xF881 0x0032      STRB     R0,[R1, #+50]
   2202                  }
   \                     ??DebugOLEDUpdate_26: (+1)
   \   00000DC8   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_23: (+1)
   \   00000DCA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DCC   0x2C06             CMP      R4,#+6
   \   00000DCE   0xF280 0x8083      BGE.W    ??DebugOLEDUpdate_27
   \   00000DD2   0xF8DF 0x0BE8      LDR.W    R0,??DebugOLEDUpdate_25+0x4
   \   00000DD6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DD8   0x210A             MOVS     R1,#+10
   \   00000DDA   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000DDE   0x2203             MOVS     R2,#+3
   \   00000DE0   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000DE4   0x7EC0             LDRB     R0,[R0, #+27]
   \   00000DE6   0x28FF             CMP      R0,#+255
   \   00000DE8   0xF47F 0xAE94      BNE.W    ??DebugOLEDUpdate_24
   \   00000DEC   0x2020             MOVS     R0,#+32
   \   00000DEE   0xA96B             ADD      R1,SP,#+428
   \   00000DF0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DF2   0xF801 0x0024      STRB     R0,[R1, R4, LSL #+2]
   \   00000DF6   0x2020             MOVS     R0,#+32
   \   00000DF8   0xA96B             ADD      R1,SP,#+428
   \   00000DFA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DFC   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E00   0x7048             STRB     R0,[R1, #+1]
   \   00000E02   0x2020             MOVS     R0,#+32
   \   00000E04   0xA96B             ADD      R1,SP,#+428
   \   00000E06   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E08   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E0C   0x7088             STRB     R0,[R1, #+2]
   \   00000E0E   0x2020             MOVS     R0,#+32
   \   00000E10   0xA96B             ADD      R1,SP,#+428
   \   00000E12   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E14   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E18   0x7608             STRB     R0,[R1, #+24]
   \   00000E1A   0x2020             MOVS     R0,#+32
   \   00000E1C   0xA96B             ADD      R1,SP,#+428
   \   00000E1E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E20   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E24   0x7648             STRB     R0,[R1, #+25]
   \   00000E26   0x2020             MOVS     R0,#+32
   \   00000E28   0xA96B             ADD      R1,SP,#+428
   \   00000E2A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E2C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E30   0x7688             STRB     R0,[R1, #+26]
   \   00000E32   0x2020             MOVS     R0,#+32
   \   00000E34   0xA96B             ADD      R1,SP,#+428
   \   00000E36   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E38   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E3C   0xF881 0x0030      STRB     R0,[R1, #+48]
   \   00000E40   0x2020             MOVS     R0,#+32
   \   00000E42   0xA96B             ADD      R1,SP,#+428
   \   00000E44   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E46   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E4A   0xF881 0x0031      STRB     R0,[R1, #+49]
   \   00000E4E   0x2020             MOVS     R0,#+32
   \   00000E50   0xA96B             ADD      R1,SP,#+428
   \   00000E52   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E54   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E58   0xF881 0x0032      STRB     R0,[R1, #+50]
   \   00000E5C   0x2020             MOVS     R0,#+32
   \   00000E5E   0xA959             ADD      R1,SP,#+356
   \   00000E60   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E62   0xF801 0x0024      STRB     R0,[R1, R4, LSL #+2]
   \   00000E66   0x2020             MOVS     R0,#+32
   \   00000E68   0xA959             ADD      R1,SP,#+356
   \   00000E6A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E6C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E70   0x7048             STRB     R0,[R1, #+1]
   \   00000E72   0x2020             MOVS     R0,#+32
   \   00000E74   0xA959             ADD      R1,SP,#+356
   \   00000E76   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E78   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E7C   0x7088             STRB     R0,[R1, #+2]
   \   00000E7E   0x2020             MOVS     R0,#+32
   \   00000E80   0xA959             ADD      R1,SP,#+356
   \   00000E82   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E84   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E88   0x7608             STRB     R0,[R1, #+24]
   \   00000E8A   0x2020             MOVS     R0,#+32
   \   00000E8C   0xA959             ADD      R1,SP,#+356
   \   00000E8E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E90   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000E94   0x7648             STRB     R0,[R1, #+25]
   \   00000E96   0x2020             MOVS     R0,#+32
   \   00000E98   0xA959             ADD      R1,SP,#+356
   \   00000E9A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E9C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000EA0   0x7688             STRB     R0,[R1, #+26]
   \   00000EA2   0x2020             MOVS     R0,#+32
   \   00000EA4   0xA959             ADD      R1,SP,#+356
   \   00000EA6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000EA8   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000EAC   0xF881 0x0030      STRB     R0,[R1, #+48]
   \   00000EB0   0x2020             MOVS     R0,#+32
   \   00000EB2   0xA959             ADD      R1,SP,#+356
   \   00000EB4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000EB6   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000EBA   0xF881 0x0031      STRB     R0,[R1, #+49]
   \   00000EBE   0x2020             MOVS     R0,#+32
   \   00000EC0   0xA959             ADD      R1,SP,#+356
   \   00000EC2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000EC4   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000EC8   0xF881 0x0032      STRB     R0,[R1, #+50]
   \   00000ECC   0xE77C             B.N      ??DebugOLEDUpdate_26
   \   00000ECE   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_0:
   \   00000ED0   0x........         DC32     DebugScreenChosen
   \   00000ED4   0x........         DC32     DebugDisplayPage
   2203                }     
   2204                
   2205                //36个值的显示。
   2206                LCD_P6x8Str(55, 0, "D_2");
   \                     ??DebugOLEDUpdate_27: (+1)
   \   00000ED8   0xA230             ADR.N    R2,??DebugOLEDUpdate_3+0x10  ;; "D_2"
   \   00000EDA   0x2100             MOVS     R1,#+0
   \   00000EDC   0x2037             MOVS     R0,#+55
   \   00000EDE   0x.... 0x....      BL       LCD_P6x8Str
   2207                LCD_P6x8Str(16, 1, "RW");
   \   00000EE2   0xA22F             ADR.N    R2,??DebugOLEDUpdate_3+0x14  ;; 0x52, 0x57, 0x00, 0x00
   \   00000EE4   0x2101             MOVS     R1,#+1
   \   00000EE6   0x2010             MOVS     R0,#+16
   \   00000EE8   0x.... 0x....      BL       LCD_P6x8Str
   2208                LCD_P6x8Str(70, 1, "C");
   \   00000EEC   0xA22D             ADR.N    R2,??DebugOLEDUpdate_3+0x18  ;; "C"
   \   00000EEE   0x2101             MOVS     R1,#+1
   \   00000EF0   0x2046             MOVS     R0,#+70
   \   00000EF2   0x.... 0x....      BL       LCD_P6x8Str
   2209                LCD_P6x8Str(98, 1, "RB");
   \   00000EF6   0xA22C             ADR.N    R2,??DebugOLEDUpdate_3+0x1C  ;; 0x52, 0x42, 0x00, 0x00
   \   00000EF8   0x2101             MOVS     R1,#+1
   \   00000EFA   0x2062             MOVS     R0,#+98
   \   00000EFC   0x.... 0x....      BL       LCD_P6x8Str
   2210                
   2211                for(i = 0; i <= 5; i++)
   \   00000F00   0x2400             MOVS     R4,#+0
   \                     ??DebugOLEDUpdate_28: (+1)
   \   00000F02   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F04   0x2C06             CMP      R4,#+6
   \   00000F06   0xF280 0x8761      BGE.W    ??DebugOLEDUpdate_10
   2212                {
   2213                  LCD_P6x8Str(42, i+2, D_2_RW[i]);
   \   00000F0A   0xA859             ADD      R0,SP,#+356
   \   00000F0C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F0E   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   00000F12   0x1CA1             ADDS     R1,R4,#+2
   \   00000F14   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F16   0x202A             MOVS     R0,#+42
   \   00000F18   0x.... 0x....      BL       LCD_P6x8Str
   2214                  LCD_P6x8Str(21, i+2, D_2_RW[i+6]);
   \   00000F1C   0xA859             ADD      R0,SP,#+356
   \   00000F1E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F20   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000F24   0xF110 0x0218      ADDS     R2,R0,#+24
   \   00000F28   0x1CA1             ADDS     R1,R4,#+2
   \   00000F2A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F2C   0x2015             MOVS     R0,#+21
   \   00000F2E   0x.... 0x....      BL       LCD_P6x8Str
   2215                  LCD_P6x8Str(0, i+2, D_2_RW[i+12]);
   \   00000F32   0xA859             ADD      R0,SP,#+356
   \   00000F34   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F36   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000F3A   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000F3E   0x1CA1             ADDS     R1,R4,#+2
   \   00000F40   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F42   0x2000             MOVS     R0,#+0
   \   00000F44   0x.... 0x....      BL       LCD_P6x8Str
   2216                  LCD_P6x8Str(64, i+2, D_2_RB[i]);
   \   00000F48   0xA86B             ADD      R0,SP,#+428
   \   00000F4A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F4C   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   00000F50   0x1CA1             ADDS     R1,R4,#+2
   \   00000F52   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F54   0x2040             MOVS     R0,#+64
   \   00000F56   0x.... 0x....      BL       LCD_P6x8Str
   2217                  LCD_P6x8Str(85, i+2, D_2_RB[i+6]);
   \   00000F5A   0xA86B             ADD      R0,SP,#+428
   \   00000F5C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F5E   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000F62   0xF110 0x0218      ADDS     R2,R0,#+24
   \   00000F66   0x1CA1             ADDS     R1,R4,#+2
   \   00000F68   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F6A   0x2055             MOVS     R0,#+85
   \   00000F6C   0x.... 0x....      BL       LCD_P6x8Str
   2218                  LCD_P6x8Str(106, i+2, D_2_RB[i+12]);        
   \   00000F70   0xA86B             ADD      R0,SP,#+428
   \   00000F72   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F74   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000F78   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000F7C   0x1CA1             ADDS     R1,R4,#+2
   \   00000F7E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000F80   0x206A             MOVS     R0,#+106
   \   00000F82   0x.... 0x....      BL       LCD_P6x8Str
   2219                }
   \   00000F86   0x1C64             ADDS     R4,R4,#+1
   \   00000F88   0xE7BB             B.N      ??DebugOLEDUpdate_28
   \   00000F8A   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_3:
   \   00000F8C   0x........         DC32     DeviFuse
   \   00000F90   0x........         DC32     DeviPre
   \   00000F94   0x........         DC32     BatteryCheckVal
   \   00000F98   0x........         DC32     Steer_kp
   \   00000F9C   0x44 0x5F          DC8      "D_2"
   \              0x32 0x00    
   \   00000FA0   0x52 0x57          DC8      0x52, 0x57, 0x00, 0x00
   \              0x00 0x00    
   \   00000FA4   0x43 0x00          DC8      "C",0x0,0x0
   \              0x00 0x00    
   \   00000FA8   0x52 0x42          DC8      0x52, 0x42, 0x00, 0x00
   \              0x00 0x00    
   \   00000FAC   0x........         DC32     BlackLeftEdgeStartCol
   \   00000FB0   0x........         DC32     BlackRightEdgeStartCol
   \   00000FB4   0x........         DC32     BlackCenEdgeStartCol
   2220              }
   2221              //第3页.用来显示地板的像素值，以确定相关的阈值。
   2222              else if(DebugDisplayPage == 3)
   \                     ??DebugOLEDUpdate_20: (+1)
   \   00000FB8   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000FBC   0x7800             LDRB     R0,[R0, #+0]
   \   00000FBE   0x2803             CMP      R0,#+3
   \   00000FC0   0xF040 0x81A7      BNE.W    ??DebugOLEDUpdate_29
   2223              {
   2224                //显示界面第3页用的。
   2225                uint8 D_3_L[18][4] = {0, 0, 0, 0};
   \   00000FC4   0xA8B3             ADD      R0,SP,#+716
   \   00000FC6   0x2148             MOVS     R1,#+72
   \   00000FC8   0x.... 0x....      BL       __aeabi_memclr4
   2226                uint8 D_3_R[18][4] = {0, 0, 0, 0};
   \   00000FCC   0xA8A1             ADD      R0,SP,#+644
   \   00000FCE   0x2148             MOVS     R1,#+72
   \   00000FD0   0x.... 0x....      BL       __aeabi_memclr4
   2227                
   2228                //建立字符串的尾巴。
   2229                for(i = 0; i < 18; i++)
   \   00000FD4   0x2400             MOVS     R4,#+0
   \   00000FD6   0xE00C             B.N      ??DebugOLEDUpdate_30
   2230                {
   2231                  D_3_L[i][3] = 0;
   \                     ??DebugOLEDUpdate_31: (+1)
   \   00000FD8   0x2000             MOVS     R0,#+0
   \   00000FDA   0xA9B3             ADD      R1,SP,#+716
   \   00000FDC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000FDE   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000FE2   0x70C8             STRB     R0,[R1, #+3]
   2232                  D_3_R[i][3] = 0;
   \   00000FE4   0x2000             MOVS     R0,#+0
   \   00000FE6   0xA9A1             ADD      R1,SP,#+644
   \   00000FE8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000FEA   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000FEE   0x70C8             STRB     R0,[R1, #+3]
   2233                }
   \   00000FF0   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_30: (+1)
   \   00000FF2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000FF4   0x2C12             CMP      R4,#+18
   \   00000FF6   0xDBEF             BLT.N    ??DebugOLEDUpdate_31
   2234                
   2235                
   2236                //更新36个值。
   2237                for(i = 0; i <= 5; i++)
   \   00000FF8   0x2400             MOVS     R4,#+0
   \   00000FFA   0xE11E             B.N      ??DebugOLEDUpdate_32
   2238                {
   2239                  //0-5表示第3列。
   2240                  temp = ImgNew[9 + i * 10][CameraRealWidth/2];
   \                     ??DebugOLEDUpdate_33: (+1)
   \   00000FFC   0x48CB             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   00000FFE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001000   0x210A             MOVS     R1,#+10
   \   00001002   0xFB01 0xF104      MUL      R1,R1,R4
   \   00001006   0x22FA             MOVS     R2,#+250
   \   00001008   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000100C   0xF890 0x0947      LDRB     R0,[R0, #+2375]
   2241                  D_3_L[i][0] = temp / 100 + 48;
   \   00001010   0x2164             MOVS     R1,#+100
   \   00001012   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001016   0x3130             ADDS     R1,R1,#+48
   \   00001018   0xAAB3             ADD      R2,SP,#+716
   \   0000101A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000101C   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2242                  D_3_L[i][1] = (temp % 100) / 10 + 48;
   \   00001020   0x2164             MOVS     R1,#+100
   \   00001022   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001026   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   0000102A   0x220A             MOVS     R2,#+10
   \   0000102C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00001030   0x3130             ADDS     R1,R1,#+48
   \   00001032   0xAAB3             ADD      R2,SP,#+716
   \   00001034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001036   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000103A   0x7051             STRB     R1,[R2, #+1]
   2243                  D_3_L[i][2] = (temp % 10) / 1 + 48;
   \   0000103C   0x210A             MOVS     R1,#+10
   \   0000103E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001042   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001046   0x2101             MOVS     R1,#+1
   \   00001048   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000104C   0x3030             ADDS     R0,R0,#+48
   \   0000104E   0xA9B3             ADD      R1,SP,#+716
   \   00001050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001052   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001056   0x7088             STRB     R0,[R1, #+2]
   2244                  
   2245                  //6-11表示第2列。
   2246                  temp = ImgNew[9 + i * 10][CameraRealWidth/2 - 1];
   \   00001058   0x48B4             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   0000105A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000105C   0x210A             MOVS     R1,#+10
   \   0000105E   0xFB01 0xF104      MUL      R1,R1,R4
   \   00001062   0x22FA             MOVS     R2,#+250
   \   00001064   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00001068   0xF890 0x0946      LDRB     R0,[R0, #+2374]
   2247                  D_3_L[i + 6][0] = temp / 100 + 48;
   \   0000106C   0x2164             MOVS     R1,#+100
   \   0000106E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001072   0x3130             ADDS     R1,R1,#+48
   \   00001074   0xAAB3             ADD      R2,SP,#+716
   \   00001076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001078   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000107C   0x7611             STRB     R1,[R2, #+24]
   2248                  D_3_L[i + 6][1] = (temp % 100) / 10 + 48;
   \   0000107E   0x2164             MOVS     R1,#+100
   \   00001080   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001084   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001088   0x220A             MOVS     R2,#+10
   \   0000108A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000108E   0x3130             ADDS     R1,R1,#+48
   \   00001090   0xAAB3             ADD      R2,SP,#+716
   \   00001092   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001094   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001098   0x7651             STRB     R1,[R2, #+25]
   2249                  D_3_L[i + 6][2] = (temp % 10) / 1 + 48;
   \   0000109A   0x210A             MOVS     R1,#+10
   \   0000109C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000010A0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000010A4   0x2101             MOVS     R1,#+1
   \   000010A6   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000010AA   0x3030             ADDS     R0,R0,#+48
   \   000010AC   0xA9B3             ADD      R1,SP,#+716
   \   000010AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000010B0   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000010B4   0x7688             STRB     R0,[R1, #+26]
   2250                  
   2251                  //12-17表示第1列。
   2252                  temp = ImgNew[9 + i * 10][CameraRealWidth/2 - 2];
   \   000010B6   0x489D             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   000010B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000010BA   0x210A             MOVS     R1,#+10
   \   000010BC   0xFB01 0xF104      MUL      R1,R1,R4
   \   000010C0   0x22FA             MOVS     R2,#+250
   \   000010C2   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000010C6   0xF890 0x0945      LDRB     R0,[R0, #+2373]
   2253                  D_3_L[i + 12][0] = temp / 100 + 48;
   \   000010CA   0x2164             MOVS     R1,#+100
   \   000010CC   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000010D0   0x3130             ADDS     R1,R1,#+48
   \   000010D2   0xAAB3             ADD      R2,SP,#+716
   \   000010D4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000010D6   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000010DA   0xF882 0x1030      STRB     R1,[R2, #+48]
   2254                  D_3_L[i + 12][1] = (temp % 100) / 10 + 48;
   \   000010DE   0x2164             MOVS     R1,#+100
   \   000010E0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000010E4   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000010E8   0x220A             MOVS     R2,#+10
   \   000010EA   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000010EE   0x3130             ADDS     R1,R1,#+48
   \   000010F0   0xAAB3             ADD      R2,SP,#+716
   \   000010F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000010F4   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000010F8   0xF882 0x1031      STRB     R1,[R2, #+49]
   2255                  D_3_L[i + 12][2] = (temp % 10) / 1 + 48;
   \   000010FC   0x210A             MOVS     R1,#+10
   \   000010FE   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001102   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001106   0x2101             MOVS     R1,#+1
   \   00001108   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000110C   0x3030             ADDS     R0,R0,#+48
   \   0000110E   0xA9B3             ADD      R1,SP,#+716
   \   00001110   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001112   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001116   0xF881 0x0032      STRB     R0,[R1, #+50]
   2256          
   2257                  //0-5表示第4列。
   2258                  temp = ImgNew[9 + i * 10][CameraRealWidth/2 + 1];
   \   0000111A   0x4884             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   0000111C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000111E   0x210A             MOVS     R1,#+10
   \   00001120   0xFB01 0xF104      MUL      R1,R1,R4
   \   00001124   0x22FA             MOVS     R2,#+250
   \   00001126   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000112A   0xF890 0x0948      LDRB     R0,[R0, #+2376]
   2259                  D_3_R[i][0] = temp / 100 + 48;
   \   0000112E   0x2164             MOVS     R1,#+100
   \   00001130   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001134   0x3130             ADDS     R1,R1,#+48
   \   00001136   0xAAA1             ADD      R2,SP,#+644
   \   00001138   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000113A   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2260                  D_3_R[i][1] = (temp % 100) / 10 + 48;
   \   0000113E   0x2164             MOVS     R1,#+100
   \   00001140   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001144   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001148   0x220A             MOVS     R2,#+10
   \   0000114A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000114E   0x3130             ADDS     R1,R1,#+48
   \   00001150   0xAAA1             ADD      R2,SP,#+644
   \   00001152   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001154   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001158   0x7051             STRB     R1,[R2, #+1]
   2261                  D_3_R[i][2] = (temp % 10) / 1 + 48;
   \   0000115A   0x210A             MOVS     R1,#+10
   \   0000115C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001160   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001164   0x2101             MOVS     R1,#+1
   \   00001166   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000116A   0x3030             ADDS     R0,R0,#+48
   \   0000116C   0xA9A1             ADD      R1,SP,#+644
   \   0000116E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001170   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001174   0x7088             STRB     R0,[R1, #+2]
   2262                  
   2263                  //6-11表示第5列。
   2264                  temp = ImgNew[9 + i * 10][CameraRealWidth/2 + 2];
   \   00001176   0x486D             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   00001178   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000117A   0x210A             MOVS     R1,#+10
   \   0000117C   0xFB01 0xF104      MUL      R1,R1,R4
   \   00001180   0x22FA             MOVS     R2,#+250
   \   00001182   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00001186   0xF890 0x0949      LDRB     R0,[R0, #+2377]
   2265                  D_3_R[i + 6][0] = temp / 100 + 48;
   \   0000118A   0x2164             MOVS     R1,#+100
   \   0000118C   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001190   0x3130             ADDS     R1,R1,#+48
   \   00001192   0xAAA1             ADD      R2,SP,#+644
   \   00001194   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001196   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   0000119A   0x7611             STRB     R1,[R2, #+24]
   2266                  D_3_R[i + 6][1] = (temp % 100) / 10 + 48;
   \   0000119C   0x2164             MOVS     R1,#+100
   \   0000119E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000011A2   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000011A6   0x220A             MOVS     R2,#+10
   \   000011A8   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   000011AC   0x3130             ADDS     R1,R1,#+48
   \   000011AE   0xAAA1             ADD      R2,SP,#+644
   \   000011B0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000011B2   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000011B6   0x7651             STRB     R1,[R2, #+25]
   2267                  D_3_R[i + 6][2] = (temp % 10) / 1 + 48;
   \   000011B8   0x210A             MOVS     R1,#+10
   \   000011BA   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000011BE   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000011C2   0x2101             MOVS     R1,#+1
   \   000011C4   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000011C8   0x3030             ADDS     R0,R0,#+48
   \   000011CA   0xA9A1             ADD      R1,SP,#+644
   \   000011CC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000011CE   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000011D2   0x7688             STRB     R0,[R1, #+26]
   2268                  
   2269                  //12-17表示第6列。
   2270                  temp = ImgNew[9 + i * 10][CameraRealWidth/2 + 3];
   \   000011D4   0x4855             LDR.N    R0,??DebugOLEDUpdate_8+0x8
   \   000011D6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000011D8   0x210A             MOVS     R1,#+10
   \   000011DA   0xFB01 0xF104      MUL      R1,R1,R4
   \   000011DE   0x22FA             MOVS     R2,#+250
   \   000011E0   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000011E4   0xF890 0x094A      LDRB     R0,[R0, #+2378]
   2271                  D_3_R[i + 12][0] = temp / 100 + 48;
   \   000011E8   0x2164             MOVS     R1,#+100
   \   000011EA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000011EE   0x3130             ADDS     R1,R1,#+48
   \   000011F0   0xAAA1             ADD      R2,SP,#+644
   \   000011F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000011F4   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   000011F8   0xF882 0x1030      STRB     R1,[R2, #+48]
   2272                  D_3_R[i + 12][1] = (temp % 100) / 10 + 48;
   \   000011FC   0x2164             MOVS     R1,#+100
   \   000011FE   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001202   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001206   0x220A             MOVS     R2,#+10
   \   00001208   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000120C   0x3130             ADDS     R1,R1,#+48
   \   0000120E   0xAAA1             ADD      R2,SP,#+644
   \   00001210   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001212   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001216   0xF882 0x1031      STRB     R1,[R2, #+49]
   2273                  D_3_R[i + 12][2] = (temp % 10) / 1 + 48;      
   \   0000121A   0x210A             MOVS     R1,#+10
   \   0000121C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001220   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001224   0x2101             MOVS     R1,#+1
   \   00001226   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000122A   0x3030             ADDS     R0,R0,#+48
   \   0000122C   0xA9A1             ADD      R1,SP,#+644
   \   0000122E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001230   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001234   0xF881 0x0032      STRB     R0,[R1, #+50]
   2274                }
   \   00001238   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_32: (+1)
   \   0000123A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000123C   0x2C06             CMP      R4,#+6
   \   0000123E   0xF6FF 0xAEDD      BLT.W    ??DebugOLEDUpdate_33
   2275                
   2276                
   2277                //36个值的显示。
   2278                LCD_P6x8Str(55, 0, "D_3");
   \   00001242   0xA2EB             ADR.N    R2,??DebugOLEDUpdate_34  ;; "D_3"
   \   00001244   0x2100             MOVS     R1,#+0
   \   00001246   0x2037             MOVS     R0,#+55
   \   00001248   0x.... 0x....      BL       LCD_P6x8Str
   2279                LCD_P6x8Str(0,   1, "123");
   \   0000124C   0xA2E9             ADR.N    R2,??DebugOLEDUpdate_34+0x4  ;; "123"
   \   0000124E   0x2101             MOVS     R1,#+1
   \   00001250   0x2000             MOVS     R0,#+0
   \   00001252   0x.... 0x....      BL       LCD_P6x8Str
   2280                LCD_P6x8Str(21,  1, "124");
   \   00001256   0xA2E8             ADR.N    R2,??DebugOLEDUpdate_34+0x8  ;; "124"
   \   00001258   0x2101             MOVS     R1,#+1
   \   0000125A   0x2015             MOVS     R0,#+21
   \   0000125C   0x.... 0x....      BL       LCD_P6x8Str
   2281                LCD_P6x8Str(42,  1, "125");
   \   00001260   0xA2E6             ADR.N    R2,??DebugOLEDUpdate_34+0xC  ;; "125"
   \   00001262   0x2101             MOVS     R1,#+1
   \   00001264   0x202A             MOVS     R0,#+42
   \   00001266   0x.... 0x....      BL       LCD_P6x8Str
   2282                LCD_P6x8Str(64,  1, "126");
   \   0000126A   0xA2E5             ADR.N    R2,??DebugOLEDUpdate_34+0x10  ;; "126"
   \   0000126C   0x2101             MOVS     R1,#+1
   \   0000126E   0x2040             MOVS     R0,#+64
   \   00001270   0x.... 0x....      BL       LCD_P6x8Str
   2283                LCD_P6x8Str(85,  1, "127");
   \   00001274   0xA2E3             ADR.N    R2,??DebugOLEDUpdate_34+0x14  ;; "127"
   \   00001276   0x2101             MOVS     R1,#+1
   \   00001278   0x2055             MOVS     R0,#+85
   \   0000127A   0x.... 0x....      BL       LCD_P6x8Str
   2284                LCD_P6x8Str(106, 1, "128");   
   \   0000127E   0xA2E2             ADR.N    R2,??DebugOLEDUpdate_34+0x18  ;; "128"
   \   00001280   0x2101             MOVS     R1,#+1
   \   00001282   0x206A             MOVS     R0,#+106
   \   00001284   0x.... 0x....      BL       LCD_P6x8Str
   2285                
   2286                for(i = 0; i <= 5; i++)
   \   00001288   0x2400             MOVS     R4,#+0
   \                     ??DebugOLEDUpdate_35: (+1)
   \   0000128A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000128C   0x2C06             CMP      R4,#+6
   \   0000128E   0xF280 0x859D      BGE.W    ??DebugOLEDUpdate_10
   2287                {
   2288                  LCD_P6x8Str(42, i+2, D_3_L[i]);
   \   00001292   0xA8B3             ADD      R0,SP,#+716
   \   00001294   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001296   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   0000129A   0x1CA1             ADDS     R1,R4,#+2
   \   0000129C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000129E   0x202A             MOVS     R0,#+42
   \   000012A0   0x.... 0x....      BL       LCD_P6x8Str
   2289                  LCD_P6x8Str(21, i+2, D_3_L[i+6]);
   \   000012A4   0xA8B3             ADD      R0,SP,#+716
   \   000012A6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012A8   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000012AC   0xF110 0x0218      ADDS     R2,R0,#+24
   \   000012B0   0x1CA1             ADDS     R1,R4,#+2
   \   000012B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000012B4   0x2015             MOVS     R0,#+21
   \   000012B6   0x.... 0x....      BL       LCD_P6x8Str
   2290                  LCD_P6x8Str(0, i+2, D_3_L[i+12]);
   \   000012BA   0xA8B3             ADD      R0,SP,#+716
   \   000012BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012BE   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000012C2   0xF110 0x0230      ADDS     R2,R0,#+48
   \   000012C6   0x1CA1             ADDS     R1,R4,#+2
   \   000012C8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000012CA   0x2000             MOVS     R0,#+0
   \   000012CC   0x.... 0x....      BL       LCD_P6x8Str
   2291                  LCD_P6x8Str(64, i+2, D_3_R[i]);
   \   000012D0   0xA8A1             ADD      R0,SP,#+644
   \   000012D2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012D4   0xEB10 0x0284      ADDS     R2,R0,R4, LSL #+2
   \   000012D8   0x1CA1             ADDS     R1,R4,#+2
   \   000012DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000012DC   0x2040             MOVS     R0,#+64
   \   000012DE   0x.... 0x....      BL       LCD_P6x8Str
   2292                  LCD_P6x8Str(85, i+2, D_3_R[i+6]);
   \   000012E2   0xA8A1             ADD      R0,SP,#+644
   \   000012E4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012E6   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000012EA   0xF110 0x0218      ADDS     R2,R0,#+24
   \   000012EE   0x1CA1             ADDS     R1,R4,#+2
   \   000012F0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000012F2   0x2055             MOVS     R0,#+85
   \   000012F4   0x.... 0x....      BL       LCD_P6x8Str
   2293                  LCD_P6x8Str(106, i+2, D_3_R[i+12]);        
   \   000012F8   0xA8A1             ADD      R0,SP,#+644
   \   000012FA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012FC   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00001300   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00001304   0x1CA1             ADDS     R1,R4,#+2
   \   00001306   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00001308   0x206A             MOVS     R0,#+106
   \   0000130A   0x.... 0x....      BL       LCD_P6x8Str
   2294                }      
   \   0000130E   0x1C64             ADDS     R4,R4,#+1
   \   00001310   0xE7BB             B.N      ??DebugOLEDUpdate_35
   2295              }
   2296              //画图
   2297              else if(DebugDisplayPage == 4)
   \                     ??DebugOLEDUpdate_29: (+1)
   \   00001312   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00001316   0x7800             LDRB     R0,[R0, #+0]
   \   00001318   0x2804             CMP      R0,#+4
   \   0000131A   0xF040 0x8557      BNE.W    ??DebugOLEDUpdate_10
   2298              {
   2299                uint8 bmp[127*8];  //127列0~126，8页0~7。
   2300                uint32 j;
   2301                uint8 page;
   2302                //页 第0列 第126列
   2303                //0:   0 ~ 126
   2304                //1: 127 ~ 253
   2305                //2: 254 ~ 380
   2306                //3: 381 ~ 507
   2307                //4: 508 ~ 634
   2308                //5: 635 ~ 761
   2309                //6: 762 ~ 888
   2310                //7: 889 ~ 1015
   2311                //数组清零
   2312                for(j = 0; j < 127 * 8; j++)
   \   0000131E   0x2000             MOVS     R0,#+0
   \   00001320   0xE00C             B.N      ??DebugOLEDUpdate_36
   \   00001322   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_8:
   \   00001324   0x........         DC32     BlackLeftHeadLine
   \   00001328   0x........         DC32     BlackRightHeadLine
   \   0000132C   0x........         DC32     ImgNew
   \   00001330   0x........         DC32     BlackLeftLoc
   2313                {
   2314                  bmp[j] = 0;
   \                     ??DebugOLEDUpdate_37: (+1)
   \   00001334   0x2100             MOVS     R1,#+0
   \   00001336   0xAAC5             ADD      R2,SP,#+788
   \   00001338   0x5481             STRB     R1,[R0, R2]
   2315                }
   \   0000133A   0x1C40             ADDS     R0,R0,#+1
   \                     ??DebugOLEDUpdate_36: (+1)
   \   0000133C   0xF5B0 0x7F7E      CMP      R0,#+1016
   \   00001340   0xD3F8             BCC.N    ??DebugOLEDUpdate_37
   2316                //实际图像绘制60x125，有则写1。有点小难度。
   2317                for(i = 0; i < 60; i++)
   \   00001342   0x2400             MOVS     R4,#+0
   \   00001344   0xE065             B.N      ??DebugOLEDUpdate_38
   2318                {
   2319                  //页码。
   2320                  page = i / 8;
   \                     ??DebugOLEDUpdate_39: (+1)
   \   00001346   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001348   0x2008             MOVS     R0,#+8
   \   0000134A   0xFB94 0xF0F0      SDIV     R0,R4,R0
   2321                  //左黑线，有则写1.
   2322                  if(BlackLeftLoc[i][0] != MaxValUint8)
   \   0000134E   0x.... 0x....      LDR.W    R1,??DataTable9_15
   \   00001352   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001354   0x2203             MOVS     R2,#+3
   \   00001356   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000135A   0x7809             LDRB     R1,[R1, #+0]
   \   0000135C   0x29FF             CMP      R1,#+255
   \   0000135E   0xD026             BEQ.N    ??DebugOLEDUpdate_40
   2323                  {
   2324                    bmp[127 * page + BlackLeftLoc[i][0] / 2] |= 1 << (i - page * 8);
   \   00001360   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00001362   0x217F             MOVS     R1,#+127
   \   00001364   0x.... 0x....      LDR.W    R2,??DataTable9_15
   \   00001368   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000136A   0x2303             MOVS     R3,#+3
   \   0000136C   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00001370   0x7812             LDRB     R2,[R2, #+0]
   \   00001372   0x2302             MOVS     R3,#+2
   \   00001374   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   00001378   0xFB01 0x2100      MLA      R1,R1,R0,R2
   \   0000137C   0xAAC5             ADD      R2,SP,#+788
   \   0000137E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00001380   0x237F             MOVS     R3,#+127
   \   00001382   0x.... 0x....      LDR.W    R5,??DataTable9_15
   \   00001386   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001388   0x2603             MOVS     R6,#+3
   \   0000138A   0xFB06 0x5504      MLA      R5,R6,R4,R5
   \   0000138E   0x782D             LDRB     R5,[R5, #+0]
   \   00001390   0x2602             MOVS     R6,#+2
   \   00001392   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   00001396   0xFB03 0x5300      MLA      R3,R3,R0,R5
   \   0000139A   0xADC5             ADD      R5,SP,#+788
   \   0000139C   0x5D5B             LDRB     R3,[R3, R5]
   \   0000139E   0x2501             MOVS     R5,#+1
   \   000013A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000013A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000013A4   0xEBB4 0x06C0      SUBS     R6,R4,R0, LSL #+3
   \   000013A8   0x40B5             LSLS     R5,R5,R6
   \   000013AA   0x432B             ORRS     R3,R5,R3
   \   000013AC   0x548B             STRB     R3,[R1, R2]
   2325                  }
   2326                  else
   2327                  {
   2328                  }
   2329                  //右黑线，有则写1.
   2330                  if(BlackRightLoc[i][0] != MaxValUint8)
   \                     ??DebugOLEDUpdate_40: (+1)
   \   000013AE   0xF8DF 0x160C      LDR.W    R1,??DebugOLEDUpdate_25+0x4
   \   000013B2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000013B4   0x2203             MOVS     R2,#+3
   \   000013B6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000013BA   0x7809             LDRB     R1,[R1, #+0]
   \   000013BC   0x29FF             CMP      R1,#+255
   \   000013BE   0xD027             BEQ.N    ??DebugOLEDUpdate_41
   2331                  {
   2332                    bmp[127 * page + BlackRightLoc[i][0] / 2] |= 1 << (i - page * 8);
   \   000013C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000013C2   0x217F             MOVS     R1,#+127
   \   000013C4   0xF8DF 0x25F4      LDR.W    R2,??DebugOLEDUpdate_25+0x4
   \   000013C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000013CA   0x2303             MOVS     R3,#+3
   \   000013CC   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   000013D0   0x7812             LDRB     R2,[R2, #+0]
   \   000013D2   0x2302             MOVS     R3,#+2
   \   000013D4   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   000013D8   0xFB01 0x2100      MLA      R1,R1,R0,R2
   \   000013DC   0xAAC5             ADD      R2,SP,#+788
   \   000013DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000013E0   0x237F             MOVS     R3,#+127
   \   000013E2   0xF8DF 0x55D8      LDR.W    R5,??DebugOLEDUpdate_25+0x4
   \   000013E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000013E8   0x2603             MOVS     R6,#+3
   \   000013EA   0xFB06 0x5504      MLA      R5,R6,R4,R5
   \   000013EE   0x782D             LDRB     R5,[R5, #+0]
   \   000013F0   0x2602             MOVS     R6,#+2
   \   000013F2   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   000013F6   0xFB03 0x5300      MLA      R3,R3,R0,R5
   \   000013FA   0xADC5             ADD      R5,SP,#+788
   \   000013FC   0x5D5B             LDRB     R3,[R3, R5]
   \   000013FE   0x2501             MOVS     R5,#+1
   \   00001400   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001402   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00001404   0xEBB4 0x00C0      SUBS     R0,R4,R0, LSL #+3
   \   00001408   0xFA15 0xF000      LSLS     R0,R5,R0
   \   0000140C   0x4318             ORRS     R0,R0,R3
   \   0000140E   0x5488             STRB     R0,[R1, R2]
   2333                  }
   2334                  else
   2335                  {
   2336                  }                
   2337                }
   \                     ??DebugOLEDUpdate_41: (+1)
   \   00001410   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_38: (+1)
   \   00001412   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001414   0x2C3C             CMP      R4,#+60
   \   00001416   0xDB96             BLT.N    ??DebugOLEDUpdate_39
   2338                //行标识
   2339                bmp[253]  |= 1 << 1;  //第9行
   \   00001418   0xF89D 0x0411      LDRB     R0,[SP, #+1041]
   \   0000141C   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00001420   0xF88D 0x0411      STRB     R0,[SP, #+1041]
   2340                bmp[380]  |= 1 << 3;  //第19行
   \   00001424   0xF89D 0x0490      LDRB     R0,[SP, #+1168]
   \   00001428   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000142C   0xF88D 0x0490      STRB     R0,[SP, #+1168]
   2341                bmp[507]  |= 1 << 5;  //第29行
   \   00001430   0xF89D 0x050F      LDRB     R0,[SP, #+1295]
   \   00001434   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00001438   0xF88D 0x050F      STRB     R0,[SP, #+1295]
   2342                bmp[634]  |= 1 << 7;  //第39行
   \   0000143C   0xF89D 0x058E      LDRB     R0,[SP, #+1422]
   \   00001440   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00001444   0xF88D 0x058E      STRB     R0,[SP, #+1422]
   2343                bmp[888]  |= 1 << 1;  //第49行
   \   00001448   0xF89D 0x068C      LDRB     R0,[SP, #+1676]
   \   0000144C   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00001450   0xF88D 0x068C      STRB     R0,[SP, #+1676]
   2344                bmp[1015] |= 1 << 3;  //第59行
   \   00001454   0xF89D 0x070B      LDRB     R0,[SP, #+1803]
   \   00001458   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000145C   0xF88D 0x070B      STRB     R0,[SP, #+1803]
   2345                //左线头
   2346                if(BlackLeftHeadLine != MaxValUint8)
   \   00001460   0x.... 0x....      LDR.W    R0,??DataTable9_16
   \   00001464   0x7800             LDRB     R0,[R0, #+0]
   \   00001466   0x28FF             CMP      R0,#+255
   \   00001468   0xD01A             BEQ.N    ??DebugOLEDUpdate_42
   2347                {
   2348                  page = BlackLeftHeadLine / 8;
   \   0000146A   0x.... 0x....      LDR.W    R0,??DataTable9_16
   \   0000146E   0x7800             LDRB     R0,[R0, #+0]
   \   00001470   0x2108             MOVS     R1,#+8
   \   00001472   0xFB90 0xF0F1      SDIV     R0,R0,R1
   2349                  bmp[127 * page] |= 1 << (BlackLeftHeadLine - page * 8);
   \   00001476   0xA9C5             ADD      R1,SP,#+788
   \   00001478   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000147A   0x227F             MOVS     R2,#+127
   \   0000147C   0xFB02 0x1100      MLA      R1,R2,R0,R1
   \   00001480   0x7809             LDRB     R1,[R1, #+0]
   \   00001482   0x2201             MOVS     R2,#+1
   \   00001484   0x.... 0x....      LDR.W    R3,??DataTable9_16
   \   00001488   0x781B             LDRB     R3,[R3, #+0]
   \   0000148A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000148C   0xEBB3 0x03C0      SUBS     R3,R3,R0, LSL #+3
   \   00001490   0x409A             LSLS     R2,R2,R3
   \   00001492   0x4311             ORRS     R1,R2,R1
   \   00001494   0xAAC5             ADD      R2,SP,#+788
   \   00001496   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00001498   0x237F             MOVS     R3,#+127
   \   0000149A   0xFB03 0x2000      MLA      R0,R3,R0,R2
   \   0000149E   0x7001             STRB     R1,[R0, #+0]
   2350                }
   2351                else
   2352                {
   2353                }
   2354                //右线头
   2355                if(BlackRightHeadLine != MaxValUint8)
   \                     ??DebugOLEDUpdate_42: (+1)
   \   000014A0   0x.... 0x....      LDR.W    R0,??DataTable9_17
   \   000014A4   0x7800             LDRB     R0,[R0, #+0]
   \   000014A6   0x28FF             CMP      R0,#+255
   \   000014A8   0xD01C             BEQ.N    ??DebugOLEDUpdate_43
   2356                {
   2357                  page = BlackRightHeadLine / 8;
   \   000014AA   0x.... 0x....      LDR.W    R0,??DataTable9_17
   \   000014AE   0x7800             LDRB     R0,[R0, #+0]
   \   000014B0   0x2108             MOVS     R1,#+8
   \   000014B2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   2358                  bmp[127 * page + 125] |= 1 << (BlackRightHeadLine - page * 8);
   \   000014B6   0xA9C5             ADD      R1,SP,#+788
   \   000014B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000014BA   0x227F             MOVS     R2,#+127
   \   000014BC   0xFB02 0x1100      MLA      R1,R2,R0,R1
   \   000014C0   0xF891 0x107D      LDRB     R1,[R1, #+125]
   \   000014C4   0x2201             MOVS     R2,#+1
   \   000014C6   0x.... 0x....      LDR.W    R3,??DataTable9_17
   \   000014CA   0x781B             LDRB     R3,[R3, #+0]
   \   000014CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000014CE   0xEBB3 0x03C0      SUBS     R3,R3,R0, LSL #+3
   \   000014D2   0x409A             LSLS     R2,R2,R3
   \   000014D4   0x4311             ORRS     R1,R2,R1
   \   000014D6   0xAAC5             ADD      R2,SP,#+788
   \   000014D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000014DA   0x237F             MOVS     R3,#+127
   \   000014DC   0xFB03 0x2000      MLA      R0,R3,R0,R2
   \   000014E0   0xF880 0x107D      STRB     R1,[R0, #+125]
   2359                }
   2360                else
   2361                {
   2362                }      
   2363                //列标识
   2364                bmp[889]  |= 1 << 6;
   \                     ??DebugOLEDUpdate_43: (+1)
   \   000014E4   0xF89D 0x068D      LDRB     R0,[SP, #+1677]
   \   000014E8   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000014EC   0xF88D 0x068D      STRB     R0,[SP, #+1677]
   2365                bmp[889]  |= 1 << 7;  //第0列
   \   000014F0   0xF89D 0x068D      LDRB     R0,[SP, #+1677]
   \   000014F4   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000014F8   0xF88D 0x068D      STRB     R0,[SP, #+1677]
   2366                bmp[951]  |= 1 << 6;
   \   000014FC   0xF89D 0x06CB      LDRB     R0,[SP, #+1739]
   \   00001500   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00001504   0xF88D 0x06CB      STRB     R0,[SP, #+1739]
   2367                bmp[951]  |= 1 << 7;  //第62列
   \   00001508   0xF89D 0x06CB      LDRB     R0,[SP, #+1739]
   \   0000150C   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00001510   0xF88D 0x06CB      STRB     R0,[SP, #+1739]
   2368                bmp[1014]  |= 1 << 6;
   \   00001514   0xF89D 0x070A      LDRB     R0,[SP, #+1802]
   \   00001518   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   0000151C   0xF88D 0x070A      STRB     R0,[SP, #+1802]
   2369                bmp[1014]  |= 1 << 7;  //第125列  
   \   00001520   0xF89D 0x070A      LDRB     R0,[SP, #+1802]
   \   00001524   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00001528   0xF88D 0x070A      STRB     R0,[SP, #+1802]
   2370                //左扫描起点
   2371                bmp[889 + BlackLeftEdgeStartCol / 2] |= 1 << 4;
   \   0000152C   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   00001530   0x7800             LDRB     R0,[R0, #+0]
   \   00001532   0x2102             MOVS     R1,#+2
   \   00001534   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001538   0xA9C5             ADD      R1,SP,#+788
   \   0000153A   0x1840             ADDS     R0,R0,R1
   \   0000153C   0x.... 0x....      LDR.W    R1,??DataTable9_18
   \   00001540   0x7809             LDRB     R1,[R1, #+0]
   \   00001542   0x2202             MOVS     R2,#+2
   \   00001544   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00001548   0xAAC5             ADD      R2,SP,#+788
   \   0000154A   0x1889             ADDS     R1,R1,R2
   \   0000154C   0xF891 0x1379      LDRB     R1,[R1, #+889]
   \   00001550   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   00001554   0xF880 0x1379      STRB     R1,[R0, #+889]
   2372                bmp[889 + BlackLeftEdgeStartCol / 2] |= 1 << 5;
   \   00001558   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   0000155C   0x7800             LDRB     R0,[R0, #+0]
   \   0000155E   0x2102             MOVS     R1,#+2
   \   00001560   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001564   0xA9C5             ADD      R1,SP,#+788
   \   00001566   0x1840             ADDS     R0,R0,R1
   \   00001568   0x.... 0x....      LDR.W    R1,??DataTable9_18
   \   0000156C   0x7809             LDRB     R1,[R1, #+0]
   \   0000156E   0x2202             MOVS     R2,#+2
   \   00001570   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00001574   0xAAC5             ADD      R2,SP,#+788
   \   00001576   0x1889             ADDS     R1,R1,R2
   \   00001578   0xF891 0x1379      LDRB     R1,[R1, #+889]
   \   0000157C   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   00001580   0xF880 0x1379      STRB     R1,[R0, #+889]
   2373                //右扫描起点
   2374                bmp[889 + BlackRightEdgeStartCol / 2] |= 1 << 4;
   \   00001584   0x.... 0x....      LDR.W    R0,??DataTable9_19
   \   00001588   0x7800             LDRB     R0,[R0, #+0]
   \   0000158A   0x2102             MOVS     R1,#+2
   \   0000158C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001590   0xA9C5             ADD      R1,SP,#+788
   \   00001592   0x1840             ADDS     R0,R0,R1
   \   00001594   0x.... 0x....      LDR.W    R1,??DataTable9_19
   \   00001598   0x7809             LDRB     R1,[R1, #+0]
   \   0000159A   0x2202             MOVS     R2,#+2
   \   0000159C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000015A0   0xAAC5             ADD      R2,SP,#+788
   \   000015A2   0x1889             ADDS     R1,R1,R2
   \   000015A4   0xF891 0x1379      LDRB     R1,[R1, #+889]
   \   000015A8   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   000015AC   0xF880 0x1379      STRB     R1,[R0, #+889]
   2375                bmp[889 + BlackRightEdgeStartCol / 2] |= 1 << 5;      
   \   000015B0   0x.... 0x....      LDR.W    R0,??DataTable9_19
   \   000015B4   0x7800             LDRB     R0,[R0, #+0]
   \   000015B6   0x2102             MOVS     R1,#+2
   \   000015B8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000015BC   0xA9C5             ADD      R1,SP,#+788
   \   000015BE   0x1840             ADDS     R0,R0,R1
   \   000015C0   0x.... 0x....      LDR.W    R1,??DataTable9_19
   \   000015C4   0x7809             LDRB     R1,[R1, #+0]
   \   000015C6   0x2202             MOVS     R2,#+2
   \   000015C8   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000015CC   0xAAC5             ADD      R2,SP,#+788
   \   000015CE   0x1889             ADDS     R1,R1,R2
   \   000015D0   0xF891 0x1379      LDRB     R1,[R1, #+889]
   \   000015D4   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   000015D8   0xF880 0x1379      STRB     R1,[R0, #+889]
   2376                //PutPixel函数有误，只能用DrawBMP函数，且更高效。
   2377                Draw_BMP(0, 0, 127, 7, bmp);      
   \   000015DC   0xA8C5             ADD      R0,SP,#+788
   \   000015DE   0x9000             STR      R0,[SP, #+0]
   \   000015E0   0x2307             MOVS     R3,#+7
   \   000015E2   0x227F             MOVS     R2,#+127
   \   000015E4   0x2100             MOVS     R1,#+0
   \   000015E6   0x2000             MOVS     R0,#+0
   \   000015E8   0x.... 0x....      BL       Draw_BMP
   \   000015EC   0xE3EE             B.N      ??DebugOLEDUpdate_10
   \   000015EE   0xBF00             Nop      
   \                     ??DebugOLEDUpdate_34:
   \   000015F0   0x44 0x5F          DC8      "D_3"
   \              0x33 0x00    
   \   000015F4   0x31 0x32          DC8      "123"
   \              0x33 0x00    
   \   000015F8   0x31 0x32          DC8      "124"
   \              0x34 0x00    
   \   000015FC   0x31 0x32          DC8      "125"
   \              0x35 0x00    
   \   00001600   0x31 0x32          DC8      "126"
   \              0x36 0x00    
   \   00001604   0x31 0x32          DC8      "127"
   \              0x37 0x00    
   \   00001608   0x31 0x32          DC8      "128"
   \              0x38 0x00    
   2378              }
   2379              //待添加页。
   2380              else 
   2381              {
   2382              }
   2383            }
   2384            //当前为调参界面。
   2385            else
   2386            {
   2387              //调参界面用的。前3个表示值，最后1个表示字符串末尾。
   2388              uint8 tempVal[60][4]; 
   2389          
   2390              //建立字符串的尾巴。
   2391              for(i = 0; i < 60; i++)
   \                     ??DebugOLEDUpdate_1: (+1)
   \   0000160C   0x2400             MOVS     R4,#+0
   \   0000160E   0xE006             B.N      ??DebugOLEDUpdate_44
   2392              {
   2393                tempVal[i][3] = 0;
   \                     ??DebugOLEDUpdate_45: (+1)
   \   00001610   0x2000             MOVS     R0,#+0
   \   00001612   0xA91D             ADD      R1,SP,#+116
   \   00001614   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001616   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   0000161A   0x70C8             STRB     R0,[R1, #+3]
   2394              }
   \   0000161C   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_44: (+1)
   \   0000161E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001620   0x2C3C             CMP      R4,#+60
   \   00001622   0xDBF5             BLT.N    ??DebugOLEDUpdate_45
   2395              
   2396              //调参界面的页码，0,1,2,3
   2397              if(DebugModifyPage == 0)
   \   00001624   0x.... 0x....      LDR.W    R0,??DataTable9_20
   \   00001628   0x7800             LDRB     R0,[R0, #+0]
   \   0000162A   0x2800             CMP      R0,#+0
   \   0000162C   0xF040 0x80DD      BNE.W    ??DebugOLEDUpdate_46
   2398              {
   2399                //第0页的标题。
   2400                LCD_P6x8Str(0, 0, "M_0");
   \   00001630   0xA27D             ADR.N    R2,??DebugOLEDUpdate_47  ;; "M_0"
   \   00001632   0x2100             MOVS     R1,#+0
   \   00001634   0x2000             MOVS     R0,#+0
   \   00001636   0x.... 0x....      BL       LCD_P6x8Str
   2401                //修改标志。
   2402                if(DebugModifyFlag == 1)
   \   0000163A   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   0000163E   0x7800             LDRB     R0,[R0, #+0]
   \   00001640   0x2801             CMP      R0,#+1
   \   00001642   0xD105             BNE.N    ??DebugOLEDUpdate_48
   2403                {
   2404                  LCD_P6x8Str(24, 0, "@");
   \   00001644   0xA279             ADR.N    R2,??DebugOLEDUpdate_47+0x4  ;; "@"
   \   00001646   0x2100             MOVS     R1,#+0
   \   00001648   0x2018             MOVS     R0,#+24
   \   0000164A   0x.... 0x....      BL       LCD_P6x8Str
   \   0000164E   0xE004             B.N      ??DebugOLEDUpdate_49
   2405                }
   2406                else
   2407                {
   2408                  LCD_P6x8Str(24, 0, " ");
   \                     ??DebugOLEDUpdate_48: (+1)
   \   00001650   0xA2D9             ADR.N    R2,??DebugOLEDUpdate_25  ;; " "
   \   00001652   0x2100             MOVS     R1,#+0
   \   00001654   0x2018             MOVS     R0,#+24
   \   00001656   0x.... 0x....      BL       LCD_P6x8Str
   2409                }
   2410                
   2411                //光标的标注。
   2412                DebugModifyCursorMark();
   \                     ??DebugOLEDUpdate_49: (+1)
   \   0000165A   0x.... 0x....      BL       DebugModifyCursorMark
   2413                
   2414                //15个参数的计算。
   2415                for(i = 0; i <= 14; i++)
   \   0000165E   0x2400             MOVS     R4,#+0
   \   00001660   0xE029             B.N      ??DebugOLEDUpdate_50
   2416                {
   2417                  temp = DebugModifyNum[i];
   \                     ??DebugOLEDUpdate_51: (+1)
   \   00001662   0x.... 0x....      LDR.W    R0,??DataTable9_22
   \   00001666   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001668   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   2418                  tempVal[i][0] = temp / 100 + 48;
   \   0000166C   0x2164             MOVS     R1,#+100
   \   0000166E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001672   0x3130             ADDS     R1,R1,#+48
   \   00001674   0xAA1D             ADD      R2,SP,#+116
   \   00001676   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001678   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2419                  tempVal[i][1] = (temp % 100) / 10 + 48;
   \   0000167C   0x2164             MOVS     R1,#+100
   \   0000167E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001682   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001686   0x220A             MOVS     R2,#+10
   \   00001688   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000168C   0x3130             ADDS     R1,R1,#+48
   \   0000168E   0xAA1D             ADD      R2,SP,#+116
   \   00001690   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001692   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001696   0x7051             STRB     R1,[R2, #+1]
   2420                  tempVal[i][2] = (temp % 10) / 1 + 48;        
   \   00001698   0x210A             MOVS     R1,#+10
   \   0000169A   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000169E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000016A2   0x2101             MOVS     R1,#+1
   \   000016A4   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000016A8   0x3030             ADDS     R0,R0,#+48
   \   000016AA   0xA91D             ADD      R1,SP,#+116
   \   000016AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000016AE   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   000016B2   0x7088             STRB     R0,[R1, #+2]
   2421                }
   \   000016B4   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_50: (+1)
   \   000016B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000016B8   0x2C0F             CMP      R4,#+15
   \   000016BA   0xDBD2             BLT.N    ??DebugOLEDUpdate_51
   2422                //15个参数名字的显示。
   2423                LCD_P6x8Str(12, 1, "SPD");
   \   000016BC   0xA2C0             ADR.N    R2,??DebugOLEDUpdate_25+0x8  ;; "SPD"
   \   000016BE   0x2101             MOVS     R1,#+1
   \   000016C0   0x200C             MOVS     R0,#+12
   \   000016C2   0x.... 0x....      BL       LCD_P6x8Str
   2424                LCD_P6x8Str(12, 2, "Kp1");
   \   000016C6   0xA2BF             ADR.N    R2,??DebugOLEDUpdate_25+0xC  ;; "Kp1"
   \   000016C8   0x2102             MOVS     R1,#+2
   \   000016CA   0x200C             MOVS     R0,#+12
   \   000016CC   0x.... 0x....      BL       LCD_P6x8Str
   2425                LCD_P6x8Str(12, 3, "Kp2");
   \   000016D0   0xA2BD             ADR.N    R2,??DebugOLEDUpdate_25+0x10  ;; "Kp2"
   \   000016D2   0x2103             MOVS     R1,#+3
   \   000016D4   0x200C             MOVS     R0,#+12
   \   000016D6   0x.... 0x....      BL       LCD_P6x8Str
   2426                LCD_P6x8Str(12, 4, "Kp3");
   \   000016DA   0xA2BC             ADR.N    R2,??DebugOLEDUpdate_25+0x14  ;; "Kp3"
   \   000016DC   0x2104             MOVS     R1,#+4
   \   000016DE   0x200C             MOVS     R0,#+12
   \   000016E0   0x.... 0x....      BL       LCD_P6x8Str
   2427                LCD_P6x8Str(12, 5, "Kp4");
   \   000016E4   0xA2BA             ADR.N    R2,??DebugOLEDUpdate_25+0x18  ;; "Kp4"
   \   000016E6   0x2105             MOVS     R1,#+5
   \   000016E8   0x200C             MOVS     R0,#+12
   \   000016EA   0x.... 0x....      BL       LCD_P6x8Str
   2428                LCD_P6x8Str(12, 6, "Kp5");
   \   000016EE   0xA2B9             ADR.N    R2,??DebugOLEDUpdate_25+0x1C  ;; "Kp5"
   \   000016F0   0x2106             MOVS     R1,#+6
   \   000016F2   0x200C             MOVS     R0,#+12
   \   000016F4   0x.... 0x....      BL       LCD_P6x8Str
   2429                LCD_P6x8Str(12, 7, "Kp6");
   \   000016F8   0xA2B7             ADR.N    R2,??DebugOLEDUpdate_25+0x20  ;; "Kp6"
   \   000016FA   0x2107             MOVS     R1,#+7
   \   000016FC   0x200C             MOVS     R0,#+12
   \   000016FE   0x.... 0x....      BL       LCD_P6x8Str
   2430                LCD_P6x8Str(76, 0, "Kp7");
   \   00001702   0xA2B6             ADR.N    R2,??DebugOLEDUpdate_25+0x24  ;; "Kp7"
   \   00001704   0x2100             MOVS     R1,#+0
   \   00001706   0x204C             MOVS     R0,#+76
   \   00001708   0x.... 0x....      BL       LCD_P6x8Str
   2431                LCD_P6x8Str(76, 1, "Kp0");
   \   0000170C   0xA2B4             ADR.N    R2,??DebugOLEDUpdate_25+0x28  ;; "Kp0"
   \   0000170E   0x2101             MOVS     R1,#+1
   \   00001710   0x204C             MOVS     R0,#+76
   \   00001712   0x.... 0x....      BL       LCD_P6x8Str
   2432                LCD_P6x8Str(76, 2, "MtI");
   \   00001716   0xA2B3             ADR.N    R2,??DebugOLEDUpdate_25+0x2C  ;; "MtI"
   \   00001718   0x2102             MOVS     R1,#+2
   \   0000171A   0x204C             MOVS     R0,#+76
   \   0000171C   0x.... 0x....      BL       LCD_P6x8Str
   2433                LCD_P6x8Str(76, 3, "MtP");
   \   00001720   0xA2B1             ADR.N    R2,??DebugOLEDUpdate_25+0x30  ;; "MtP"
   \   00001722   0x2103             MOVS     R1,#+3
   \   00001724   0x204C             MOVS     R0,#+76
   \   00001726   0x.... 0x....      BL       LCD_P6x8Str
   2434                LCD_P6x8Str(76, 4, "Mt5");
   \   0000172A   0xA2B0             ADR.N    R2,??DebugOLEDUpdate_25+0x34  ;; "Mt5"
   \   0000172C   0x2104             MOVS     R1,#+4
   \   0000172E   0x204C             MOVS     R0,#+76
   \   00001730   0x.... 0x....      BL       LCD_P6x8Str
   2435                LCD_P6x8Str(76, 5, "Mt4");
   \   00001734   0xA2AE             ADR.N    R2,??DebugOLEDUpdate_25+0x38  ;; "Mt4"
   \   00001736   0x2105             MOVS     R1,#+5
   \   00001738   0x204C             MOVS     R0,#+76
   \   0000173A   0x.... 0x....      BL       LCD_P6x8Str
   2436                LCD_P6x8Str(76, 6, "Mt3");
   \   0000173E   0xA2AD             ADR.N    R2,??DebugOLEDUpdate_25+0x3C  ;; "Mt3"
   \   00001740   0x2106             MOVS     R1,#+6
   \   00001742   0x204C             MOVS     R0,#+76
   \   00001744   0x.... 0x....      BL       LCD_P6x8Str
   2437                LCD_P6x8Str(76, 7, "Mt2");
   \   00001748   0xA2AB             ADR.N    R2,??DebugOLEDUpdate_25+0x40  ;; "Mt2"
   \   0000174A   0x2107             MOVS     R1,#+7
   \   0000174C   0x204C             MOVS     R0,#+76
   \   0000174E   0x.... 0x....      BL       LCD_P6x8Str
   2438                //15个参数值的显示。
   2439                LCD_P6x8Str(36, 1, tempVal[0]);
   \   00001752   0xAA1D             ADD      R2,SP,#+116
   \   00001754   0x2101             MOVS     R1,#+1
   \   00001756   0x2024             MOVS     R0,#+36
   \   00001758   0x.... 0x....      BL       LCD_P6x8Str
   2440                LCD_P6x8Str(36, 2, tempVal[1]);
   \   0000175C   0xAA1E             ADD      R2,SP,#+120
   \   0000175E   0x2102             MOVS     R1,#+2
   \   00001760   0x2024             MOVS     R0,#+36
   \   00001762   0x.... 0x....      BL       LCD_P6x8Str
   2441                LCD_P6x8Str(36, 3, tempVal[2]);
   \   00001766   0xAA1F             ADD      R2,SP,#+124
   \   00001768   0x2103             MOVS     R1,#+3
   \   0000176A   0x2024             MOVS     R0,#+36
   \   0000176C   0x.... 0x....      BL       LCD_P6x8Str
   2442                LCD_P6x8Str(36, 4, tempVal[3]);
   \   00001770   0xAA20             ADD      R2,SP,#+128
   \   00001772   0x2104             MOVS     R1,#+4
   \   00001774   0x2024             MOVS     R0,#+36
   \   00001776   0x.... 0x....      BL       LCD_P6x8Str
   2443                LCD_P6x8Str(36, 5, tempVal[4]);
   \   0000177A   0xAA21             ADD      R2,SP,#+132
   \   0000177C   0x2105             MOVS     R1,#+5
   \   0000177E   0x2024             MOVS     R0,#+36
   \   00001780   0x.... 0x....      BL       LCD_P6x8Str
   2444                LCD_P6x8Str(36, 6, tempVal[5]);
   \   00001784   0xAA22             ADD      R2,SP,#+136
   \   00001786   0x2106             MOVS     R1,#+6
   \   00001788   0x2024             MOVS     R0,#+36
   \   0000178A   0x.... 0x....      BL       LCD_P6x8Str
   2445                LCD_P6x8Str(36, 7, tempVal[6]);
   \   0000178E   0xAA23             ADD      R2,SP,#+140
   \   00001790   0x2107             MOVS     R1,#+7
   \   00001792   0x2024             MOVS     R0,#+36
   \   00001794   0x.... 0x....      BL       LCD_P6x8Str
   2446                LCD_P6x8Str(100, 0, tempVal[7]);
   \   00001798   0xAA24             ADD      R2,SP,#+144
   \   0000179A   0x2100             MOVS     R1,#+0
   \   0000179C   0x2064             MOVS     R0,#+100
   \   0000179E   0x.... 0x....      BL       LCD_P6x8Str
   2447                LCD_P6x8Str(100, 1, tempVal[8]);
   \   000017A2   0xAA25             ADD      R2,SP,#+148
   \   000017A4   0x2101             MOVS     R1,#+1
   \   000017A6   0x2064             MOVS     R0,#+100
   \   000017A8   0x.... 0x....      BL       LCD_P6x8Str
   2448                LCD_P6x8Str(100, 2, tempVal[9]);
   \   000017AC   0xAA26             ADD      R2,SP,#+152
   \   000017AE   0x2102             MOVS     R1,#+2
   \   000017B0   0x2064             MOVS     R0,#+100
   \   000017B2   0x.... 0x....      BL       LCD_P6x8Str
   2449                LCD_P6x8Str(100, 3, tempVal[10]);
   \   000017B6   0xAA27             ADD      R2,SP,#+156
   \   000017B8   0x2103             MOVS     R1,#+3
   \   000017BA   0x2064             MOVS     R0,#+100
   \   000017BC   0x.... 0x....      BL       LCD_P6x8Str
   2450                LCD_P6x8Str(100, 4, tempVal[11]);
   \   000017C0   0xAA28             ADD      R2,SP,#+160
   \   000017C2   0x2104             MOVS     R1,#+4
   \   000017C4   0x2064             MOVS     R0,#+100
   \   000017C6   0x.... 0x....      BL       LCD_P6x8Str
   2451                LCD_P6x8Str(100, 5, tempVal[12]);
   \   000017CA   0xAA29             ADD      R2,SP,#+164
   \   000017CC   0x2105             MOVS     R1,#+5
   \   000017CE   0x2064             MOVS     R0,#+100
   \   000017D0   0x.... 0x....      BL       LCD_P6x8Str
   2452                LCD_P6x8Str(100, 6, tempVal[13]);
   \   000017D4   0xAA2A             ADD      R2,SP,#+168
   \   000017D6   0x2106             MOVS     R1,#+6
   \   000017D8   0x2064             MOVS     R0,#+100
   \   000017DA   0x.... 0x....      BL       LCD_P6x8Str
   2453                LCD_P6x8Str(100, 7, tempVal[14]);
   \   000017DE   0xAA2B             ADD      R2,SP,#+172
   \   000017E0   0x2107             MOVS     R1,#+7
   \   000017E2   0x2064             MOVS     R0,#+100
   \   000017E4   0x.... 0x....      BL       LCD_P6x8Str
   \   000017E8   0xE2F0             B.N      ??DebugOLEDUpdate_10
   2454                
   2455              }
   2456              //调参界面的页码，0,1,2,3
   2457              else if(DebugModifyPage == 1)
   \                     ??DebugOLEDUpdate_46: (+1)
   \   000017EA   0x.... 0x....      LDR.W    R0,??DataTable9_20
   \   000017EE   0x7800             LDRB     R0,[R0, #+0]
   \   000017F0   0x2801             CMP      R0,#+1
   \   000017F2   0xF040 0x8107      BNE.W    ??DebugOLEDUpdate_52
   2458              {
   2459                //第1页的标题。
   2460                LCD_P6x8Str(0, 0, "M_1");
   \   000017F6   0xA281             ADR.N    R2,??DebugOLEDUpdate_25+0x44  ;; "M_1"
   \   000017F8   0x2100             MOVS     R1,#+0
   \   000017FA   0x2000             MOVS     R0,#+0
   \   000017FC   0x.... 0x....      BL       LCD_P6x8Str
   2461                //修改标志。
   2462                if(DebugModifyFlag == 1)
   \   00001800   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00001804   0x7800             LDRB     R0,[R0, #+0]
   \   00001806   0x2801             CMP      R0,#+1
   \   00001808   0xD105             BNE.N    ??DebugOLEDUpdate_53
   2463                {
   2464                  LCD_P6x8Str(24, 0, "@");
   \   0000180A   0xA208             ADR.N    R2,??DebugOLEDUpdate_47+0x4  ;; "@"
   \   0000180C   0x2100             MOVS     R1,#+0
   \   0000180E   0x2018             MOVS     R0,#+24
   \   00001810   0x.... 0x....      BL       LCD_P6x8Str
   \   00001814   0xE004             B.N      ??DebugOLEDUpdate_54
   2465                }
   2466                else
   2467                {
   2468                  LCD_P6x8Str(24, 0, " ");
   \                     ??DebugOLEDUpdate_53: (+1)
   \   00001816   0xA268             ADR.N    R2,??DebugOLEDUpdate_25  ;; " "
   \   00001818   0x2100             MOVS     R1,#+0
   \   0000181A   0x2018             MOVS     R0,#+24
   \   0000181C   0x.... 0x....      BL       LCD_P6x8Str
   2469                }
   2470                
   2471                //光标的标注。
   2472                DebugModifyCursorMark();
   \                     ??DebugOLEDUpdate_54: (+1)
   \   00001820   0x.... 0x....      BL       DebugModifyCursorMark
   2473                
   2474                //15个参数的计算。
   2475                for(i = 15; i <= 29; i++)
   \   00001824   0x240F             MOVS     R4,#+15
   \   00001826   0xE02D             B.N      ??DebugOLEDUpdate_55
   \                     ??DebugOLEDUpdate_47:
   \   00001828   0x4D 0x5F          DC8      "M_0"
   \              0x30 0x00    
   \   0000182C   0x40 0x00          DC8      "@",0x0,0x0
   \              0x00 0x00    
   2476                {
   2477                  temp = DebugModifyNum[i];
   \                     ??DebugOLEDUpdate_56: (+1)
   \   00001830   0x.... 0x....      LDR.W    R0,??DataTable9_22
   \   00001834   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001836   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   2478                  tempVal[i][0] = temp / 100 + 48;
   \   0000183A   0x2164             MOVS     R1,#+100
   \   0000183C   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001840   0x3130             ADDS     R1,R1,#+48
   \   00001842   0xAA1D             ADD      R2,SP,#+116
   \   00001844   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001846   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2479                  tempVal[i][1] = (temp % 100) / 10 + 48;
   \   0000184A   0x2164             MOVS     R1,#+100
   \   0000184C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001850   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001854   0x220A             MOVS     R2,#+10
   \   00001856   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000185A   0x3130             ADDS     R1,R1,#+48
   \   0000185C   0xAA1D             ADD      R2,SP,#+116
   \   0000185E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001860   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001864   0x7051             STRB     R1,[R2, #+1]
   2480                  tempVal[i][2] = (temp % 10) / 1 + 48;        
   \   00001866   0x210A             MOVS     R1,#+10
   \   00001868   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000186C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001870   0x2101             MOVS     R1,#+1
   \   00001872   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00001876   0x3030             ADDS     R0,R0,#+48
   \   00001878   0xA91D             ADD      R1,SP,#+116
   \   0000187A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000187C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001880   0x7088             STRB     R0,[R1, #+2]
   2481                }
   \   00001882   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_55: (+1)
   \   00001884   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001886   0x2C1E             CMP      R4,#+30
   \   00001888   0xDBD2             BLT.N    ??DebugOLEDUpdate_56
   2482                //15个参数名字的显示。
   2483                LCD_P6x8Str(12, 1, "Mt1");
   \   0000188A   0xA25D             ADR.N    R2,??DebugOLEDUpdate_25+0x48  ;; "Mt1"
   \   0000188C   0x2101             MOVS     R1,#+1
   \   0000188E   0x200C             MOVS     R0,#+12
   \   00001890   0x.... 0x....      BL       LCD_P6x8Str
   2484                LCD_P6x8Str(12, 2, "Mt0");
   \   00001894   0xA2DB             ADR.N    R2,??DebugOLEDUpdate_57  ;; "Mt0"
   \   00001896   0x2102             MOVS     R1,#+2
   \   00001898   0x200C             MOVS     R0,#+12
   \   0000189A   0x.... 0x....      BL       LCD_P6x8Str
   2485                LCD_P6x8Str(12, 3, "Bci");
   \   0000189E   0xA2DA             ADR.N    R2,??DebugOLEDUpdate_57+0x4  ;; "Bci"
   \   000018A0   0x2103             MOVS     R1,#+3
   \   000018A2   0x200C             MOVS     R0,#+12
   \   000018A4   0x.... 0x....      BL       LCD_P6x8Str
   2486                LCD_P6x8Str(12, 4, "Bxu");
   \   000018A8   0xA2D8             ADR.N    R2,??DebugOLEDUpdate_57+0x8  ;; "Bxu"
   \   000018AA   0x2104             MOVS     R1,#+4
   \   000018AC   0x200C             MOVS     R0,#+12
   \   000018AE   0x.... 0x....      BL       LCD_P6x8Str
   2487                LCD_P6x8Str(12, 5, "WBi");
   \   000018B2   0xA2D7             ADR.N    R2,??DebugOLEDUpdate_57+0xC  ;; "WBi"
   \   000018B4   0x2105             MOVS     R1,#+5
   \   000018B6   0x200C             MOVS     R0,#+12
   \   000018B8   0x.... 0x....      BL       LCD_P6x8Str
   2488                LCD_P6x8Str(12, 6, "WBa");
   \   000018BC   0xA2D5             ADR.N    R2,??DebugOLEDUpdate_57+0x10  ;; "WBa"
   \   000018BE   0x2106             MOVS     R1,#+6
   \   000018C0   0x200C             MOVS     R0,#+12
   \   000018C2   0x.... 0x....      BL       LCD_P6x8Str
   2489                LCD_P6x8Str(12, 7, "Win");
   \   000018C6   0xA2D4             ADR.N    R2,??DebugOLEDUpdate_57+0x14  ;; "Win"
   \   000018C8   0x2107             MOVS     R1,#+7
   \   000018CA   0x200C             MOVS     R0,#+12
   \   000018CC   0x.... 0x....      BL       LCD_P6x8Str
   2490                LCD_P6x8Str(76, 0, "Wax");
   \   000018D0   0xA2D2             ADR.N    R2,??DebugOLEDUpdate_57+0x18  ;; "Wax"
   \   000018D2   0x2100             MOVS     R1,#+0
   \   000018D4   0x204C             MOVS     R0,#+76
   \   000018D6   0x.... 0x....      BL       LCD_P6x8Str
   2491                LCD_P6x8Str(76, 1, "Bin");
   \   000018DA   0xA2D1             ADR.N    R2,??DebugOLEDUpdate_57+0x1C  ;; "Bin"
   \   000018DC   0x2101             MOVS     R1,#+1
   \   000018DE   0x204C             MOVS     R0,#+76
   \   000018E0   0x.... 0x....      BL       LCD_P6x8Str
   2492                LCD_P6x8Str(76, 2, "Bax");
   \   000018E4   0xA2CF             ADR.N    R2,??DebugOLEDUpdate_57+0x20  ;; "Bax"
   \   000018E6   0x2102             MOVS     R1,#+2
   \   000018E8   0x204C             MOVS     R0,#+76
   \   000018EA   0x.... 0x....      BL       LCD_P6x8Str
   2493                LCD_P6x8Str(76, 3, "Zhi");
   \   000018EE   0xA2CE             ADR.N    R2,??DebugOLEDUpdate_57+0x24  ;; "Zhi"
   \   000018F0   0x2103             MOVS     R1,#+3
   \   000018F2   0x204C             MOVS     R0,#+76
   \   000018F4   0x.... 0x....      BL       LCD_P6x8Str
   2494                LCD_P6x8Str(76, 4, "Zha");
   \   000018F8   0xA2CC             ADR.N    R2,??DebugOLEDUpdate_57+0x28  ;; "Zha"
   \   000018FA   0x2104             MOVS     R1,#+4
   \   000018FC   0x204C             MOVS     R0,#+76
   \   000018FE   0x.... 0x....      BL       LCD_P6x8Str
   2495                LCD_P6x8Str(76, 5, "sPo");
   \   00001902   0xA2CB             ADR.N    R2,??DebugOLEDUpdate_57+0x2C  ;; "sPo"
   \   00001904   0x2105             MOVS     R1,#+5
   \   00001906   0x204C             MOVS     R0,#+76
   \   00001908   0x.... 0x....      BL       LCD_P6x8Str
   2496                LCD_P6x8Str(76, 6, "xPo");
   \   0000190C   0xA2C9             ADR.N    R2,??DebugOLEDUpdate_57+0x30  ;; "xPo"
   \   0000190E   0x2106             MOVS     R1,#+6
   \   00001910   0x204C             MOVS     R0,#+76
   \   00001912   0x.... 0x....      BL       LCD_P6x8Str
   2497                LCD_P6x8Str(76, 7, "xZi");
   \   00001916   0xA2C8             ADR.N    R2,??DebugOLEDUpdate_57+0x34  ;; "xZi"
   \   00001918   0x2107             MOVS     R1,#+7
   \   0000191A   0x204C             MOVS     R0,#+76
   \   0000191C   0x.... 0x....      BL       LCD_P6x8Str
   2498                //15个参数值的显示。
   2499                LCD_P6x8Str(36, 1, tempVal[0+15]);
   \   00001920   0xAA2C             ADD      R2,SP,#+176
   \   00001922   0x2101             MOVS     R1,#+1
   \   00001924   0x2024             MOVS     R0,#+36
   \   00001926   0x.... 0x....      BL       LCD_P6x8Str
   2500                LCD_P6x8Str(36, 2, tempVal[1+15]);
   \   0000192A   0xAA2D             ADD      R2,SP,#+180
   \   0000192C   0x2102             MOVS     R1,#+2
   \   0000192E   0x2024             MOVS     R0,#+36
   \   00001930   0x.... 0x....      BL       LCD_P6x8Str
   2501                LCD_P6x8Str(36, 3, tempVal[2+15]);
   \   00001934   0xAA2E             ADD      R2,SP,#+184
   \   00001936   0x2103             MOVS     R1,#+3
   \   00001938   0x2024             MOVS     R0,#+36
   \   0000193A   0x.... 0x....      BL       LCD_P6x8Str
   2502                LCD_P6x8Str(36, 4, tempVal[3+15]);
   \   0000193E   0xAA2F             ADD      R2,SP,#+188
   \   00001940   0x2104             MOVS     R1,#+4
   \   00001942   0x2024             MOVS     R0,#+36
   \   00001944   0x.... 0x....      BL       LCD_P6x8Str
   2503                LCD_P6x8Str(36, 5, tempVal[4+15]);
   \   00001948   0xAA30             ADD      R2,SP,#+192
   \   0000194A   0x2105             MOVS     R1,#+5
   \   0000194C   0x2024             MOVS     R0,#+36
   \   0000194E   0x.... 0x....      BL       LCD_P6x8Str
   2504                LCD_P6x8Str(36, 6, tempVal[5+15]);
   \   00001952   0xAA31             ADD      R2,SP,#+196
   \   00001954   0x2106             MOVS     R1,#+6
   \   00001956   0x2024             MOVS     R0,#+36
   \   00001958   0x.... 0x....      BL       LCD_P6x8Str
   2505                LCD_P6x8Str(36, 7, tempVal[6+15]);
   \   0000195C   0xAA32             ADD      R2,SP,#+200
   \   0000195E   0x2107             MOVS     R1,#+7
   \   00001960   0x2024             MOVS     R0,#+36
   \   00001962   0x.... 0x....      BL       LCD_P6x8Str
   2506                LCD_P6x8Str(100, 0, tempVal[7+15]);
   \   00001966   0xAA33             ADD      R2,SP,#+204
   \   00001968   0x2100             MOVS     R1,#+0
   \   0000196A   0x2064             MOVS     R0,#+100
   \   0000196C   0x.... 0x....      BL       LCD_P6x8Str
   2507                LCD_P6x8Str(100, 1, tempVal[8+15]);
   \   00001970   0xAA34             ADD      R2,SP,#+208
   \   00001972   0x2101             MOVS     R1,#+1
   \   00001974   0x2064             MOVS     R0,#+100
   \   00001976   0x.... 0x....      BL       LCD_P6x8Str
   2508                LCD_P6x8Str(100, 2, tempVal[9+15]);
   \   0000197A   0xAA35             ADD      R2,SP,#+212
   \   0000197C   0x2102             MOVS     R1,#+2
   \   0000197E   0x2064             MOVS     R0,#+100
   \   00001980   0x.... 0x....      BL       LCD_P6x8Str
   2509                LCD_P6x8Str(100, 3, tempVal[10+15]);
   \   00001984   0xAA36             ADD      R2,SP,#+216
   \   00001986   0x2103             MOVS     R1,#+3
   \   00001988   0x2064             MOVS     R0,#+100
   \   0000198A   0x.... 0x....      BL       LCD_P6x8Str
   2510                LCD_P6x8Str(100, 4, tempVal[11+15]);
   \   0000198E   0xAA37             ADD      R2,SP,#+220
   \   00001990   0x2104             MOVS     R1,#+4
   \   00001992   0x2064             MOVS     R0,#+100
   \   00001994   0x.... 0x....      BL       LCD_P6x8Str
   2511                LCD_P6x8Str(100, 5, tempVal[12+15]);
   \   00001998   0xAA38             ADD      R2,SP,#+224
   \   0000199A   0x2105             MOVS     R1,#+5
   \   0000199C   0x2064             MOVS     R0,#+100
   \   0000199E   0x.... 0x....      BL       LCD_P6x8Str
   2512                LCD_P6x8Str(100, 6, tempVal[13+15]);
   \   000019A2   0xAA39             ADD      R2,SP,#+228
   \   000019A4   0x2106             MOVS     R1,#+6
   \   000019A6   0x2064             MOVS     R0,#+100
   \   000019A8   0x.... 0x....      BL       LCD_P6x8Str
   2513                LCD_P6x8Str(100, 7, tempVal[14+15]);  
   \   000019AC   0xAA3A             ADD      R2,SP,#+232
   \   000019AE   0x2107             MOVS     R1,#+7
   \   000019B0   0x2064             MOVS     R0,#+100
   \   000019B2   0x.... 0x....      BL       LCD_P6x8Str
   \   000019B6   0xE209             B.N      ??DebugOLEDUpdate_10
   \                     ??DebugOLEDUpdate_25:
   \   000019B8   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    
   \   000019BC   0x........         DC32     BlackRightLoc
   \   000019C0   0x53 0x50          DC8      "SPD"
   \              0x44 0x00    
   \   000019C4   0x4B 0x70          DC8      "Kp1"
   \              0x31 0x00    
   \   000019C8   0x4B 0x70          DC8      "Kp2"
   \              0x32 0x00    
   \   000019CC   0x4B 0x70          DC8      "Kp3"
   \              0x33 0x00    
   \   000019D0   0x4B 0x70          DC8      "Kp4"
   \              0x34 0x00    
   \   000019D4   0x4B 0x70          DC8      "Kp5"
   \              0x35 0x00    
   \   000019D8   0x4B 0x70          DC8      "Kp6"
   \              0x36 0x00    
   \   000019DC   0x4B 0x70          DC8      "Kp7"
   \              0x37 0x00    
   \   000019E0   0x4B 0x70          DC8      "Kp0"
   \              0x30 0x00    
   \   000019E4   0x4D 0x74          DC8      "MtI"
   \              0x49 0x00    
   \   000019E8   0x4D 0x74          DC8      "MtP"
   \              0x50 0x00    
   \   000019EC   0x4D 0x74          DC8      "Mt5"
   \              0x35 0x00    
   \   000019F0   0x4D 0x74          DC8      "Mt4"
   \              0x34 0x00    
   \   000019F4   0x4D 0x74          DC8      "Mt3"
   \              0x33 0x00    
   \   000019F8   0x4D 0x74          DC8      "Mt2"
   \              0x32 0x00    
   \   000019FC   0x4D 0x5F          DC8      "M_1"
   \              0x31 0x00    
   \   00001A00   0x4D 0x74          DC8      "Mt1"
   \              0x31 0x00    
   2514              }
   2515              //当前是第2页。
   2516              else if(DebugModifyPage == 2)
   \                     ??DebugOLEDUpdate_52: (+1)
   \   00001A04   0x.... 0x....      LDR.W    R0,??DataTable9_20
   \   00001A08   0x7800             LDRB     R0,[R0, #+0]
   \   00001A0A   0x2802             CMP      R0,#+2
   \   00001A0C   0xF040 0x80DD      BNE.W    ??DebugOLEDUpdate_58
   2517              {
   2518                //第2页的标题。
   2519                LCD_P6x8Str(0, 0, "M_2");
   \   00001A10   0xA28A             ADR.N    R2,??DebugOLEDUpdate_57+0x38  ;; "M_2"
   \   00001A12   0x2100             MOVS     R1,#+0
   \   00001A14   0x2000             MOVS     R0,#+0
   \   00001A16   0x.... 0x....      BL       LCD_P6x8Str
   2520                //修改标志。
   2521                if(DebugModifyFlag == 1)
   \   00001A1A   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00001A1E   0x7800             LDRB     R0,[R0, #+0]
   \   00001A20   0x2801             CMP      R0,#+1
   \   00001A22   0xD105             BNE.N    ??DebugOLEDUpdate_59
   2522                {
   2523                  LCD_P6x8Str(24, 0, "@");
   \   00001A24   0xA286             ADR.N    R2,??DebugOLEDUpdate_57+0x3C  ;; "@"
   \   00001A26   0x2100             MOVS     R1,#+0
   \   00001A28   0x2018             MOVS     R0,#+24
   \   00001A2A   0x.... 0x....      BL       LCD_P6x8Str
   \   00001A2E   0xE004             B.N      ??DebugOLEDUpdate_60
   2524                }
   2525                else
   2526                {
   2527                  LCD_P6x8Str(24, 0, " ");
   \                     ??DebugOLEDUpdate_59: (+1)
   \   00001A30   0xA284             ADR.N    R2,??DebugOLEDUpdate_57+0x40  ;; " "
   \   00001A32   0x2100             MOVS     R1,#+0
   \   00001A34   0x2018             MOVS     R0,#+24
   \   00001A36   0x.... 0x....      BL       LCD_P6x8Str
   2528                }
   2529                
   2530                //光标的标注。
   2531                DebugModifyCursorMark();
   \                     ??DebugOLEDUpdate_60: (+1)
   \   00001A3A   0x.... 0x....      BL       DebugModifyCursorMark
   2532                
   2533                //15个参数的计算。
   2534                for(i = 30; i <= 44; i++)
   \   00001A3E   0x241E             MOVS     R4,#+30
   \   00001A40   0xE029             B.N      ??DebugOLEDUpdate_61
   2535                {
   2536                  temp = DebugModifyNum[i];
   \                     ??DebugOLEDUpdate_62: (+1)
   \   00001A42   0x.... 0x....      LDR.W    R0,??DataTable9_22
   \   00001A46   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001A48   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   2537                  tempVal[i][0] = temp / 100 + 48;
   \   00001A4C   0x2164             MOVS     R1,#+100
   \   00001A4E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001A52   0x3130             ADDS     R1,R1,#+48
   \   00001A54   0xAA1D             ADD      R2,SP,#+116
   \   00001A56   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001A58   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2538                  tempVal[i][1] = (temp % 100) / 10 + 48;
   \   00001A5C   0x2164             MOVS     R1,#+100
   \   00001A5E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001A62   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001A66   0x220A             MOVS     R2,#+10
   \   00001A68   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00001A6C   0x3130             ADDS     R1,R1,#+48
   \   00001A6E   0xAA1D             ADD      R2,SP,#+116
   \   00001A70   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001A72   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001A76   0x7051             STRB     R1,[R2, #+1]
   2539                  tempVal[i][2] = (temp % 10) / 1 + 48;        
   \   00001A78   0x210A             MOVS     R1,#+10
   \   00001A7A   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001A7E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001A82   0x2101             MOVS     R1,#+1
   \   00001A84   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00001A88   0x3030             ADDS     R0,R0,#+48
   \   00001A8A   0xA91D             ADD      R1,SP,#+116
   \   00001A8C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001A8E   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001A92   0x7088             STRB     R0,[R1, #+2]
   2540                }
   \   00001A94   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_61: (+1)
   \   00001A96   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001A98   0x2C2D             CMP      R4,#+45
   \   00001A9A   0xDBD2             BLT.N    ??DebugOLEDUpdate_62
   2541                //15个参数名字的显示。
   2542                LCD_P6x8Str(12, 1, "C33");
   \   00001A9C   0x....             ADR.N    R2,??DataTable8  ;; "C33"
   \   00001A9E   0x2101             MOVS     R1,#+1
   \   00001AA0   0x200C             MOVS     R0,#+12
   \   00001AA2   0x.... 0x....      BL       LCD_P6x8Str
   2543                LCD_P6x8Str(12, 2, "C04");
   \   00001AA6   0x....             ADR.N    R2,??DataTable8_1  ;; "C04"
   \   00001AA8   0x2102             MOVS     R1,#+2
   \   00001AAA   0x200C             MOVS     R0,#+12
   \   00001AAC   0x.... 0x....      BL       LCD_P6x8Str
   2544                LCD_P6x8Str(12, 3, "C14");
   \   00001AB0   0x....             ADR.N    R2,??DataTable8_2  ;; "C14"
   \   00001AB2   0x2103             MOVS     R1,#+3
   \   00001AB4   0x200C             MOVS     R0,#+12
   \   00001AB6   0x.... 0x....      BL       LCD_P6x8Str
   2545                LCD_P6x8Str(12, 4, "C24");
   \   00001ABA   0x....             ADR.N    R2,??DataTable8_3  ;; "C24"
   \   00001ABC   0x2104             MOVS     R1,#+4
   \   00001ABE   0x200C             MOVS     R0,#+12
   \   00001AC0   0x.... 0x....      BL       LCD_P6x8Str
   2546                LCD_P6x8Str(12, 5, "C34");
   \   00001AC4   0x....             ADR.N    R2,??DataTable8_4  ;; "C34"
   \   00001AC6   0x2105             MOVS     R1,#+5
   \   00001AC8   0x200C             MOVS     R0,#+12
   \   00001ACA   0x.... 0x....      BL       LCD_P6x8Str
   2547                LCD_P6x8Str(12, 6, "C05");
   \   00001ACE   0x....             ADR.N    R2,??DataTable8_5  ;; "C05"
   \   00001AD0   0x2106             MOVS     R1,#+6
   \   00001AD2   0x200C             MOVS     R0,#+12
   \   00001AD4   0x.... 0x....      BL       LCD_P6x8Str
   2548                LCD_P6x8Str(12, 7, "C15");
   \   00001AD8   0x....             ADR.N    R2,??DataTable8_6  ;; "C15"
   \   00001ADA   0x2107             MOVS     R1,#+7
   \   00001ADC   0x200C             MOVS     R0,#+12
   \   00001ADE   0x.... 0x....      BL       LCD_P6x8Str
   2549                LCD_P6x8Str(76, 0, "C25");
   \   00001AE2   0x....             ADR.N    R2,??DataTable8_7  ;; "C25"
   \   00001AE4   0x2100             MOVS     R1,#+0
   \   00001AE6   0x204C             MOVS     R0,#+76
   \   00001AE8   0x.... 0x....      BL       LCD_P6x8Str
   2550                LCD_P6x8Str(76, 1, "C35");
   \   00001AEC   0x....             ADR.N    R2,??DataTable7  ;; "C35"
   \   00001AEE   0x2101             MOVS     R1,#+1
   \   00001AF0   0x204C             MOVS     R0,#+76
   \   00001AF2   0x.... 0x....      BL       LCD_P6x8Str
   2551                LCD_P6x8Str(76, 2, "C06");
   \   00001AF6   0x....             ADR.N    R2,??DataTable7_1  ;; "C06"
   \   00001AF8   0x2102             MOVS     R1,#+2
   \   00001AFA   0x204C             MOVS     R0,#+76
   \   00001AFC   0x.... 0x....      BL       LCD_P6x8Str
   2552                LCD_P6x8Str(76, 3, "C16");
   \   00001B00   0x....             ADR.N    R2,??DataTable7_2  ;; "C16"
   \   00001B02   0x2103             MOVS     R1,#+3
   \   00001B04   0x204C             MOVS     R0,#+76
   \   00001B06   0x.... 0x....      BL       LCD_P6x8Str
   2553                LCD_P6x8Str(76, 4, "C26");
   \   00001B0A   0x....             ADR.N    R2,??DataTable7_3  ;; "C26"
   \   00001B0C   0x2104             MOVS     R1,#+4
   \   00001B0E   0x204C             MOVS     R0,#+76
   \   00001B10   0x.... 0x....      BL       LCD_P6x8Str
   2554                LCD_P6x8Str(76, 5, "C36");
   \   00001B14   0x....             ADR.N    R2,??DataTable7_4  ;; "C36"
   \   00001B16   0x2105             MOVS     R1,#+5
   \   00001B18   0x204C             MOVS     R0,#+76
   \   00001B1A   0x.... 0x....      BL       LCD_P6x8Str
   2555                LCD_P6x8Str(76, 6, "C07");
   \   00001B1E   0x....             ADR.N    R2,??DataTable7_5  ;; "C07"
   \   00001B20   0x2106             MOVS     R1,#+6
   \   00001B22   0x204C             MOVS     R0,#+76
   \   00001B24   0x.... 0x....      BL       LCD_P6x8Str
   2556                LCD_P6x8Str(76, 7, "C17");
   \   00001B28   0x....             ADR.N    R2,??DataTable7_7  ;; "C17"
   \   00001B2A   0x2107             MOVS     R1,#+7
   \   00001B2C   0x204C             MOVS     R0,#+76
   \   00001B2E   0x.... 0x....      BL       LCD_P6x8Str
   2557                //15个参数值的显示。
   2558                LCD_P6x8Str(36, 1, tempVal[0+30]);
   \   00001B32   0xAA3B             ADD      R2,SP,#+236
   \   00001B34   0x2101             MOVS     R1,#+1
   \   00001B36   0x2024             MOVS     R0,#+36
   \   00001B38   0x.... 0x....      BL       LCD_P6x8Str
   2559                LCD_P6x8Str(36, 2, tempVal[1+30]);
   \   00001B3C   0xAA3C             ADD      R2,SP,#+240
   \   00001B3E   0x2102             MOVS     R1,#+2
   \   00001B40   0x2024             MOVS     R0,#+36
   \   00001B42   0x.... 0x....      BL       LCD_P6x8Str
   2560                LCD_P6x8Str(36, 3, tempVal[2+30]);
   \   00001B46   0xAA3D             ADD      R2,SP,#+244
   \   00001B48   0x2103             MOVS     R1,#+3
   \   00001B4A   0x2024             MOVS     R0,#+36
   \   00001B4C   0x.... 0x....      BL       LCD_P6x8Str
   2561                LCD_P6x8Str(36, 4, tempVal[3+30]);
   \   00001B50   0xAA3E             ADD      R2,SP,#+248
   \   00001B52   0x2104             MOVS     R1,#+4
   \   00001B54   0x2024             MOVS     R0,#+36
   \   00001B56   0x.... 0x....      BL       LCD_P6x8Str
   2562                LCD_P6x8Str(36, 5, tempVal[4+30]);
   \   00001B5A   0xAA3F             ADD      R2,SP,#+252
   \   00001B5C   0x2105             MOVS     R1,#+5
   \   00001B5E   0x2024             MOVS     R0,#+36
   \   00001B60   0x.... 0x....      BL       LCD_P6x8Str
   2563                LCD_P6x8Str(36, 6, tempVal[5+30]);
   \   00001B64   0xAA40             ADD      R2,SP,#+256
   \   00001B66   0x2106             MOVS     R1,#+6
   \   00001B68   0x2024             MOVS     R0,#+36
   \   00001B6A   0x.... 0x....      BL       LCD_P6x8Str
   2564                LCD_P6x8Str(36, 7, tempVal[6+30]);
   \   00001B6E   0xAA41             ADD      R2,SP,#+260
   \   00001B70   0x2107             MOVS     R1,#+7
   \   00001B72   0x2024             MOVS     R0,#+36
   \   00001B74   0x.... 0x....      BL       LCD_P6x8Str
   2565                LCD_P6x8Str(100, 0, tempVal[7+30]);
   \   00001B78   0xAA42             ADD      R2,SP,#+264
   \   00001B7A   0x2100             MOVS     R1,#+0
   \   00001B7C   0x2064             MOVS     R0,#+100
   \   00001B7E   0x.... 0x....      BL       LCD_P6x8Str
   2566                LCD_P6x8Str(100, 1, tempVal[8+30]);
   \   00001B82   0xAA43             ADD      R2,SP,#+268
   \   00001B84   0x2101             MOVS     R1,#+1
   \   00001B86   0x2064             MOVS     R0,#+100
   \   00001B88   0x.... 0x....      BL       LCD_P6x8Str
   2567                LCD_P6x8Str(100, 2, tempVal[9+30]);
   \   00001B8C   0xAA44             ADD      R2,SP,#+272
   \   00001B8E   0x2102             MOVS     R1,#+2
   \   00001B90   0x2064             MOVS     R0,#+100
   \   00001B92   0x.... 0x....      BL       LCD_P6x8Str
   2568                LCD_P6x8Str(100, 3, tempVal[10+30]);
   \   00001B96   0xAA45             ADD      R2,SP,#+276
   \   00001B98   0x2103             MOVS     R1,#+3
   \   00001B9A   0x2064             MOVS     R0,#+100
   \   00001B9C   0x.... 0x....      BL       LCD_P6x8Str
   2569                LCD_P6x8Str(100, 4, tempVal[11+30]);
   \   00001BA0   0xAA46             ADD      R2,SP,#+280
   \   00001BA2   0x2104             MOVS     R1,#+4
   \   00001BA4   0x2064             MOVS     R0,#+100
   \   00001BA6   0x.... 0x....      BL       LCD_P6x8Str
   2570                LCD_P6x8Str(100, 5, tempVal[12+30]);
   \   00001BAA   0xAA47             ADD      R2,SP,#+284
   \   00001BAC   0x2105             MOVS     R1,#+5
   \   00001BAE   0x2064             MOVS     R0,#+100
   \   00001BB0   0x.... 0x....      BL       LCD_P6x8Str
   2571                LCD_P6x8Str(100, 6, tempVal[13+30]);
   \   00001BB4   0xAA48             ADD      R2,SP,#+288
   \   00001BB6   0x2106             MOVS     R1,#+6
   \   00001BB8   0x2064             MOVS     R0,#+100
   \   00001BBA   0x.... 0x....      BL       LCD_P6x8Str
   2572                LCD_P6x8Str(100, 7, tempVal[14+30]);
   \   00001BBE   0xAA49             ADD      R2,SP,#+292
   \   00001BC0   0x2107             MOVS     R1,#+7
   \   00001BC2   0x2064             MOVS     R0,#+100
   \   00001BC4   0x.... 0x....      BL       LCD_P6x8Str
   \   00001BC8   0xE100             B.N      ??DebugOLEDUpdate_10
   2573              }
   2574              //当前是第3页。
   2575              else if(DebugModifyPage == 3)
   \                     ??DebugOLEDUpdate_58: (+1)
   \   00001BCA   0x....             LDR.N    R0,??DataTable9_20
   \   00001BCC   0x7800             LDRB     R0,[R0, #+0]
   \   00001BCE   0x2803             CMP      R0,#+3
   \   00001BD0   0xF040 0x80FC      BNE.W    ??DebugOLEDUpdate_10
   2576              {
   2577                //第2页的标题。
   2578                LCD_P6x8Str(0, 0, "M_2");
   \   00001BD4   0xA219             ADR.N    R2,??DebugOLEDUpdate_57+0x38  ;; "M_2"
   \   00001BD6   0x2100             MOVS     R1,#+0
   \   00001BD8   0x2000             MOVS     R0,#+0
   \   00001BDA   0x.... 0x....      BL       LCD_P6x8Str
   2579                //修改标志。
   2580                if(DebugModifyFlag == 1)
   \   00001BDE   0x....             LDR.N    R0,??DataTable9_21
   \   00001BE0   0x7800             LDRB     R0,[R0, #+0]
   \   00001BE2   0x2801             CMP      R0,#+1
   \   00001BE4   0xD105             BNE.N    ??DebugOLEDUpdate_63
   2581                {
   2582                  LCD_P6x8Str(24, 0, "@");
   \   00001BE6   0xA216             ADR.N    R2,??DebugOLEDUpdate_57+0x3C  ;; "@"
   \   00001BE8   0x2100             MOVS     R1,#+0
   \   00001BEA   0x2018             MOVS     R0,#+24
   \   00001BEC   0x.... 0x....      BL       LCD_P6x8Str
   \   00001BF0   0xE004             B.N      ??DebugOLEDUpdate_64
   2583                }
   2584                else
   2585                {
   2586                  LCD_P6x8Str(24, 0, " ");
   \                     ??DebugOLEDUpdate_63: (+1)
   \   00001BF2   0xA214             ADR.N    R2,??DebugOLEDUpdate_57+0x40  ;; " "
   \   00001BF4   0x2100             MOVS     R1,#+0
   \   00001BF6   0x2018             MOVS     R0,#+24
   \   00001BF8   0x.... 0x....      BL       LCD_P6x8Str
   2587                }
   2588                
   2589                //光标的标注。
   2590                DebugModifyCursorMark();
   \                     ??DebugOLEDUpdate_64: (+1)
   \   00001BFC   0x.... 0x....      BL       DebugModifyCursorMark
   2591                
   2592                //15个参数的计算。
   2593                for(i = 45; i <= 59; i++)
   \   00001C00   0x242D             MOVS     R4,#+45
   \   00001C02   0xE04A             B.N      ??DebugOLEDUpdate_65
   \                     ??DebugOLEDUpdate_57:
   \   00001C04   0x4D 0x74          DC8      "Mt0"
   \              0x30 0x00    
   \   00001C08   0x42 0x63          DC8      "Bci"
   \              0x69 0x00    
   \   00001C0C   0x42 0x78          DC8      "Bxu"
   \              0x75 0x00    
   \   00001C10   0x57 0x42          DC8      "WBi"
   \              0x69 0x00    
   \   00001C14   0x57 0x42          DC8      "WBa"
   \              0x61 0x00    
   \   00001C18   0x57 0x69          DC8      "Win"
   \              0x6E 0x00    
   \   00001C1C   0x57 0x61          DC8      "Wax"
   \              0x78 0x00    
   \   00001C20   0x42 0x69          DC8      "Bin"
   \              0x6E 0x00    
   \   00001C24   0x42 0x61          DC8      "Bax"
   \              0x78 0x00    
   \   00001C28   0x5A 0x68          DC8      "Zhi"
   \              0x69 0x00    
   \   00001C2C   0x5A 0x68          DC8      "Zha"
   \              0x61 0x00    
   \   00001C30   0x73 0x50          DC8      "sPo"
   \              0x6F 0x00    
   \   00001C34   0x78 0x50          DC8      "xPo"
   \              0x6F 0x00    
   \   00001C38   0x78 0x5A          DC8      "xZi"
   \              0x69 0x00    
   \   00001C3C   0x4D 0x5F          DC8      "M_2"
   \              0x32 0x00    
   \   00001C40   0x40 0x00          DC8      "@",0x0,0x0
   \              0x00 0x00    
   \   00001C44   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    
   2594                {
   2595                  temp = DebugModifyNum[i];
   \                     ??DebugOLEDUpdate_66: (+1)
   \   00001C48   0x....             LDR.N    R0,??DataTable9_22
   \   00001C4A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001C4C   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   2596                  tempVal[i][0] = temp / 100 + 48;
   \   00001C50   0x2164             MOVS     R1,#+100
   \   00001C52   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00001C56   0x3130             ADDS     R1,R1,#+48
   \   00001C58   0xAA1D             ADD      R2,SP,#+116
   \   00001C5A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001C5C   0xF802 0x1024      STRB     R1,[R2, R4, LSL #+2]
   2597                  tempVal[i][1] = (temp % 100) / 10 + 48;
   \   00001C60   0x2164             MOVS     R1,#+100
   \   00001C62   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001C66   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00001C6A   0x220A             MOVS     R2,#+10
   \   00001C6C   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   00001C70   0x3130             ADDS     R1,R1,#+48
   \   00001C72   0xAA1D             ADD      R2,SP,#+116
   \   00001C74   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001C76   0xEB12 0x0284      ADDS     R2,R2,R4, LSL #+2
   \   00001C7A   0x7051             STRB     R1,[R2, #+1]
   2598                  tempVal[i][2] = (temp % 10) / 1 + 48;        
   \   00001C7C   0x210A             MOVS     R1,#+10
   \   00001C7E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001C82   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001C86   0x2101             MOVS     R1,#+1
   \   00001C88   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00001C8C   0x3030             ADDS     R0,R0,#+48
   \   00001C8E   0xA91D             ADD      R1,SP,#+116
   \   00001C90   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001C92   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00001C96   0x7088             STRB     R0,[R1, #+2]
   2599                }
   \   00001C98   0x1C64             ADDS     R4,R4,#+1
   \                     ??DebugOLEDUpdate_65: (+1)
   \   00001C9A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001C9C   0x2C3C             CMP      R4,#+60
   \   00001C9E   0xDBD3             BLT.N    ??DebugOLEDUpdate_66
   2600                //15个参数名字的显示。
   2601                LCD_P6x8Str(12, 1, "C27");
   \   00001CA0   0x....             ADR.N    R2,??DataTable9  ;; "C27"
   \   00001CA2   0x2101             MOVS     R1,#+1
   \   00001CA4   0x200C             MOVS     R0,#+12
   \   00001CA6   0x.... 0x....      BL       LCD_P6x8Str
   2602                LCD_P6x8Str(12, 2, "C37");
   \   00001CAA   0x....             ADR.N    R2,??DataTable9_1  ;; "C37"
   \   00001CAC   0x2102             MOVS     R1,#+2
   \   00001CAE   0x200C             MOVS     R0,#+12
   \   00001CB0   0x.... 0x....      BL       LCD_P6x8Str
   2603                LCD_P6x8Str(12, 3, "Tim");
   \   00001CB4   0x....             ADR.N    R2,??DataTable9_2  ;; "Tim"
   \   00001CB6   0x2103             MOVS     R1,#+3
   \   00001CB8   0x200C             MOVS     R0,#+12
   \   00001CBA   0x.... 0x....      BL       LCD_P6x8Str
   2604                LCD_P6x8Str(12, 4, "MoP");
   \   00001CBE   0x....             ADR.N    R2,??DataTable9_3  ;; "MoP"
   \   00001CC0   0x2104             MOVS     R1,#+4
   \   00001CC2   0x200C             MOVS     R0,#+12
   \   00001CC4   0x.... 0x....      BL       LCD_P6x8Str
   2605                LCD_P6x8Str(12, 5, "MoD");
   \   00001CC8   0x....             ADR.N    R2,??DataTable9_4  ;; "MoD"
   \   00001CCA   0x2105             MOVS     R1,#+5
   \   00001CCC   0x200C             MOVS     R0,#+12
   \   00001CCE   0x.... 0x....      BL       LCD_P6x8Str
   2606                LCD_P6x8Str(12, 6, "STG");
   \   00001CD2   0x....             ADR.N    R2,??DataTable9_5  ;; "STG"
   \   00001CD4   0x2106             MOVS     R1,#+6
   \   00001CD6   0x200C             MOVS     R0,#+12
   \   00001CD8   0x.... 0x....      BL       LCD_P6x8Str
   2607                LCD_P6x8Str(12, 7, "STA");
   \   00001CDC   0x....             ADR.N    R2,??DataTable9_6  ;; "STA"
   \   00001CDE   0x2107             MOVS     R1,#+7
   \   00001CE0   0x200C             MOVS     R0,#+12
   \   00001CE2   0x.... 0x....      BL       LCD_P6x8Str
   2608                LCD_P6x8Str(76, 0, "STL");
   \   00001CE6   0x....             ADR.N    R2,??DataTable9_7  ;; "STL"
   \   00001CE8   0x2100             MOVS     R1,#+0
   \   00001CEA   0x204C             MOVS     R0,#+76
   \   00001CEC   0x.... 0x....      BL       LCD_P6x8Str
   2609                LCD_P6x8Str(76, 1, "Kd1");
   \   00001CF0   0x....             ADR.N    R2,??DataTable9_8  ;; "Kd1"
   \   00001CF2   0x2101             MOVS     R1,#+1
   \   00001CF4   0x204C             MOVS     R0,#+76
   \   00001CF6   0x.... 0x....      BL       LCD_P6x8Str
   2610                LCD_P6x8Str(76, 2, "Kd2");
   \   00001CFA   0x....             ADR.N    R2,??DataTable9_9  ;; "Kd2"
   \   00001CFC   0x2102             MOVS     R1,#+2
   \   00001CFE   0x204C             MOVS     R0,#+76
   \   00001D00   0x.... 0x....      BL       LCD_P6x8Str
   2611                LCD_P6x8Str(76, 3, "Kd3");
   \   00001D04   0x....             ADR.N    R2,??DataTable9_10  ;; "Kd3"
   \   00001D06   0x2103             MOVS     R1,#+3
   \   00001D08   0x204C             MOVS     R0,#+76
   \   00001D0A   0x.... 0x....      BL       LCD_P6x8Str
   2612                LCD_P6x8Str(76, 4, "Kd4");
   \   00001D0E   0x....             ADR.N    R2,??DataTable9_11  ;; "Kd4"
   \   00001D10   0x2104             MOVS     R1,#+4
   \   00001D12   0x204C             MOVS     R0,#+76
   \   00001D14   0x.... 0x....      BL       LCD_P6x8Str
   2613                LCD_P6x8Str(76, 5, "Kd5");
   \   00001D18   0x....             ADR.N    R2,??DataTable9_12  ;; "Kd5"
   \   00001D1A   0x2105             MOVS     R1,#+5
   \   00001D1C   0x204C             MOVS     R0,#+76
   \   00001D1E   0x.... 0x....      BL       LCD_P6x8Str
   2614                LCD_P6x8Str(76, 6, "Kd6");
   \   00001D22   0x....             ADR.N    R2,??DataTable9_13  ;; "Kd6"
   \   00001D24   0x2106             MOVS     R1,#+6
   \   00001D26   0x204C             MOVS     R0,#+76
   \   00001D28   0x.... 0x....      BL       LCD_P6x8Str
   2615                LCD_P6x8Str(76, 7, "Kd7");
   \   00001D2C   0x....             ADR.N    R2,??DataTable9_14  ;; "Kd7"
   \   00001D2E   0x2107             MOVS     R1,#+7
   \   00001D30   0x204C             MOVS     R0,#+76
   \   00001D32   0x.... 0x....      BL       LCD_P6x8Str
   2616                //15个参数值的显示。
   2617                LCD_P6x8Str(36, 1, tempVal[0+45]);
   \   00001D36   0xAA4A             ADD      R2,SP,#+296
   \   00001D38   0x2101             MOVS     R1,#+1
   \   00001D3A   0x2024             MOVS     R0,#+36
   \   00001D3C   0x.... 0x....      BL       LCD_P6x8Str
   2618                LCD_P6x8Str(36, 2, tempVal[1+45]);
   \   00001D40   0xAA4B             ADD      R2,SP,#+300
   \   00001D42   0x2102             MOVS     R1,#+2
   \   00001D44   0x2024             MOVS     R0,#+36
   \   00001D46   0x.... 0x....      BL       LCD_P6x8Str
   2619                LCD_P6x8Str(36, 3, tempVal[2+45]);
   \   00001D4A   0xAA4C             ADD      R2,SP,#+304
   \   00001D4C   0x2103             MOVS     R1,#+3
   \   00001D4E   0x2024             MOVS     R0,#+36
   \   00001D50   0x.... 0x....      BL       LCD_P6x8Str
   2620                LCD_P6x8Str(36, 4, tempVal[3+45]);
   \   00001D54   0xAA4D             ADD      R2,SP,#+308
   \   00001D56   0x2104             MOVS     R1,#+4
   \   00001D58   0x2024             MOVS     R0,#+36
   \   00001D5A   0x.... 0x....      BL       LCD_P6x8Str
   2621                LCD_P6x8Str(36, 5, tempVal[4+45]);
   \   00001D5E   0xAA4E             ADD      R2,SP,#+312
   \   00001D60   0x2105             MOVS     R1,#+5
   \   00001D62   0x2024             MOVS     R0,#+36
   \   00001D64   0x.... 0x....      BL       LCD_P6x8Str
   2622                LCD_P6x8Str(36, 6, tempVal[5+45]);
   \   00001D68   0xAA4F             ADD      R2,SP,#+316
   \   00001D6A   0x2106             MOVS     R1,#+6
   \   00001D6C   0x2024             MOVS     R0,#+36
   \   00001D6E   0x.... 0x....      BL       LCD_P6x8Str
   2623                LCD_P6x8Str(36, 7, tempVal[6+45]);
   \   00001D72   0xAA50             ADD      R2,SP,#+320
   \   00001D74   0x2107             MOVS     R1,#+7
   \   00001D76   0x2024             MOVS     R0,#+36
   \   00001D78   0x.... 0x....      BL       LCD_P6x8Str
   2624                LCD_P6x8Str(100, 0, tempVal[7+45]);
   \   00001D7C   0xAA51             ADD      R2,SP,#+324
   \   00001D7E   0x2100             MOVS     R1,#+0
   \   00001D80   0x2064             MOVS     R0,#+100
   \   00001D82   0x.... 0x....      BL       LCD_P6x8Str
   2625                LCD_P6x8Str(100, 1, tempVal[8+45]);
   \   00001D86   0xAA52             ADD      R2,SP,#+328
   \   00001D88   0x2101             MOVS     R1,#+1
   \   00001D8A   0x2064             MOVS     R0,#+100
   \   00001D8C   0x.... 0x....      BL       LCD_P6x8Str
   2626                LCD_P6x8Str(100, 2, tempVal[9+45]);
   \   00001D90   0xAA53             ADD      R2,SP,#+332
   \   00001D92   0x2102             MOVS     R1,#+2
   \   00001D94   0x2064             MOVS     R0,#+100
   \   00001D96   0x.... 0x....      BL       LCD_P6x8Str
   2627                LCD_P6x8Str(100, 3, tempVal[10+45]);
   \   00001D9A   0xAA54             ADD      R2,SP,#+336
   \   00001D9C   0x2103             MOVS     R1,#+3
   \   00001D9E   0x2064             MOVS     R0,#+100
   \   00001DA0   0x.... 0x....      BL       LCD_P6x8Str
   2628                LCD_P6x8Str(100, 4, tempVal[11+45]);
   \   00001DA4   0xAA55             ADD      R2,SP,#+340
   \   00001DA6   0x2104             MOVS     R1,#+4
   \   00001DA8   0x2064             MOVS     R0,#+100
   \   00001DAA   0x.... 0x....      BL       LCD_P6x8Str
   2629                LCD_P6x8Str(100, 5, tempVal[12+45]);
   \   00001DAE   0xAA56             ADD      R2,SP,#+344
   \   00001DB0   0x2105             MOVS     R1,#+5
   \   00001DB2   0x2064             MOVS     R0,#+100
   \   00001DB4   0x.... 0x....      BL       LCD_P6x8Str
   2630                LCD_P6x8Str(100, 6, tempVal[13+45]);
   \   00001DB8   0xAA57             ADD      R2,SP,#+348
   \   00001DBA   0x2106             MOVS     R1,#+6
   \   00001DBC   0x2064             MOVS     R0,#+100
   \   00001DBE   0x.... 0x....      BL       LCD_P6x8Str
   2631                LCD_P6x8Str(100, 7, tempVal[14+45]);
   \   00001DC2   0xAA58             ADD      R2,SP,#+352
   \   00001DC4   0x2107             MOVS     R1,#+7
   \   00001DC6   0x2064             MOVS     R0,#+100
   \   00001DC8   0x.... 0x....      BL       LCD_P6x8Str
   2632              }
   2633              else
   2634              {
   2635              }
   2636            }
   2637            return 1;
   \                     ??DebugOLEDUpdate_10: (+1)
   \   00001DCC   0x2001             MOVS     R0,#+1
   \   00001DCE   0xF50D 0x6DE2      ADD      SP,SP,#+1808
   \   00001DD2   0xBD70             POP      {R4-R6,PC}       ;; return
   2638          }
   2639          
   2640          
   2641          
   2642          //Debug调试函数。

   \                                 In section .text, align 2, keep-with-next
   2643          uint8 DebugDebug(void)
   2644          {
   \                     DebugDebug: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2645            
   2646            //1. 拨码开关扫描，里面会对DebugSwitchFlag[]标志进行更新。
   2647            DebugSwitchScan();
   \   00000002   0x.... 0x....      BL       DebugSwitchScan
   2648            
   2649            //2. 按键扫描。里面会对DebugButtonFlag[]标志进行更新。返回确认后的按键值。
   2650            if(DebugButtonScan() == 1)
   \   00000006   0x.... 0x....      BL       DebugButtonScan
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD101             BNE.N    ??DebugDebug_0
   2651            {
   2652              //有某个键被按下。
   2653              //3. 按键信息处理
   2654              DebugButtonDeal();
   \   0000000E   0x.... 0x....      BL       DebugButtonDeal
   2655            }
   2656            else
   2657            {
   2658              //没有键被按下，可以不进行第3步操作。
   2659            }
   2660            
   2661            DebugOLEDUpdateCount++;
   \                     ??DebugDebug_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable9_23
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable9_23
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
   2662            if(DebugOLEDUpdateCount > DebugOLEDUpdateCountNum)
   \   0000001C   0x....             LDR.N    R0,??DataTable9_23
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2815             CMP      R0,#+21
   \   00000022   0xDB04             BLT.N    ??DebugDebug_1
   2663            {
   2664              DebugOLEDUpdateCount = 0;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable9_23
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   2665              //4. OLED屏显示信息刷新。刷新时不需要关中断，被打断不会影响它。
   2666              //DisableInterrupts;
   2667              DebugOLEDUpdate();
   \   0000002A   0x.... 0x....      BL       DebugOLEDUpdate
   2668              //EnableInterrupts;  
   2669            }
   2670            else
   2671            {    
   2672            }
   2673            
   2674            return 1;
   \                     ??DebugDebug_1: (+1)
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0xBD02             POP      {R1,PC}          ;; return
   2675          }
   2676          
   2677          
   2678          //将最后的值写入FLASH。

   \                                 In section .text, align 2, keep-with-next
   2679          uint8 FlashFinalWrite(void)
   2680          {
   \                     FlashFinalWrite: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2681            uint8 *pointeruint8;         //uint8型数据的指针。
   2682            uint8 i;
   2683            
   2684            //先擦除整个扇区。
   2685            FlashEraseSector(FlashSectorIndex);
   \   00000002   0x20E0             MOVS     R0,#+224
   \   00000004   0x.... 0x....      BL       FlashEraseSector
   2686            
   2687            for(i = 0; i < 60; i++)
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0xE00A             B.N      ??FlashFinalWrite_0
   2688            {
   2689              pointeruint8 = (uint8 *)&DebugModifyNum[i];
   \                     ??FlashFinalWrite_1: (+1)
   \   0000000C   0x....             LDR.N    R0,??DataTable9_22
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0xEB10 0x0344      ADDS     R3,R0,R4, LSL #+1
   2690              FlashWriteNow(FlashSectorIndex, i, FlashElementSize, pointeruint8);      
   \   00000014   0x2204             MOVS     R2,#+4
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x0021             MOVS     R1,R4
   \   0000001A   0x20E0             MOVS     R0,#+224
   \   0000001C   0x.... 0x....      BL       FlashWriteNow
   2691            }
   \   00000020   0x1C64             ADDS     R4,R4,#+1
   \                     ??FlashFinalWrite_0: (+1)
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2C3C             CMP      R4,#+60
   \   00000026   0xDBF1             BLT.N    ??FlashFinalWrite_1
   2692            
   2693            return 1;
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
   2694          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x400FF110         DC32     0x400ff110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     DebugSwitchFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     DebugButtonConfirmCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     DebugButtonFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     DebugModifyNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     speedOfCar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     Steer_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     SpeedPIDPVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     SpeedPIDDVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     SpeedTargetMat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     BrickConfirmMatLimit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     BrickConfirmFinalColCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     LimitLeftWBMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     LimitRightWBMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     LimitLeftWBMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     LimitRightWBMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     LimitLeftWMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     LimitRightWMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     LimitLeftWMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     LimitRightWMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     LimitLeftBMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     LimitRightBMin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     LimitLeftBMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     LimitRightBMax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     SpeedTargetValStraight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     SpeedBrick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     SpeedTargetValGryoUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x........         DC32     SpeedTargetValGryoResult

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x........         DC32     SpeedXiaoZhiDao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x........         DC32     limitStopLineBlackXiu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     ServoPIDDMat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     ServoPIDD2Mat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     limitStopLineBlackXiu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     ServoPIDDMat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     ServoPIDD2Mat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x23 0x00          DC8      "#",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     DebugModifyCursor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     DebugModifyNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     DebugModifyPage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     DebugScreenChosen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     DebugButtonFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     DebugDisplayPage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     DebugModifyFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     DebugModifyCursorPre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x43 0x33          DC8      "C35"
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x43 0x30          DC8      "C06"
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x43 0x31          DC8      "C16"
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x43 0x32          DC8      "C26"
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x43 0x33          DC8      "C36"
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x43 0x30          DC8      "C07"
   \              0x37 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     DebugDisplayPage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x43 0x31          DC8      "C17"
   \              0x37 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x43 0x33          DC8      "C33"
   \              0x33 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x43 0x30          DC8      "C04"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x43 0x31          DC8      "C14"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x43 0x32          DC8      "C24"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x43 0x33          DC8      "C34"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x43 0x30          DC8      "C05"
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x43 0x31          DC8      "C15"
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x43 0x32          DC8      "C25"
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x43 0x32          DC8      "C27"
   \              0x37 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x43 0x33          DC8      "C37"
   \              0x37 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x54 0x69          DC8      "Tim"
   \              0x6D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x4D 0x6F          DC8      "MoP"
   \              0x50 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x4D 0x6F          DC8      "MoD"
   \              0x44 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x53 0x54          DC8      "STG"
   \              0x47 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x53 0x54          DC8      "STA"
   \              0x41 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x53 0x54          DC8      "STL"
   \              0x4C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x4B 0x64          DC8      "Kd1"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x4B 0x64          DC8      "Kd2"
   \              0x32 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x4B 0x64          DC8      "Kd3"
   \              0x33 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x4B 0x64          DC8      "Kd4"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x4B 0x64          DC8      "Kd5"
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x4B 0x64          DC8      "Kd6"
   \              0x36 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x4B 0x64          DC8      "Kd7"
   \              0x37 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x........         DC32     BlackLeftLoc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x........         DC32     BlackLeftHeadLine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x........         DC32     BlackRightHeadLine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x........         DC32     BlackLeftEdgeStartCol

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x........         DC32     BlackRightEdgeStartCol

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x........         DC32     DebugModifyPage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x........         DC32     DebugModifyFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x........         DC32     DebugModifyNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x........         DC32     DebugOLEDUpdateCount

   \                                 In section .rodata, align 2
   \   00000000   0x23 0x00          DC8 "#"

   \                                 In section .rodata, align 2
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x5F          DC8 "D_0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x46          DC8 "DF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x44          DC8 "DD"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x31          DC8 "P1"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x32          DC8 "P2"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x33          DC8 "P3"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x34          DC8 "P4"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x35          DC8 "P5"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x36          DC8 "P6"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x37          DC8 "P7"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x53          DC8 "LS"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x53          DC8 "RS"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x53          DC8 "CS"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x48          DC8 "LH"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x48          DC8 "RH"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x5F          DC8 "D_1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x42          DC8 "LB"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 2
   \   00000000   0x43 0x00          DC8 "C"

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x57          DC8 "LW"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x5F          DC8 "D_2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x57          DC8 "RW"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x42          DC8 "RB"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x5F          DC8 "D_3"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "123"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "124"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "125"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "126"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "127"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x32          DC8 "128"
   \              0x38 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x5F          DC8 "M_0"
   \              0x30 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x40 0x00          DC8 "@"

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x50          DC8 "SPD"
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp3"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp4"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp5"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp6"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp7"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "MtI"
   \              0x49 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "MtP"
   \              0x50 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt5"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt4"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt3"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x5F          DC8 "M_1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x74          DC8 "Mt0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x63          DC8 "Bci"
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x78          DC8 "Bxu"
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x42          DC8 "WBi"
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x42          DC8 "WBa"
   \              0x61 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x69          DC8 "Win"
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x61          DC8 "Wax"
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x69          DC8 "Bin"
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x61          DC8 "Bax"
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x5A 0x68          DC8 "Zhi"
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x5A 0x68          DC8 "Zha"
   \              0x61 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x73 0x50          DC8 "sPo"
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x78 0x50          DC8 "xPo"
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x78 0x5A          DC8 "xZi"
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x5F          DC8 "M_2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x33          DC8 "C33"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x30          DC8 "C04"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x31          DC8 "C14"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x32          DC8 "C24"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x33          DC8 "C34"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x30          DC8 "C05"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x31          DC8 "C15"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x32          DC8 "C25"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x33          DC8 "C35"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x30          DC8 "C06"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x31          DC8 "C16"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x32          DC8 "C26"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x33          DC8 "C36"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x30          DC8 "C07"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x31          DC8 "C17"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x32          DC8 "C27"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x33          DC8 "C37"
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x54 0x69          DC8 "Tim"
   \              0x6D 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x6F          DC8 "MoP"
   \              0x50 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x6F          DC8 "MoD"
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x54          DC8 "STG"
   \              0x47 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x54          DC8 "STA"
   \              0x41 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x54          DC8 "STL"
   \              0x4C 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd3"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd4"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd5"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd6"
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd7"
   \              0x37 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DebugButtonDeal
         8   -> DebugModifyValue
         8   -> LCD_CLS
       0   DebugButtonScan
       8   DebugDebug
         8   -> DebugButtonDeal
         8   -> DebugButtonScan
         8   -> DebugOLEDUpdate
         8   -> DebugSwitchScan
       0   DebugDelay
       8   DebugInit
         8   -> DebugPortInit
         8   -> FlashInit
         8   -> LCD_Init
       8   DebugModifyCursorMark
         8   -> LCD_P6x8Str
       0   DebugModifyValue
    1824   DebugOLEDUpdate
      1824   -> DebugModifyCursorMark
      1824   -> Draw_BMP
      1824   -> LCD_P6x8Str
      1824   -> __aeabi_memclr4
       8   DebugPortInit
         8   -> gpio_init
       0   DebugSwitchScan
       8   FlashFinalWrite
         8   -> FlashEraseSector
         8   -> FlashWriteNow
       8   FlashInitRead
         8   -> FlashReadNow
       8   FlashReadNow
       8   FlashWriteNow
         8   -> FlashWrite


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
       2  ?_0
       2  ?_1
       8  ?_10
       4  ?_100
       4  ?_101
       4  ?_102
       4  ?_103
       4  ?_104
       4  ?_105
       4  ?_106
       4  ?_107
       4  ?_108
       4  ?_109
       8  ?_11
       4  ?_110
       4  ?_111
       4  ?_112
       4  ?_113
       4  ?_114
       8  ?_12
       8  ?_13
       8  ?_14
       8  ?_15
       4  ?_16
       4  ?_17
       4  ?_18
       4  ?_19
       8  ?_2
       4  ?_20
       4  ?_21
       4  ?_22
       4  ?_23
       4  ?_24
       4  ?_25
       4  ?_26
       4  ?_27
       4  ?_28
       4  ?_29
       8  ?_3
       4  ?_30
      72  ?_31
      72  ?_32
       4  ?_33
       4  ?_34
       2  ?_35
       4  ?_36
      72  ?_37
      72  ?_38
       4  ?_39
       8  ?_4
       4  ?_40
       4  ?_41
      72  ?_42
      72  ?_43
       4  ?_44
       4  ?_45
       4  ?_46
       4  ?_47
       4  ?_48
       4  ?_49
       8  ?_5
       4  ?_50
       4  ?_51
       2  ?_52
       4  ?_53
       4  ?_54
       4  ?_55
       4  ?_56
       4  ?_57
       4  ?_58
       4  ?_59
       8  ?_6
       4  ?_60
       4  ?_61
       4  ?_62
       4  ?_63
       4  ?_64
       4  ?_65
       4  ?_66
       4  ?_67
       4  ?_68
       4  ?_69
       8  ?_7
       4  ?_70
       4  ?_71
       4  ?_72
       4  ?_73
       4  ?_74
       4  ?_75
       4  ?_76
       4  ?_77
       4  ?_78
       4  ?_79
       8  ?_8
       4  ?_80
       4  ?_81
       4  ?_82
       4  ?_83
       4  ?_84
       4  ?_85
       4  ?_86
       4  ?_87
       4  ?_88
       4  ?_89
       8  ?_9
       4  ?_90
       4  ?_91
       4  ?_92
       4  ?_93
       4  ?_94
       4  ?_95
       4  ?_96
       4  ?_97
       4  ?_98
       4  ?_99
       8  DebugButtonConfirmCount
     566  DebugButtonDeal
       8  DebugButtonFlag
     462  DebugButtonScan
      50  DebugDebug
      32  DebugDelay
       1  DebugDisplayPage
      18  DebugInit
       1  DebugModifyCursor
     916  DebugModifyCursorMark
       1  DebugModifyCursorPre
       1  DebugModifyFlag
     120  DebugModifyNum
       1  DebugModifyPage
    4864  DebugModifyValue
    7636  DebugOLEDUpdate
       1  DebugOLEDUpdateCount
     146  DebugPortInit
       1  DebugScreenChosen
       4  DebugSwitchConfirmCount
       4  DebugSwitchFlag
     196  DebugSwitchScan
      44  FlashFinalWrite
     546  FlashInitRead
      70  FlashReadNow
      20  FlashWriteNow
       2  TimeRealRun
       1  TimeRealRunFlag

 
    151 bytes in section .bss
      3 bytes in section .data
    916 bytes in section .rodata
 15 910 bytes in section .text
 
 15 910 bytes of CODE  memory
    916 bytes of CONST memory
    154 bytes of DATA  memory

Errors: none
Warnings: none
