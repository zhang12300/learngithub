###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        14/Mar/2018  19:12:13
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\RunControl.c
#    Command line =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\RunControl.c
#        -D IAR -D TWR_K60N512 -lCN
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -lB
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\ -o
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Component_H\
#        -I E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Frame_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\Function_H\ -I
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\H\SD_H\ -Ol
#        --use_c++_inline
#    List file    =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\List\RunControl.lst
#    Object file  =  
#        E:\智能车\程序\下位机程序_摄像头1队3月9日\FLASH\Obj\RunControl.o
#
###############################################################################

E:\智能车\程序\下位机程序_摄像头1队3月9日\src\Sources\C\Function_C\RunControl.c
      1          /******************************************************************************/
      2          /*******************************************************************************
      3            文件名：运动控制C文件RunControl.c
      4            功  能：偏差求取，PID反馈，控制电机，控制舵机。
      5            日  期：2014.11.15
      6            作  者：YCR & HJZ
      7            备  注：
      8          *******************************************************************************/
      9          /******************************************************************************/
     10          #include "RunControl.h"
     11          
     12          

   \                                 In section .bss, align 1
     13          uint8 DuZhuanFlag = 0;              //堵转标志
   \                     DuZhuanFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     14          uint8 TimeOutFlag = 0;              //时间到标志
   \                     TimeOutFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     15          uint16 StopLineSpeed = 0;            //停车控制速度
   \                     StopLineSpeed:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     16          uint8 StopLineControlFlag = 0;             //停车控制标志
   \                     StopLineControlFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     17          uint8 StopLineSpeedControlPauseFlag = 0;          //停车的时候间隔一场图像的时间控一次，防止正反电压切换的时候出问题
   \                     StopLineSpeedControlPauseFlag:
   \   00000000                      DS8 1
     18          
     19          

   \                                 In section .data, align 2
     20          uint16 SpeedXiaoZhiDao = 280;       //小直道
   \                     SpeedXiaoZhiDao:
   \   00000000   0x0118             DC16 280

   \                                 In section .data, align 2
     21          uint16 SpeedTargetValGryoUp = 200;  //上坡速度。
   \                     SpeedTargetValGryoUp:
   \   00000000   0x00C8             DC16 200

   \                                 In section .data, align 2
     22          uint16 SpeedBrick = 200;            //障碍速度
   \                     SpeedBrick:
   \   00000000   0x00C8             DC16 200
     23          

   \                                 In section .bss, align 2
     24          uint16 StopFlagMaxCount = 0;      //停车标志置位后，停车计数，大于一定值后最终停车标志置位。
   \                     StopFlagMaxCount:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     25          uint16 StopFlagMaxCountNum = 5;      //停车标志置位后，停车计数阈值，大于该值后，最终停车标志置位。1个单位是0.1秒。 
   \                     StopFlagMaxCountNum:
   \   00000000   0x0005             DC16 5
     26          

   \                                 In section .bss, align 2
     27          uint16 SpeedStrategyChosen = 0;     //速度策略的档位，0~4，0档最慢，4档最快。
   \                     SpeedStrategyChosen:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     28          uint16 MotorTakeOffQuadCountLimit = 0; //起飞控制时，转为正常电机PID控制前两轮编码器需要达到的脉冲数。
   \                     MotorTakeOffQuadCountLimit:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     29          uint16 SpeedTargetValStraight = 350;      //长直道给定速度。
   \                     SpeedTargetValStraight:
   \   00000000   0x015E             DC16 350

   \                                 In section .data, align 2
     30          uint16 SpeedTargetValWaitStop = 20;     //灯塔等待停车速度。20代表2m/s。
   \                     SpeedTargetValWaitStop:
   \   00000000   0x0014             DC16 20
     31          

   \                                 In section .bss, align 1
     32          uint8 StopRealFlag = 0;     //绝对停止标志。1表示绝对停止，电机一定输出0。
   \                     StopRealFlag:
   \   00000000                      DS8 1
     33          

   \                                 In section .bss, align 4
     34          int32 ServoTemp = 0;
   \                     ServoTemp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     35          int32 DeltaVelocity = 0;   //差速计算验证。
   \                     DeltaVelocity:
   \   00000000                      DS8 4
     36          

   \                                 In section .bss, align 2
     37          int16 ErrorCountNow0 = 0;
   \                     ErrorCountNow0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     38          int16 ErrorCountNow1 = 0;
   \                     ErrorCountNow1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     39          int32 temp_speed_D;
   \                     temp_speed_D:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     40          int32 temp_speed_P;
   \                     temp_speed_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     41          uint8 MotorTakeOffFlag = 0;   //起飞控制标志位，1未起飞，0已起飞。初始化为未起飞。
   \                     MotorTakeOffFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     42          uint8 SpeedTargetLevel;//目标速度等级，不模糊，分段求取
   \                     SpeedTargetLevel:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     43          uint8 StopFlag=0;       // 停车标志，1表示停车
   \                     StopFlag:
   \   00000000                      DS8 1
     44          
     45          
     46          
     47          

   \                                 In section .data, align 4
     48          uint16 ServoPIDPMat[15] = 
   \                     ServoPIDPMat:
   \   00000000   0x0000 0x00A5      DC16 0, 165, 180, 205, 215, 235, 240, 229, 213, 201, 185, 173, 163, 154
   \              0x00B4 0x00CD
   \              0x00D7 0x00EB
   \              0x00F0 0x00E5
   \              0x00D5 0x00C9
   \              0x00B9 0x00AD
   \              0x00A3 0x009A
   \   0000001C   0x009A             DC16 154
   \   0000001E   0x00 0x00          DC8 0, 0
     49          {
     50           0,165,180,205,215,
     51           235,240,229,213,201,
     52           185,173,163,154,154
     53          };
     54          //舵机PID的P矩阵，行依据是当前偏差DeviFuse的绝对值的等级
     55          //扩大了100倍。
     56          

   \                                 In section .data, align 4
     57          uint16 Steer_kp[8] = 
   \                     Steer_kp:
   \   00000000   0x0000 0x0014      DC16 0, 20, 30, 33, 40, 40, 35, 35
   \              0x001E 0x0021
   \              0x0028 0x0028
   \              0x0023 0x0023
     58          {
     59            // 0,130,206,209,215,186,150,132
     60            //0,130,186,209,209,186,160,141
     61            //0,130,186,209,203,178,156,141 //2.1m
     62              //150,150,150,150,150,150,150,150 
     63             0,20,30,33,40,40,35,35
     64            // 0,115,150,183,196,178,158,141//2.2
     65            //0,90,120,153,176,178,158,141
     66             //0,40,60,70,80,80,70,70
     67          };
     68          
     69          //舵机D矩阵。

   \                                 In section .data, align 4
     70          uint16 ServoPIDDMat[7] = 
   \                     ServoPIDDMat:
   \   00000000   0x000A 0x000A      DC16 10, 10, 10, 10, 10, 10, 10
   \              0x000A 0x000A
   \              0x000A 0x000A
   \              0x000A       
   \   0000000E   0x00 0x00          DC8 0, 0
     71          {
     72          //0  25   45  60  80  100  120  140
     73          //   2,   4,   3,  2,  2 ,  1,   1,
     74           //25,   25,   25,   25,  25,   25,   25
     75           //12,   12,   12,   12,  12,   12,   12
     76          // 15,   15,   15,   15,  15,   15,   15
     77           10,   10,   10,   10,   10,   10,   10
     78           //19,   19,   19,   19,  19,   19,   19
     79            //  50,   50,   50,  50,  50,   50,   50
     80          //  20,   20,   20,   20,  20,   20,   20
     81           // 0,    0,    0,    0,   0,    0,   0
     82          };

   \                                 In section .data, align 4
     83          uint16 ServoPIDD2Mat[7] = 
   \                     ServoPIDD2Mat:
   \   00000000   0x000A 0x000A      DC16 10, 10, 10, 10, 10, 10, 10
   \              0x000A 0x000A
   \              0x000A 0x000A
   \              0x000A       
   \   0000000E   0x00 0x00          DC8 0, 0
     84          {
     85          // 0  25   45  60  80  100  120  140
     86            // 2,   3,   3, 3,  4 ,  3,   2,
     87          //15,   15,   15,   15,  15,   15,   15
     88           // 19,   19,   19,   19,  19,   19,   19
     89          //12,   12,   12,   12,  12,   12,   12 
     90            10,   10,   10,   10,   10,   10,   10
     91           //20,   20,   20,   20,  20,   20,   20
     92          // 25,   25,   25,   25,  25,   25,   25
     93          // 50,   50,   50,  50,  50,   50,   50
     94          //    0,    0,    0,    0,   0,   0,    0
     95          };

   \                                 In section .data, align 4
     96          uint8 speedP_goal[11]=
   \                     speedP_goal:
   \   00000000   0x0A 0x0A          DC8 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0
   \              0x0A 0x0A    
   \              0x0A 0x0A    
   \              0x0A 0x0A    
   \              0x0A 0x0A    
   \              0x0A 0x00    
     97          {
     98              //-140 -110 -80 -50 -25  0   25  50    80     110  140
     99              //20,  23,  26, 29, 30, 33,  30,  29,   26,   23,  20, 
    100              // 24, 26,  30, 33, 35, 37,  35,  33,   30,   26,  24, 
    101              // 27, 29,  33, 36, 38, 41,  38,  36,   33,   29,  27,
    102               //30, 31,  34, 36, 38, 41,  38,  36,   34,   31,  30,
    103               //45, 48,  51, 53,  57, 60,  57,  53,   51,   48,  45, 
    104               //20,  20,   20,  20,  20,   20,  20,   20,  20,  20,
    105               10,10,10,10,10,10,10,10,10,10,10,
    106          };
    107          //实际目标脉冲数矩阵。
    108          

   \                                 In section .data, align 4
    109          uint16 SpeedTargetMat[9][11]=
   \                     SpeedTargetMat:
   \   00000000   0x000A 0x000A      DC16 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 200, 200, 210, 220
   \              0x000A 0x000A
   \              0x000A 0x000A
   \              0x000A 0x000A
   \              0x000A 0x000A
   \              0x000A 0x00C8
   \              0x00C8 0x00D2
   \              0x00DC       
   \   0000001E   0x00E6 0x00F0      DC16 230, 240, 230, 220, 210, 200, 200, 210, 210, 220, 230, 240, 260
   \              0x00E6 0x00DC
   \              0x00D2 0x00C8
   \              0x00C8 0x00D2
   \              0x00D2 0x00DC
   \              0x00E6 0x00F0
   \              0x0104       
   \   00000038   0x00F0 0x00E6      DC16 240, 230, 220, 210, 210, 210, 220, 230, 240, 250, 280, 250, 240
   \              0x00DC 0x00D2
   \              0x00D2 0x00D2
   \              0x00DC 0x00E6
   \              0x00F0 0x00FA
   \              0x0118 0x00FA
   \              0x00F0       
   \   00000052   0x00E6 0x00DC      DC16 230, 220, 210, 210, 225, 235, 250, 260, 280, 260, 250, 235, 225
   \              0x00D2 0x00D2
   \              0x00E1 0x00EB
   \              0x00FA 0x0104
   \              0x0118 0x0104
   \              0x00FA 0x00EB
   \              0x00E1       
   \   0000006C   0x00D2 0x00D2      DC16 210, 210, 210, 240, 250, 270, 300, 270, 250, 240, 210, 210, 220
   \              0x00D2 0x00F0
   \              0x00FA 0x010E
   \              0x012C 0x010E
   \              0x00FA 0x00F0
   \              0x00D2 0x00D2
   \              0x00DC       
   \   00000086   0x00E6 0x00F0      DC16 230, 240, 260, 280, 300, 280, 260, 240, 230, 220, 200, 210, 220
   \              0x0104 0x0118
   \              0x012C 0x0118
   \              0x0104 0x00F0
   \              0x00E6 0x00DC
   \              0x00C8 0x00D2
   \              0x00DC       
   \   000000A0   0x00F0 0x0118      DC16 240, 280, 330, 280, 240, 220, 210, 200, 210, 220, 230, 250, 280
   \              0x014A 0x0118
   \              0x00F0 0x00DC
   \              0x00D2 0x00C8
   \              0x00D2 0x00DC
   \              0x00E6 0x00FA
   \              0x0118       
   \   000000BA   0x014A 0x0118      DC16 330, 280, 250, 230, 220, 210
   \              0x00FA 0x00E6
   \              0x00DC 0x00D2
   \   000000C6   0x00 0x00          DC8 0, 0
    110          {
    111           //-140, -110, -80,  -50 , -25 ,  0  , 25  ,  50 ,  80  , 110 , 140,
    112           //190, 200, 210, 215, 220, 230, 220, 215, 210, 200, 190,    //0档
    113            10,10,10,10,10,10,10,10,10,10,10,
    114          // 20,30,40,50,60,60,60,50,40,30,20,
    115             //60,80,100,120,140,140,140,120,100,80,60,
    116             //100, 120, 140, 180, 200, 200, 200, 180, 140, 120, 100,
    117             200, 200, 210, 220, 230, 240, 230, 220, 210, 200, 200,    //1档
    118             210, 210, 220, 230, 240, 260, 240, 230, 220, 210, 210,    //2档，比较稳定
    119             210, 220, 230, 240, 250, 280, 250, 240, 230, 220, 210,    //3档，直道高，弯道低
    120             210, 225, 235, 250, 260, 280, 260, 250, 235, 225, 210,    //4档，直道高，弯道高
    121             210, 210, 240, 250, 270, 300, 270, 250, 240, 210, 210,    //5档，直道高，弯道低
    122             220, 230, 240, 260, 280, 300, 280, 260, 240, 230, 220,    //6档，直道高，弯道高
    123             200, 210, 220, 240, 280, 330, 280, 240, 220, 210, 200,    //7档，直道高，弯道低  
    124             210, 220, 230, 250, 280, 330, 280, 250, 230, 220, 210,    //8档，直道高，弯道高
    125          };
    126          /*
    127          uint16 SpeedTargetMat[11][9]=
    128          {
    129            //-140 -110 -80  -50  -25   0   25   50   80   110  140
    130              200, 200, 200, 205, 210, 210, 210, 205,  200, 200, 200,  //-15
    131              200, 200, 200, 210, 210, 220, 210, 210,  200, 200, 200,  //-10
    132              200, 205, 210, 210, 220, 230, 220, 210,  210, 205, 200,  //-6
    133              200, 210, 210, 215, 230, 240, 230, 215,  210, 210, 200,  //-2
    134              200, 210, 220, 220, 240, 260, 240, 220,  220, 210, 200,  //0
    135              200, 210, 210, 215, 230, 240, 230, 215,  210, 210, 200,  //2
    136              200, 205, 210, 210, 220, 230, 220, 210,  210, 205, 200,  //6
    137              200, 200, 200, 210, 210, 220, 210, 210,  200, 200, 200,  //10
    138              200, 200, 200, 205, 210, 210, 210, 205,  200, 200, 200   //15
    139          };
    140          */
    141          //电机PID的P矩阵，依据是当前偏差devinow的绝对值的等级

   \                                 In section .data, align 4
    142          uint8 MotorPIDPMat[10] = 
   \                     MotorPIDPMat:
   \   00000000   0x3C 0x41          DC8 60, 65, 70, 70, 70, 75, 75, 80, 80, 80, 0, 0
   \              0x46 0x46    
   \              0x46 0x4B    
   \              0x4B 0x50    
   \              0x50 0x50    
   \              0x00 0x00    
    143          {
    144          60,65,70,70,70,
    145          75,75,80,80,80
    146          };
    147          

   \                                 In section .bss, align 1
    148          uint8 DoneFlag = 0;
   \                     DoneFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    149          uint8 QuadSpeedLevel = 0;    //编码器测量的实时速度的速度等级，10个等级，0最慢，9最快。
   \                     QuadSpeedLevel:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    150          uint8 SlopeCLevel = 0;        //斜率的绝对值的等级，6个等级，0最直，5最斜
   \                     SlopeCLevel:
   \   00000000                      DS8 1
    151          
    152          //舵机

   \                                 In section .bss, align 2
    153          uint16 ServoPIDP = 0;                   //舵机PID选取的P值。
   \                     ServoPIDP:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    154          uint16 ServoPIDD = 0;                   //舵机PID选取的D值。
   \                     ServoPIDD:
   \   00000000                      DS8 2

   \                                 In section .data, align 4
    155          uint32 ServoPIDInputVal = ServoPIDCen;            //实际输入到舵机的值
   \                     ServoPIDInputVal:
   \   00000000   0x000006C2         DC32 1730

   \                                 In section .data, align 4
    156          uint32 ServoPIDInputValOld = ServoPIDCen;         //上次输入到舵机的值
   \                     ServoPIDInputValOld:
   \   00000000   0x000006C2         DC32 1730

   \                                 In section .bss, align 4
    157          int32 ServoPIDInputValP = 0;            //实际输入到舵机的值的P分量
   \                     ServoPIDInputValP:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    158          int32 ServoPIDInputValD = 0;            //实际输入到舵机的值的D分量
   \                     ServoPIDInputValD:
   \   00000000                      DS8 4
    159          
    160          //uint32 ServoPIDVal = ServoPIDCen;     //舵机PID控制后输入的值。
    161          //电机
    162          
    163          

   \                                 In section .bss, align 4
    164          uint32 SpeedTargetVal = 0;               //平均目标脉冲数。差速前。
   \                     SpeedTargetVal:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    165          uint32 SpeedLastTargetVal = 0;           //上次平均目标脉冲数。差速前。
   \                     SpeedLastTargetVal:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
    166          uint16 SpeedTargetLeftVal = 0;           //左电机目标脉冲数。差速后。
   \                     SpeedTargetLeftVal:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    167          uint16 SpeedTargetRightVal = 0;          //右电机目标脉冲数。差速后。
   \                     SpeedTargetRightVal:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    168          uint16 SpeedLastTargetLeftVal = 0;       //上一次左电机目标脉冲数，差速后
   \                     SpeedLastTargetLeftVal:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    169          uint16 SpeedLastTargetRightVal = 0;      //上一次右电机目标脉冲数，差速后
   \                     SpeedLastTargetRightVal:
   \   00000000                      DS8 2
    170          

   \                                 In section .data, align 2
    171          uint16 SpeedPIDPVal = 25;                  //电机PID选取的P值
   \                     SpeedPIDPVal:
   \   00000000   0x0019             DC16 25

   \                                 In section .data, align 2
    172          uint16 SpeedPIDDVal = 65;                   //电机PID选取的D值
   \                     SpeedPIDDVal:
   \   00000000   0x0041             DC16 65

   \                                 In section .bss, align 2
    173          uint16 SpeedPIDIVal = 0;                 //电机PID选取的I值
   \                     SpeedPIDIVal:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
    174          int32 speed_kp,speed_kd;
   \                     speed_kp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_kd:
   \   00000000                      DS8 4
    175          

   \                                 In section .bss, align 4
    176          int32 SpeedLeftVal = 0;                //左电机实际输入的FTM值。
   \                     SpeedLeftVal:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    177          int32 SpeedRightVal = 0;               //右电机实际输入的FTM值。
   \                     SpeedRightVal:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    178          int32 SpeedLeftValP = 0;               //左电机实际输入的FTM值的P分量。
   \                     SpeedLeftValP:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    179          int32 SpeedLeftValD = 0;               //左电机实际输入的FTM值的D分量。
   \                     SpeedLeftValD:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    180          int32 SpeedRightValP = 0;              //右电机实际输入的FTM值的P分量。
   \                     SpeedRightValP:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    181          int32 SpeedRightValD = 0;              //右电机实际输入的FTM值的D分量。
   \                     SpeedRightValD:
   \   00000000                      DS8 4
    182          

   \                                 In section .bss, align 2
    183          int16 temptempSpeedLeftVal;
   \                     temptempSpeedLeftVal:
   \   00000000                      DS8 2
    184          

   \                                 In section .bss, align 1
    185          uint8 SpeedDiffGetSwitch =0;          //差速开关。1开启差速。0关闭差速。
   \                     SpeedDiffGetSwitch:
   \   00000000                      DS8 1
    186          
    187          //速度策略选项

   \                                 In section .data, align 1
    188          uint8 StrategyLoadSpeedIndex = 1;      //速度策略，1最佳，2高速，3低速。
   \                     StrategyLoadSpeedIndex:
   \   00000000   0x01               DC8 1
    189          
    190          //坡道的给定速度，写在FLASH中，通过OLED修改。flash里面的乘以100才归算到统一单位

   \                                 In section .bss, align 1
    191          uint8 SpeedTargetValGryoResult = 0;
   \                     SpeedTargetValGryoResult:
   \   00000000                      DS8 1
    192          
    193          //直角弯给定速度，写在FLASH中，通过OLED修改。flash里面的乘以100才归算到统一单位

   \                                 In section .data, align 1
    194          uint8 SpeedTargetValAngle = 150;
   \                     SpeedTargetValAngle:
   \   00000000   0x96               DC8 150
    195          
    196          //===================================舵机======================================
    197          //////////////////////////////////舵机PID控制，后期需要放进PIT中断服务函数中

   \                                 In section .text, align 2, keep-with-next
    198          uint8 ServoPID(void)
    199          { 
   \                     ServoPID: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    200            int32 temp,DeviFuse_fu;
    201            uint8 DeviFuse_grade;
    202            
    203            DeviFuse = (DeviFuse*10 + DeviFuse_old*0)/10;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x210A             MOVS     R1,#+10
   \   0000000A   0x.... 0x....      LDR.W    R2,??DataTable2_1
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0x435A             MULS     R2,R3,R2
   \   00000014   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000018   0x210A             MOVS     R1,#+10
   \   0000001A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000022   0x6008             STR      R0,[R1, #+0]
    204            DeviFuse_old = DeviFuse;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    205            
    206            
    207             
    208            temp=AbsInt(DeviFuse);
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x.... 0x....      BL       AbsInt
    209            
    210          /*  if(temp > 45)
    211            {
    212              if(AbsInt(DeviFuse-DeviPre) > AbsInt(DeviPre)*0.2)
    213              {
    214                  DeviFuse = (DeviFuse*3 + DeviPre*7)/10;
    215              }
    216            }*/
    217            
    218            if(temp<20)
   \   0000003A   0x2814             CMP      R0,#+20
   \   0000003C   0xDA07             BGE.N    ??ServoPID_0
    219            {
    220               DeviFuse_grade=1;
   \   0000003E   0x2401             MOVS     R4,#+1
    221               DeviFuse_fu=(temp-0)*750/(20-0);
   \   00000040   0xF240 0x21EE      MOVW     R1,#+750
   \   00000044   0x4348             MULS     R0,R1,R0
   \   00000046   0x2114             MOVS     R1,#+20
   \   00000048   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004C   0xE044             B.N      ??ServoPID_1
    222               //FTM0_C7V = 200;
    223            }
    224            else if(temp<30)
   \                     ??ServoPID_0: (+1)
   \   0000004E   0x281E             CMP      R0,#+30
   \   00000050   0xDA08             BGE.N    ??ServoPID_2
    225            {
    226               DeviFuse_grade=2;
   \   00000052   0x2402             MOVS     R4,#+2
    227               DeviFuse_fu=(temp-20)*750/(30-20);
   \   00000054   0x3814             SUBS     R0,R0,#+20
   \   00000056   0xF240 0x21EE      MOVW     R1,#+750
   \   0000005A   0x4348             MULS     R0,R1,R0
   \   0000005C   0x210A             MOVS     R1,#+10
   \   0000005E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000062   0xE039             B.N      ??ServoPID_1
    228               //FTM0_C7V = 170;
    229            }
    230             else if(temp<40)
   \                     ??ServoPID_2: (+1)
   \   00000064   0x2828             CMP      R0,#+40
   \   00000066   0xDA08             BGE.N    ??ServoPID_3
    231            {
    232               DeviFuse_grade=3;
   \   00000068   0x2403             MOVS     R4,#+3
    233               DeviFuse_fu=(temp-30)*750/(40-30);
   \   0000006A   0x381E             SUBS     R0,R0,#+30
   \   0000006C   0xF240 0x21EE      MOVW     R1,#+750
   \   00000070   0x4348             MULS     R0,R1,R0
   \   00000072   0x210A             MOVS     R1,#+10
   \   00000074   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000078   0xE02E             B.N      ??ServoPID_1
    234               //FTM0_C7V = 160;
    235            }
    236            else if(temp<50)
   \                     ??ServoPID_3: (+1)
   \   0000007A   0x2832             CMP      R0,#+50
   \   0000007C   0xDA08             BGE.N    ??ServoPID_4
    237            {
    238               DeviFuse_grade=4;
   \   0000007E   0x2404             MOVS     R4,#+4
    239               DeviFuse_fu=(temp-40)*750/(50-40);
   \   00000080   0x3828             SUBS     R0,R0,#+40
   \   00000082   0xF240 0x21EE      MOVW     R1,#+750
   \   00000086   0x4348             MULS     R0,R1,R0
   \   00000088   0x210A             MOVS     R1,#+10
   \   0000008A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000008E   0xE023             B.N      ??ServoPID_1
    240               //FTM0_C7V = 150;
    241            }
    242            else if(temp<60)
   \                     ??ServoPID_4: (+1)
   \   00000090   0x283C             CMP      R0,#+60
   \   00000092   0xDA08             BGE.N    ??ServoPID_5
    243            {
    244               DeviFuse_grade=5;
   \   00000094   0x2405             MOVS     R4,#+5
    245               DeviFuse_fu=(temp-50)*750/(60-50);
   \   00000096   0x3832             SUBS     R0,R0,#+50
   \   00000098   0xF240 0x21EE      MOVW     R1,#+750
   \   0000009C   0x4348             MULS     R0,R1,R0
   \   0000009E   0x210A             MOVS     R1,#+10
   \   000000A0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000A4   0xE018             B.N      ??ServoPID_1
    246               //FTM0_C7V = 140;
    247            }
    248            else if(temp<80)
   \                     ??ServoPID_5: (+1)
   \   000000A6   0x2850             CMP      R0,#+80
   \   000000A8   0xDA08             BGE.N    ??ServoPID_6
    249            {
    250               DeviFuse_grade=6;
   \   000000AA   0x2406             MOVS     R4,#+6
    251               DeviFuse_fu=(temp-60)*750/(80-60);
   \   000000AC   0x383C             SUBS     R0,R0,#+60
   \   000000AE   0xF240 0x21EE      MOVW     R1,#+750
   \   000000B2   0x4348             MULS     R0,R1,R0
   \   000000B4   0x2114             MOVS     R1,#+20
   \   000000B6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000BA   0xE00D             B.N      ??ServoPID_1
    252               //FTM0_C7V = 120;
    253            }
    254             else if(temp<100)
   \                     ??ServoPID_6: (+1)
   \   000000BC   0x2864             CMP      R0,#+100
   \   000000BE   0xDA08             BGE.N    ??ServoPID_7
    255            {
    256               DeviFuse_grade=7;
   \   000000C0   0x2407             MOVS     R4,#+7
    257                DeviFuse_fu=(temp-80)*750/(100-80);
   \   000000C2   0x3850             SUBS     R0,R0,#+80
   \   000000C4   0xF240 0x21EE      MOVW     R1,#+750
   \   000000C8   0x4348             MULS     R0,R1,R0
   \   000000CA   0x2114             MOVS     R1,#+20
   \   000000CC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000D0   0xE002             B.N      ??ServoPID_1
    258                //FTM0_C7V = 100;
    259            }
    260            else
    261            {
    262               DeviFuse_grade=7; 
   \                     ??ServoPID_7: (+1)
   \   000000D2   0x2407             MOVS     R4,#+7
    263               DeviFuse_fu=750;//1000;//修改过
   \   000000D4   0xF240 0x20EE      MOVW     R0,#+750
    264               //FTM0_C7V = 100;
    265            }
    266            
    267            ServoPIDP=(DeviFuse_fu*Steer_kp[DeviFuse_grade]+(750-DeviFuse_fu)*Steer_kp[DeviFuse_grade-1])/1000;
   \                     ??ServoPID_1: (+1)
   \   000000D8   0x....             LDR.N    R1,??DataTable2_2
   \   000000DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DC   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   000000E0   0xF240 0x22EE      MOVW     R2,#+750
   \   000000E4   0x1A12             SUBS     R2,R2,R0
   \   000000E6   0x....             LDR.N    R3,??DataTable2_2
   \   000000E8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EA   0xEB13 0x0344      ADDS     R3,R3,R4, LSL #+1
   \   000000EE   0xF833 0x3C02      LDRH     R3,[R3, #-2]
   \   000000F2   0x435A             MULS     R2,R3,R2
   \   000000F4   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000F8   0xF44F 0x717A      MOV      R1,#+1000
   \   000000FC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000100   0x....             LDR.N    R1,??DataTable2_3
   \   00000102   0x8008             STRH     R0,[R1, #+0]
    268            //P分量。
    269            ServoPIDInputValP = ServoPIDP * DeviFuse / 10;
   \   00000104   0x....             LDR.N    R0,??DataTable2_3
   \   00000106   0x8800             LDRH     R0,[R0, #+0]
   \   00000108   0x....             LDR.N    R1,??DataTable2
   \   0000010A   0x6809             LDR      R1,[R1, #+0]
   \   0000010C   0x4348             MULS     R0,R1,R0
   \   0000010E   0x210A             MOVS     R1,#+10
   \   00000110   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000114   0x....             LDR.N    R1,??DataTable2_4
   \   00000116   0x6008             STR      R0,[R1, #+0]
    270            //D分量
    271            
    272            if((AbsInt(DeviFuse)-AbsInt(DeviPre))>=0)
   \   00000118   0x....             LDR.N    R0,??DataTable2
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x.... 0x....      BL       AbsInt
   \   00000120   0x0005             MOVS     R5,R0
   \   00000122   0x....             LDR.N    R0,??DataTable2_5
   \   00000124   0x6800             LDR      R0,[R0, #+0]
   \   00000126   0x.... 0x....      BL       AbsInt
   \   0000012A   0x1A28             SUBS     R0,R5,R0
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD408             BMI.N    ??ServoPID_8
    273            {
    274             ServoPIDD=ServoPIDDMat[DeviFuse_grade-1];
   \   00000130   0x....             LDR.N    R0,??DataTable2_6
   \   00000132   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000134   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   00000138   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \   0000013C   0x....             LDR.N    R1,??DataTable2_7
   \   0000013E   0x8008             STRH     R0,[R1, #+0]
   \   00000140   0xE007             B.N      ??ServoPID_9
    275            }
    276            else
    277            {
    278            ServoPIDD=ServoPIDD2Mat[DeviFuse_grade-1];
   \                     ??ServoPID_8: (+1)
   \   00000142   0x....             LDR.N    R0,??DataTable2_8
   \   00000144   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000146   0xEB10 0x0044      ADDS     R0,R0,R4, LSL #+1
   \   0000014A   0xF830 0x0C02      LDRH     R0,[R0, #-2]
   \   0000014E   0x....             LDR.N    R1,??DataTable2_7
   \   00000150   0x8008             STRH     R0,[R1, #+0]
    279            }
    280            
    281            
    282            
    283            ServoPIDInputValD=ServoPIDD*(DeviFuse-DeviPre);
   \                     ??ServoPID_9: (+1)
   \   00000152   0x....             LDR.N    R0,??DataTable2_7
   \   00000154   0x8800             LDRH     R0,[R0, #+0]
   \   00000156   0x....             LDR.N    R1,??DataTable2
   \   00000158   0x6809             LDR      R1,[R1, #+0]
   \   0000015A   0x....             LDR.N    R2,??DataTable2_5
   \   0000015C   0x6812             LDR      R2,[R2, #+0]
   \   0000015E   0x1A89             SUBS     R1,R1,R2
   \   00000160   0x4348             MULS     R0,R1,R0
   \   00000162   0x....             LDR.N    R1,??DataTable2_9
   \   00000164   0x6008             STR      R0,[R1, #+0]
    284            //记录上一次的输入值。
    285            ServoPIDInputValOld = ServoPIDInputVal;
   \   00000166   0x....             LDR.N    R0,??DataTable2_10
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x....             LDR.N    R1,??DataTable2_11
   \   0000016C   0x6008             STR      R0,[R1, #+0]
    286          
    287            //新的输入值
    288            ServoPIDInputVal = ServoPIDCen + ServoPIDInputValP + ServoPIDInputValD;
   \   0000016E   0x....             LDR.N    R0,??DataTable2_4
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x....             LDR.N    R1,??DataTable2_9
   \   00000174   0x6809             LDR      R1,[R1, #+0]
   \   00000176   0x1808             ADDS     R0,R1,R0
   \   00000178   0xF200 0x60C2      ADDW     R0,R0,#+1730
   \   0000017C   0x....             LDR.N    R1,??DataTable2_10
   \   0000017E   0x6008             STR      R0,[R1, #+0]
    289           
    290            //滤波
    291             ServoPIDInputVal = (ServoPIDInputValOld * 0 + ServoPIDInputVal * 10) / 10;
   \   00000180   0x....             LDR.N    R0,??DataTable2_11
   \   00000182   0x6800             LDR      R0,[R0, #+0]
   \   00000184   0x2100             MOVS     R1,#+0
   \   00000186   0x....             LDR.N    R2,??DataTable2_10
   \   00000188   0x6812             LDR      R2,[R2, #+0]
   \   0000018A   0x230A             MOVS     R3,#+10
   \   0000018C   0x435A             MULS     R2,R3,R2
   \   0000018E   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000192   0x210A             MOVS     R1,#+10
   \   00000194   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000198   0x....             LDR.N    R1,??DataTable2_10
   \   0000019A   0x6008             STR      R0,[R1, #+0]
    292            /*
    293             //舵机跳变限幅
    294            if(ServoPIDInputVal>(ServoPIDInputValOld+70))
    295            {
    296              ServoPIDInputVal=ServoPIDInputValOld+70;
    297            }
    298            else if(ServoPIDInputVal<(ServoPIDInputValOld-70))
    299            {
    300              ServoPIDInputVal=ServoPIDInputValOld-70;
    301            }
    302            else
    303            {
    304             
    305            }
    306            */
    307             
    308            //针对障碍的打角限制
    309            BrickSpeDealServor();
   \   0000019C   0x.... 0x....      BL       BrickSpeDealServor
    310            
    311            //针对十字的打角限制，以及修改偏差
    312            if(ShiZhiFlag==1)
   \   000001A0   0x....             LDR.N    R0,??DataTable2_12
   \   000001A2   0x7800             LDRB     R0,[R0, #+0]
   \   000001A4   0x2801             CMP      R0,#+1
   \   000001A6   0xD117             BNE.N    ??ServoPID_10
    313            {
    314                if(ServoPIDInputVal >= (ServoPIDMax-ServoPIDCen)/5+ServoPIDCen)
   \   000001A8   0x....             LDR.N    R0,??DataTable2_10
   \   000001AA   0x6800             LDR      R0,[R0, #+0]
   \   000001AC   0xF240 0x710E      MOVW     R1,#+1806
   \   000001B0   0x4288             CMP      R0,R1
   \   000001B2   0xD304             BCC.N    ??ServoPID_11
    315                {
    316                  ServoPIDInputVal = (ServoPIDMax-ServoPIDCen)/5+ServoPIDCen;
   \   000001B4   0xF240 0x700E      MOVW     R0,#+1806
   \   000001B8   0x....             LDR.N    R1,??DataTable2_10
   \   000001BA   0x6008             STR      R0,[R1, #+0]
   \   000001BC   0xE009             B.N      ??ServoPID_12
    317                }
    318                
    319                else if(ServoPIDInputVal <= ServoPIDCen-(ServoPIDCen-ServoPIDMin)/5)
   \                     ??ServoPID_11: (+1)
   \   000001BE   0x....             LDR.N    R0,??DataTable2_10
   \   000001C0   0x6800             LDR      R0,[R0, #+0]
   \   000001C2   0xF240 0x6177      MOVW     R1,#+1655
   \   000001C6   0x4288             CMP      R0,R1
   \   000001C8   0xD203             BCS.N    ??ServoPID_12
    320                {
    321                  ServoPIDInputVal = ServoPIDCen-(ServoPIDCen-ServoPIDMin)/5;
   \   000001CA   0xF240 0x6076      MOVW     R0,#+1654
   \   000001CE   0x....             LDR.N    R1,??DataTable2_10
   \   000001D0   0x6008             STR      R0,[R1, #+0]
    322                }
    323                DeviFuse = 0;
   \                     ??ServoPID_12: (+1)
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x....             LDR.N    R1,??DataTable2
   \   000001D6   0x6008             STR      R0,[R1, #+0]
    324            }
    325             
    326            //限幅。  
    327            if(ServoPIDInputVal >= ServoPIDMax)
   \                     ??ServoPID_10: (+1)
   \   000001D8   0x....             LDR.N    R0,??DataTable2_10
   \   000001DA   0x6800             LDR      R0,[R0, #+0]
   \   000001DC   0xF640 0x013E      MOVW     R1,#+2110
   \   000001E0   0x4288             CMP      R0,R1
   \   000001E2   0xD304             BCC.N    ??ServoPID_13
    328            {
    329              ServoPIDInputVal = ServoPIDMax;
   \   000001E4   0xF640 0x003E      MOVW     R0,#+2110
   \   000001E8   0x....             LDR.N    R1,??DataTable2_10
   \   000001EA   0x6008             STR      R0,[R1, #+0]
   \   000001EC   0xE009             B.N      ??ServoPID_14
    330            }
    331            
    332            else if(ServoPIDInputVal <= ServoPIDMin)
   \                     ??ServoPID_13: (+1)
   \   000001EE   0x....             LDR.N    R0,??DataTable2_10
   \   000001F0   0x6800             LDR      R0,[R0, #+0]
   \   000001F2   0xF240 0x5147      MOVW     R1,#+1351
   \   000001F6   0x4288             CMP      R0,R1
   \   000001F8   0xD203             BCS.N    ??ServoPID_14
    333            {
    334              ServoPIDInputVal = ServoPIDMin;
   \   000001FA   0xF240 0x5046      MOVW     R0,#+1350
   \   000001FE   0x....             LDR.N    R1,??DataTable2_10
   \   00000200   0x6008             STR      R0,[R1, #+0]
    335            }
    336            
    337            else
    338            {
    339              
    340            } 
    341          
    342            //赋值给实际的舵机I/O口。
    343            //FTM1_C0V = 2100;右打死
    344            FTM1_C0V = (uint16)(2*ServoPIDCen-ServoPIDInputVal);
   \                     ??ServoPID_14: (+1)
   \   00000202   0xF640 0x5084      MOVW     R0,#+3460
   \   00000206   0x....             LDR.N    R1,??DataTable2_10
   \   00000208   0x6809             LDR      R1,[R1, #+0]
   \   0000020A   0x1A40             SUBS     R0,R0,R1
   \   0000020C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable3  ;; 0x40039010
   \   00000212   0x6008             STR      R0,[R1, #+0]
    345            return 1;
   \   00000214   0x2001             MOVS     R0,#+1
   \   00000216   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    346          }
    347          
    348              
    349          //======================================================================
    350          //函数名：SpeedDiffGet
    351          //功  能：左右电机的差速值计算。
    352          //参  数：tempSpeedTarget预设速度值，num处理的电机编号0左1右
    353          //返  回：tempSpeedTarget差速后的预设速度值
    354          //影  响：
    355          //说  明：1. MotorPID应该放在ServoPID后，即ServoPIDInputVal更新后。
    356          //      
    357          //             
    358          //======================================================================

   \                                 In section .text, align 2, keep-with-next
    359          uint16 SpeedDiffGet(uint16 tempSpeedTarget, uint8 num)
    360          {
   \                     SpeedDiffGet: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    361            
    362            //int32 DeltaVelocity;
    363            //int32 ServoTemp = 0;
    364            uint32 val;
    365            
    366            //舵机偏量的绝对值
    367            ServoTemp = AbsInt(ServoPIDCen - ServoPIDInputVal);
   \   00000006   0xF240 0x60C2      MOVW     R0,#+1730
   \   0000000A   0x....             LDR.N    R1,??DataTable2_10
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x1A40             SUBS     R0,R0,R1
   \   00000010   0x.... 0x....      BL       AbsInt
   \   00000014   0x....             LDR.N    R1,??DataTable2_13
   \   00000016   0x6008             STR      R0,[R1, #+0]
    368           // DeltaVelocity = ((1000 * ServoTemp / 125) - (8 * ServoTemp * ServoTemp / 1000) + (71 * ServoTemp * ServoTemp * ServoTemp / 1000000))*30/10;//乘以目标速度转化成速度差,该值放大了10000倍
    369            DeltaVelocity = ((1000 * ServoTemp / 125)  + (71 * ServoTemp * ServoTemp * ServoTemp / 1000000))*13/10;//乘以目标速度转化成速度差,该值放大了10000倍
   \   00000018   0x....             LDR.N    R0,??DataTable2_13
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000020   0x4348             MULS     R0,R1,R0
   \   00000022   0x217D             MOVS     R1,#+125
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x....             LDR.N    R1,??DataTable2_13
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0x....             LDR.N    R2,??DataTable2_13
   \   0000002E   0x6812             LDR      R2,[R2, #+0]
   \   00000030   0x4351             MULS     R1,R2,R1
   \   00000032   0x....             LDR.N    R2,??DataTable2_13
   \   00000034   0x6812             LDR      R2,[R2, #+0]
   \   00000036   0x4351             MULS     R1,R2,R1
   \   00000038   0x2247             MOVS     R2,#+71
   \   0000003A   0x4351             MULS     R1,R2,R1
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable3_1  ;; 0xf4240
   \   00000040   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000044   0x1808             ADDS     R0,R1,R0
   \   00000046   0x210D             MOVS     R1,#+13
   \   00000048   0x4348             MULS     R0,R1,R0
   \   0000004A   0x210A             MOVS     R1,#+10
   \   0000004C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000054   0x6008             STR      R0,[R1, #+0]
    370            //DeltaVelocity=(70200*ServoTemp-0*ServoTemp*ServoTemp+15*ServoTemp*ServoTemp*ServoTemp/10-345000)/10000;
    371           // DeltaVelocity=(70200*ServoTemp+2*ServoTemp*ServoTemp*ServoTemp)/10000;
    372            //当前右转。
    373            if(ServoPIDInputVal > ServoPIDCen)
   \   00000056   0x....             LDR.N    R0,??DataTable2_10
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF240 0x61C3      MOVW     R1,#+1731
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xD31E             BCC.N    ??SpeedDiffGet_0
    374            {
    375              //对左电机的处理，速度加大。
    376              if(num == 0)
   \   00000062   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000064   0x2D00             CMP      R5,#+0
   \   00000066   0xD10D             BNE.N    ??SpeedDiffGet_1
    377              {    
    378               val = tempSpeedTarget + (uint16)(tempSpeedTarget * DeltaVelocity / 10000);
   \   00000068   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x4348             MULS     R0,R1,R0
   \   00000076   0xF242 0x7110      MOVW     R1,#+10000
   \   0000007A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000007E   0xFA14 0xF480      UXTAH    R4,R4,R0
   \   00000082   0xE033             B.N      ??SpeedDiffGet_2
    379              }
    380              //对右电机的处理，速度减小。
    381              else
    382              {
    383                val = tempSpeedTarget - (uint16)(tempSpeedTarget * DeltaVelocity / 10000);
   \                     ??SpeedDiffGet_1: (+1)
   \   00000084   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000086   0x0020             MOVS     R0,R4
   \   00000088   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x4348             MULS     R0,R1,R0
   \   00000092   0xF242 0x7110      MOVW     R1,#+10000
   \   00000096   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000009A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009C   0x1A24             SUBS     R4,R4,R0
   \   0000009E   0xE025             B.N      ??SpeedDiffGet_2
    384              }
    385            }
    386            //当前左转。
    387            else if(ServoPIDInputVal < ServoPIDCen)
   \                     ??SpeedDiffGet_0: (+1)
   \   000000A0   0x....             LDR.N    R0,??DataTable2_10
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0xF240 0x61C2      MOVW     R1,#+1730
   \   000000A8   0x4288             CMP      R0,R1
   \   000000AA   0xD21E             BCS.N    ??SpeedDiffGet_3
    388            {
    389              //对左电机的处理，速度减小。
    390              if(num == 0)
   \   000000AC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000AE   0x2D00             CMP      R5,#+0
   \   000000B0   0xD10D             BNE.N    ??SpeedDiffGet_4
    391              {
    392                val = tempSpeedTarget - (uint16)(tempSpeedTarget * DeltaVelocity / 10000);
   \   000000B2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B4   0x0020             MOVS     R0,R4
   \   000000B6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0x4348             MULS     R0,R1,R0
   \   000000C0   0xF242 0x7110      MOVW     R1,#+10000
   \   000000C4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000C8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CA   0x1A24             SUBS     R4,R4,R0
   \   000000CC   0xE00E             B.N      ??SpeedDiffGet_2
    393              }
    394              //对右电机的处理，速度加大。
    395              else
    396              {
    397                val = tempSpeedTarget + (uint16)(tempSpeedTarget * DeltaVelocity / 10000);
   \                     ??SpeedDiffGet_4: (+1)
   \   000000CE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000D8   0x6809             LDR      R1,[R1, #+0]
   \   000000DA   0x4348             MULS     R0,R1,R0
   \   000000DC   0xF242 0x7110      MOVW     R1,#+10000
   \   000000E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000E4   0xFA14 0xF480      UXTAH    R4,R4,R0
   \   000000E8   0xE000             B.N      ??SpeedDiffGet_2
    398              }
    399            }
    400            //当前直走，不作任何处理。
    401            else
    402            {
    403              //val = tempSpeedTarget;
    404              val = tempSpeedTarget;
   \                     ??SpeedDiffGet_3: (+1)
   \   000000EA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
    405            }  
    406            
    407            return val;
   \                     ??SpeedDiffGet_2: (+1)
   \   000000EC   0x0020             MOVS     R0,R4
   \   000000EE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000F0   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    408          }
    409          //特殊赛道时，平均目标速度的特殊处理。

   \                                 In section .text, align 2, keep-with-next
    410          uint32 SpeedTargetValSpePathDeal(uint32 temp)
    411          {
    412            uint32 val;
    413            
    414            //每次只允许有一种特殊赛道。
    415            if(StopFlag == 1)
   \                     SpeedTargetValSpePathDeal: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x2901             CMP      R1,#+1
   \   00000008   0xD101             BNE.N    ??SpeedTargetValSpePathDeal_0
    416            {
    417              val = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE031             B.N      ??SpeedTargetValSpePathDeal_1
    418            }
    419           /* else if(LightHouseWaitStopFlag != 0)
    420            {
    421              //val = SpeedTargetValWaitStop;
    422              light_control(PORTA, 17, Light_ON);
    423            }
    424            //直角
    425            else if(AngleConfirmLockFlag == 1)
    426            {
    427              //直角弯锁存等待时，减速处理。
    428              //val = SpeedTargetValAngle;
    429              light_control(PORTD, 15, Light_ON);
    430            }*/
    431            else if(BrickConfirmLockFlag == 1 || BrickSpeDealFlag == 1)
   \                     ??SpeedTargetValSpePathDeal_0: (+1)
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2901             CMP      R1,#+1
   \   00000016   0xD004             BEQ.N    ??SpeedTargetValSpePathDeal_2
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable3_5
   \   0000001C   0x7809             LDRB     R1,[R1, #+0]
   \   0000001E   0x2901             CMP      R1,#+1
   \   00000020   0xD103             BNE.N    ??SpeedTargetValSpePathDeal_3
    432            {
    433              val = SpeedBrick;
   \                     ??SpeedTargetValSpePathDeal_2: (+1)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0xE023             B.N      ??SpeedTargetValSpePathDeal_1
    434            }
    435            //上坡速度。大的话就飞过，小的话就贴着过。
    436            else if(GyroResultFlag == 1)
   \                     ??SpeedTargetValSpePathDeal_3: (+1)
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   0000002E   0x7809             LDRB     R1,[R1, #+0]
   \   00000030   0x2901             CMP      R1,#+1
   \   00000032   0xD103             BNE.N    ??SpeedTargetValSpePathDeal_4
    437            {
    438              val = SpeedTargetValGryoUp;
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   00000038   0x8800             LDRH     R0,[R0, #+0]
   \   0000003A   0xE01A             B.N      ??SpeedTargetValSpePathDeal_1
    439            }
    440            //下坡后的启动速度。
    441            else if(GyroResultFlag == 2)
   \                     ??SpeedTargetValSpePathDeal_4: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   00000040   0x7809             LDRB     R1,[R1, #+0]
   \   00000042   0x2902             CMP      R1,#+2
   \   00000044   0xD103             BNE.N    ??SpeedTargetValSpePathDeal_5
    442            {
    443              //若在坡上，则将平均目标脉冲数赋值为较小的值。
    444              val = SpeedTargetValGryoResult;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable3_9
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0xE011             B.N      ??SpeedTargetValSpePathDeal_1
    445            }
    446            //长直道
    447            else if(PathRealStraightFlag == 1)
   \                     ??SpeedTargetValSpePathDeal_5: (+1)
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable3_10
   \   00000052   0x7809             LDRB     R1,[R1, #+0]
   \   00000054   0x2901             CMP      R1,#+1
   \   00000056   0xD103             BNE.N    ??SpeedTargetValSpePathDeal_6
    448            {
    449              //长直道，速度加快。
    450              val = SpeedTargetValStraight;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable3_11
   \   0000005C   0x8800             LDRH     R0,[R0, #+0]
   \   0000005E   0xE008             B.N      ??SpeedTargetValSpePathDeal_1
    451            }
    452            else if(xiaoZhiDaoFlag == 1)
   \                     ??SpeedTargetValSpePathDeal_6: (+1)
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   00000064   0x7809             LDRB     R1,[R1, #+0]
   \   00000066   0x2901             CMP      R1,#+1
   \   00000068   0xD103             BNE.N    ??SpeedTargetValSpePathDeal_7
    453            {
    454              val = SpeedXiaoZhiDao;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   0000006E   0x8800             LDRH     R0,[R0, #+0]
   \   00000070   0xE7FF             B.N      ??SpeedTargetValSpePathDeal_1
    455                //val = temp;
    456            }
    457            //无特殊赛道，返回原值。
    458            else
    459            {
    460              val = temp;
    461            }
    462            
    463            return val;
   \                     ??SpeedTargetValSpePathDeal_7: (+1)
   \                     ??SpeedTargetValSpePathDeal_1: (+1)
   \   00000072   0x4770             BX       LR               ;; return
    464          }
    465              
    466          
    467          
    468          //=========================电机========================================
    469          //////////////////////////////////电机PID控制，后期需要放进PIT中断服务函数中

   \                                 In section .text, align 2, keep-with-next
    470          uint8 MotorPID(void)
    471          {
   \                     MotorPID: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    472            uint8 DeviFuseLevel;
    473            uint8 i;
    474            //uint8 j;     
    475            int32 temp_speed_bias;
    476            
    477            
    478            ErrorCountNow1++;  
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   0000000E   0x8008             STRH     R0,[R1, #+0]
    479            //起飞未完成前，按起飞的速度控制。
    480            if(MotorTakeOffFlag == 1)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xF040 0x81FB      BNE.W    ??MotorPID_0
    481            {
    482              //偏差等级的获取
    483              DeviFuseLevel = AbsInt(DeviFuse) / 10;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x.... 0x....      BL       AbsInt
   \   00000026   0x210A             MOVS     R1,#+10
   \   00000028   0xFB90 0xF0F1      SDIV     R0,R0,R1
    484              if(DeviFuseLevel > 8)
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x2809             CMP      R0,#+9
   \   00000030   0xDB00             BLT.N    ??MotorPID_1
    485              {
    486                //偏差等级的修正
    487                DeviFuseLevel = 9;
   \   00000032   0x2009             MOVS     R0,#+9
    488              }
    489              else
    490              { 
    491                
    492              }
    493              
    494              //模糊求取平均目标脉冲数
    495              SpeedTargetVal = 0;
   \                     ??MotorPID_1: (+1)
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    496             
    497              for(i = 0;i < 11; i++)
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xE012             B.N      ??MotorPID_2
    498              {
    499          //      for(j=0;j <9 ;j++)
    500          //      {
    501          //         SpeedTargetVal += DeviFusemtr[i]*DeviFuse_dotmtr[j] * SpeedTargetMat[i][j]/1000;      
    502          //      }
    503                SpeedTargetVal += DeviFusemtr[i] * SpeedTargetMat[0][i]; 
   \                     ??MotorPID_3: (+1)
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable3_19
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0xF833 0x3010      LDRH     R3,[R3, R0, LSL #+1]
   \   0000005A   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   0000005E   0x.... 0x....      LDR.W    R2,??DataTable3_17
   \   00000062   0x6011             STR      R1,[R2, #+0]
    504              }
   \   00000064   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_2: (+1)
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x280B             CMP      R0,#+11
   \   0000006A   0xDBE9             BLT.N    ??MotorPID_3
    505              SpeedTargetVal = SpeedTargetVal/ 1000;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF44F 0x717A      MOV      R1,#+1000
   \   00000076   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    506              
    507              
    508              
    509              //计算左电机应输入的值。
    510              //储存为上一次左电机的目标速度
    511              SpeedLastTargetLeftVal = SpeedTargetLeftVal;
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   00000084   0x8800             LDRH     R0,[R0, #+0]
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable3_21
   \   0000008A   0x8008             STRH     R0,[R1, #+0]
    512              //左电机差速
    513              if(SpeedDiffGetSwitch == 1)
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable3_22
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0x2801             CMP      R0,#+1
   \   00000094   0xD119             BNE.N    ??MotorPID_4
    514              {
    515                SpeedTargetLeftVal = SpeedDiffGet(SpeedTargetVal, 0);   
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A0   0x.... 0x....      BL       SpeedDiffGet
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000000A8   0x8008             STRH     R0,[R1, #+0]
    516                SpeedTargetLeftVal=(SpeedTargetLeftVal*9+SpeedLastTargetLeftVal*1)/10;
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   000000AE   0x8800             LDRH     R0,[R0, #+0]
   \   000000B0   0x2109             MOVS     R1,#+9
   \   000000B2   0x.... 0x....      LDR.W    R2,??DataTable3_21
   \   000000B6   0x8812             LDRH     R2,[R2, #+0]
   \   000000B8   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000BC   0x210A             MOVS     R1,#+10
   \   000000BE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000000C6   0x8008             STRH     R0,[R1, #+0]
   \   000000C8   0xE014             B.N      ??MotorPID_5
    517              }
    518              else
    519              {
    520                SpeedTargetLeftVal = SpeedTargetVal;
   \                     ??MotorPID_4: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000000D4   0x8008             STRH     R0,[R1, #+0]
    521                SpeedTargetLeftVal=(SpeedTargetLeftVal*9+SpeedLastTargetLeftVal*1)/10; 
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   000000DA   0x8800             LDRH     R0,[R0, #+0]
   \   000000DC   0x2109             MOVS     R1,#+9
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable3_21
   \   000000E2   0x8812             LDRH     R2,[R2, #+0]
   \   000000E4   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000E8   0x210A             MOVS     R1,#+10
   \   000000EA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000000F2   0x8008             STRH     R0,[R1, #+0]
    522              }
    523              //左电机P分量
    524               temp_speed_bias=AbsInt (SpeedTargetLeftVal - SpeedNowLeft);
   \                     ??MotorPID_5: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   000000F8   0x8800             LDRH     R0,[R0, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   000000FE   0x8809             LDRH     R1,[R1, #+0]
   \   00000100   0x1A40             SUBS     R0,R0,R1
   \   00000102   0x.... 0x....      BL       AbsInt
    525              
    526                speed_kd=SpeedPIDDVal;
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   0000010A   0x8800             LDRH     R0,[R0, #+0]
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable3_25
   \   00000110   0x6008             STR      R0,[R1, #+0]
    527                speed_kp=0;
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000118   0x6008             STR      R0,[R1, #+0]
    528               for(i = 0;i < 11; i++)
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0xE011             B.N      ??MotorPID_6
    529              {
    530                speed_kp += DeviFusemtr[i] * speedP_goal[i];      
   \                     ??MotorPID_7: (+1)
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000122   0x6809             LDR      R1,[R1, #+0]
   \   00000124   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   00000128   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012A   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   0000012E   0x.... 0x....      LDR.W    R3,??DataTable3_27
   \   00000132   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000134   0x5CC3             LDRB     R3,[R0, R3]
   \   00000136   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   0000013A   0x.... 0x....      LDR.W    R2,??DataTable3_26
   \   0000013E   0x6011             STR      R1,[R2, #+0]
    531              }
   \   00000140   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_6: (+1)
   \   00000142   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000144   0x280B             CMP      R0,#+11
   \   00000146   0xDBEA             BLT.N    ??MotorPID_7
    532              speed_kp = speed_kp / 1000;
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000152   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   0000015A   0x6008             STR      R0,[R1, #+0]
    533              SpeedPIDPVal=speed_kp;
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable3_28
   \   00000166   0x8008             STRH     R0,[R1, #+0]
    534              //speed_kp=SpeedPIDPVal;        //修改过
    535               SpeedLeftValP +=SpeedTargetLeftVal - SpeedNowLeft;
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   0000016C   0x6800             LDR      R0,[R0, #+0]
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000172   0x8809             LDRH     R1,[R1, #+0]
   \   00000174   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   0000017C   0x8809             LDRH     R1,[R1, #+0]
   \   0000017E   0x1A40             SUBS     R0,R0,R1
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   00000184   0x6008             STR      R0,[R1, #+0]
    536                 //积分限幅
    537              if(SpeedLeftValP>800)
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000190   0xDD05             BLE.N    ??MotorPID_8
    538              {
    539                SpeedLeftValP=800;
   \   00000192   0xF44F 0x7048      MOV      R0,#+800
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   0000019A   0x6008             STR      R0,[R1, #+0]
   \   0000019C   0xE00A             B.N      ??MotorPID_9
    540              }
    541              else if(SpeedLeftValP<-800)
   \                     ??MotorPID_8: (+1)
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000001A2   0x6800             LDR      R0,[R0, #+0]
   \   000001A4   0xF510 0x7F48      CMN      R0,#+800
   \   000001A8   0xDA04             BGE.N    ??MotorPID_9
    542              {
    543                 SpeedLeftValP=-800;
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable3_30  ;; 0xfffffce0
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    544              }
    545              //左电机D分量
    546              SpeedLeftValD +=  (SpeedTargetLeftVal - SpeedNowLeft) - (SpeedLastTargetLeftVal - SpeedLastLeft);
   \                     ??MotorPID_9: (+1)
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable3_31
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000001BE   0x8809             LDRH     R1,[R1, #+0]
   \   000001C0   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   000001C8   0x8809             LDRH     R1,[R1, #+0]
   \   000001CA   0x1A40             SUBS     R0,R0,R1
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable3_21
   \   000001D0   0x8809             LDRH     R1,[R1, #+0]
   \   000001D2   0x1A40             SUBS     R0,R0,R1
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable3_32
   \   000001D8   0x8809             LDRH     R1,[R1, #+0]
   \   000001DA   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable3_31
   \   000001E2   0x6008             STR      R0,[R1, #+0]
    547              
    548              //左电机输入值。/////////////////////////////////////////////////增量式！！
    549              SpeedLeftVal = (speed_kp*SpeedLeftValP +speed_kd* SpeedLeftValD*10)/100;
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   000001EE   0x6809             LDR      R1,[R1, #+0]
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable3_25
   \   000001F4   0x6812             LDR      R2,[R2, #+0]
   \   000001F6   0x.... 0x....      LDR.W    R3,??DataTable3_31
   \   000001FA   0x681B             LDR      R3,[R3, #+0]
   \   000001FC   0x435A             MULS     R2,R3,R2
   \   000001FE   0x230A             MOVS     R3,#+10
   \   00000200   0x435A             MULS     R2,R3,R2
   \   00000202   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000206   0x2164             MOVS     R1,#+100
   \   00000208   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000020C   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   00000210   0x6008             STR      R0,[R1, #+0]
    550             
    551              //左电机输入值的限幅。
    552              if(SpeedLeftVal >= MotorPIDMax)
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable3_33
   \   00000216   0x6800             LDR      R0,[R0, #+0]
   \   00000218   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000021C   0xDB05             BLT.N    ??MotorPID_10
    553              {
    554                SpeedLeftVal = MotorPIDMax;
   \   0000021E   0xF44F 0x70FA      MOV      R0,#+500
   \   00000222   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   00000226   0x6008             STR      R0,[R1, #+0]
   \   00000228   0xE00B             B.N      ??MotorPID_11
    555              }
    556              else if(SpeedLeftVal <= MotorPIDMin)
   \                     ??MotorPID_10: (+1)
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable3_33
   \   0000022E   0x6800             LDR      R0,[R0, #+0]
   \   00000230   0xF47F 0x7195      MVNS     R1,#+298
   \   00000234   0x4288             CMP      R0,R1
   \   00000236   0xDA04             BGE.N    ??MotorPID_11
    557              {
    558                SpeedLeftVal = MotorPIDMin;
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable3_34  ;; 0xfffffed4
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   00000240   0x6008             STR      R0,[R1, #+0]
    559              }
    560              else
    561              {
    562                
    563              }
    564              
    565                
    566              //计算右电机应输入的值。
    567              //储存为上一次右电机的目标速度
    568              SpeedLastTargetRightVal = SpeedTargetRightVal;
   \                     ??MotorPID_11: (+1)
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   00000246   0x8800             LDRH     R0,[R0, #+0]
   \   00000248   0x.... 0x....      LDR.W    R1,??DataTable3_36
   \   0000024C   0x8008             STRH     R0,[R1, #+0]
    569              //右电机差速
    570              if(SpeedDiffGetSwitch == 1)
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable3_22
   \   00000252   0x7800             LDRB     R0,[R0, #+0]
   \   00000254   0x2801             CMP      R0,#+1
   \   00000256   0xD119             BNE.N    ??MotorPID_12
    571              {
    572                SpeedTargetRightVal = SpeedDiffGet(SpeedTargetVal, 1);  
   \   00000258   0x2101             MOVS     R1,#+1
   \   0000025A   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000025E   0x6800             LDR      R0,[R0, #+0]
   \   00000260   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000262   0x.... 0x....      BL       SpeedDiffGet
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   0000026A   0x8008             STRH     R0,[R1, #+0]
    573                SpeedTargetRightVal=(SpeedTargetRightVal*9+SpeedLastTargetRightVal*1)/10;
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   00000270   0x8800             LDRH     R0,[R0, #+0]
   \   00000272   0x2109             MOVS     R1,#+9
   \   00000274   0x.... 0x....      LDR.W    R2,??DataTable3_36
   \   00000278   0x8812             LDRH     R2,[R2, #+0]
   \   0000027A   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000027E   0x210A             MOVS     R1,#+10
   \   00000280   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000284   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   00000288   0x8008             STRH     R0,[R1, #+0]
   \   0000028A   0xE005             B.N      ??MotorPID_13
    574              }
    575              else
    576              {
    577                SpeedTargetRightVal = SpeedTargetVal;
   \                     ??MotorPID_12: (+1)
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   00000290   0x6800             LDR      R0,[R0, #+0]
   \   00000292   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   00000296   0x8008             STRH     R0,[R1, #+0]
    578              }
    579              
    580                temp_speed_bias=AbsInt (SpeedTargetRightVal - SpeedNowRight);
   \                     ??MotorPID_13: (+1)
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   0000029C   0x8800             LDRH     R0,[R0, #+0]
   \   0000029E   0x.... 0x....      LDR.W    R1,??DataTable3_37
   \   000002A2   0x8809             LDRH     R1,[R1, #+0]
   \   000002A4   0x1A40             SUBS     R0,R0,R1
   \   000002A6   0x.... 0x....      BL       AbsInt
    581              
    582              
    583              speed_kd=SpeedPIDDVal;
   \   000002AA   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000002AE   0x8800             LDRH     R0,[R0, #+0]
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable3_25
   \   000002B4   0x6008             STR      R0,[R1, #+0]
    584              //右电机P分量
    585              speed_kp=0;
   \   000002B6   0x2000             MOVS     R0,#+0
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   000002BC   0x6008             STR      R0,[R1, #+0]
    586              
    587               for(i = 0;i < 11; i++)
   \   000002BE   0x2000             MOVS     R0,#+0
   \   000002C0   0xE011             B.N      ??MotorPID_14
    588              {
    589                speed_kp += DeviFusemtr[i] * speedP_goal[i];      
   \                     ??MotorPID_15: (+1)
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   000002C6   0x6809             LDR      R1,[R1, #+0]
   \   000002C8   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   000002CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002CE   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   000002D2   0x.... 0x....      LDR.W    R3,??DataTable3_27
   \   000002D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002D8   0x5CC3             LDRB     R3,[R0, R3]
   \   000002DA   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000002DE   0x.... 0x....      LDR.W    R2,??DataTable3_26
   \   000002E2   0x6011             STR      R1,[R2, #+0]
    590              }
   \   000002E4   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_14: (+1)
   \   000002E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002E8   0x280B             CMP      R0,#+11
   \   000002EA   0xDBEA             BLT.N    ??MotorPID_15
    591              speed_kp = speed_kp / 1000;
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   000002F0   0x6800             LDR      R0,[R0, #+0]
   \   000002F2   0xF44F 0x717A      MOV      R1,#+1000
   \   000002F6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002FA   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   000002FE   0x6008             STR      R0,[R1, #+0]
    592              SpeedPIDPVal=speed_kp;
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable3_28
   \   0000030A   0x8008             STRH     R0,[R1, #+0]
    593              //speed_kp=SpeedPIDPVal;         //修改过
    594              SpeedRightValP +=  SpeedTargetRightVal - SpeedNowRight;
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable3_38
   \   00000310   0x6800             LDR      R0,[R0, #+0]
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   00000316   0x8809             LDRH     R1,[R1, #+0]
   \   00000318   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable3_37
   \   00000320   0x8809             LDRH     R1,[R1, #+0]
   \   00000322   0x1A40             SUBS     R0,R0,R1
   \   00000324   0x.... 0x....      LDR.W    R1,??DataTable3_38
   \   00000328   0x6008             STR      R0,[R1, #+0]
    595          
    596               //积分限幅
    597              if(SpeedRightValP>800)
   \   0000032A   0x.... 0x....      LDR.W    R0,??DataTable3_38
   \   0000032E   0x6800             LDR      R0,[R0, #+0]
   \   00000330   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000334   0xDD05             BLE.N    ??MotorPID_16
    598              {
    599                SpeedRightValP=800;
   \   00000336   0xF44F 0x7048      MOV      R0,#+800
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable3_38
   \   0000033E   0x6008             STR      R0,[R1, #+0]
   \   00000340   0xE00A             B.N      ??MotorPID_17
    600              }
    601              else if(SpeedRightValP<-800)
   \                     ??MotorPID_16: (+1)
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable3_38
   \   00000346   0x6800             LDR      R0,[R0, #+0]
   \   00000348   0xF510 0x7F48      CMN      R0,#+800
   \   0000034C   0xDA04             BGE.N    ??MotorPID_17
    602              {
    603                 SpeedRightValP=-800;
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable3_30  ;; 0xfffffce0
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable3_38
   \   00000356   0x6008             STR      R0,[R1, #+0]
    604              }
    605              //右电机D分量
    606              SpeedRightValD +=   ((SpeedTargetRightVal - SpeedNowRight) - (SpeedLastTargetRightVal - SpeedLastRight));
   \                     ??MotorPID_17: (+1)
   \   00000358   0x.... 0x....      LDR.W    R0,??DataTable3_39
   \   0000035C   0x6800             LDR      R0,[R0, #+0]
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   00000362   0x8809             LDRH     R1,[R1, #+0]
   \   00000364   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00000368   0x.... 0x....      LDR.W    R1,??DataTable3_37
   \   0000036C   0x8809             LDRH     R1,[R1, #+0]
   \   0000036E   0x1A40             SUBS     R0,R0,R1
   \   00000370   0x.... 0x....      LDR.W    R1,??DataTable3_36
   \   00000374   0x8809             LDRH     R1,[R1, #+0]
   \   00000376   0x1A40             SUBS     R0,R0,R1
   \   00000378   0x.... 0x....      LDR.W    R1,??DataTable3_40
   \   0000037C   0x8809             LDRH     R1,[R1, #+0]
   \   0000037E   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00000382   0x.... 0x....      LDR.W    R1,??DataTable3_39
   \   00000386   0x6008             STR      R0,[R1, #+0]
    607              //右电机输入值。/////////////////////////////////////////////////增量式！！
    608              SpeedRightVal = (speed_kp *SpeedRightValP/10 + speed_kd*SpeedRightValD);
   \   00000388   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   0000038C   0x6800             LDR      R0,[R0, #+0]
   \   0000038E   0x.... 0x....      LDR.W    R1,??DataTable3_38
   \   00000392   0x6809             LDR      R1,[R1, #+0]
   \   00000394   0x4348             MULS     R0,R1,R0
   \   00000396   0x210A             MOVS     R1,#+10
   \   00000398   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000039C   0x.... 0x....      LDR.W    R1,??DataTable3_25
   \   000003A0   0x6809             LDR      R1,[R1, #+0]
   \   000003A2   0x.... 0x....      LDR.W    R2,??DataTable3_39
   \   000003A6   0x6812             LDR      R2,[R2, #+0]
   \   000003A8   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000003AC   0x.... 0x....      LDR.W    R1,??DataTable3_41
   \   000003B0   0x6008             STR      R0,[R1, #+0]
    609              //右电机输入值的限幅。
    610              if(SpeedRightVal >= MotorPIDMax)
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable3_41
   \   000003B6   0x6800             LDR      R0,[R0, #+0]
   \   000003B8   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000003BC   0xDB05             BLT.N    ??MotorPID_18
    611              {
    612                SpeedRightVal = MotorPIDMax;
   \   000003BE   0xF44F 0x70FA      MOV      R0,#+500
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable3_41
   \   000003C6   0x6008             STR      R0,[R1, #+0]
   \   000003C8   0xE00B             B.N      ??MotorPID_19
    613              }
    614              else if(SpeedRightVal <= MotorPIDMin)
   \                     ??MotorPID_18: (+1)
   \   000003CA   0x.... 0x....      LDR.W    R0,??DataTable3_41
   \   000003CE   0x6800             LDR      R0,[R0, #+0]
   \   000003D0   0xF47F 0x7195      MVNS     R1,#+298
   \   000003D4   0x4288             CMP      R0,R1
   \   000003D6   0xDA04             BGE.N    ??MotorPID_19
    615              {
    616                SpeedRightVal = MotorPIDMin;
   \   000003D8   0x.... 0x....      LDR.W    R0,??DataTable3_34  ;; 0xfffffed4
   \   000003DC   0x.... 0x....      LDR.W    R1,??DataTable3_41
   \   000003E0   0x6008             STR      R0,[R1, #+0]
    617              }
    618              else
    619              {
    620              }
    621              
    622              //两轮速度都超过起飞阈值后，就转为正常的电机PID控制。
    623              if(SpeedNowLeft > MotorTakeOffQuadCountLimit)// && SpeedNowRight > MotorTakeOffQuadCountLimit
   \                     ??MotorPID_19: (+1)
   \   000003E2   0x.... 0x....      LDR.W    R0,??DataTable3_42
   \   000003E6   0x8800             LDRH     R0,[R0, #+0]
   \   000003E8   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   000003EC   0x8809             LDRH     R1,[R1, #+0]
   \   000003EE   0x4288             CMP      R0,R1
   \   000003F0   0xD204             BCS.N    ??MotorPID_20
    624              {
    625                MotorTakeOffFlag = 0;
   \   000003F2   0x2000             MOVS     R0,#+0
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable3_15
   \   000003F8   0x7008             STRB     R0,[R1, #+0]
   \   000003FA   0xE211             B.N      ??MotorPID_21
    626              }
    627              else
    628              {
    629                //没达到起飞脉冲数，则持续输出很高的速度。
    630                SpeedLeftVal = MotorTakeOffNum;
   \                     ??MotorPID_20: (+1)
   \   000003FC   0xF44F 0x70FA      MOV      R0,#+500
   \   00000400   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   00000404   0x6008             STR      R0,[R1, #+0]
    631                SpeedRightVal = MotorTakeOffNum;
   \   00000406   0xF44F 0x70FA      MOV      R0,#+500
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable3_41
   \   0000040E   0x6008             STR      R0,[R1, #+0]
   \   00000410   0xE206             B.N      ??MotorPID_21
    632              }
    633              
    634              
    635              
    636            }
    637            //以下是起飞后的电机控制
    638            else
    639            {
    640              //偏差等级的获取
    641              DeviFuseLevel = AbsInt(DeviFuse) / 10;
   \                     ??MotorPID_0: (+1)
   \   00000412   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   00000416   0x6800             LDR      R0,[R0, #+0]
   \   00000418   0x.... 0x....      BL       AbsInt
   \   0000041C   0x210A             MOVS     R1,#+10
   \   0000041E   0xFB90 0xF0F1      SDIV     R0,R0,R1
    642              if(DeviFuseLevel > 8)
   \   00000422   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000424   0x2809             CMP      R0,#+9
   \   00000426   0xDB00             BLT.N    ??MotorPID_22
    643              {
    644                //偏差等级的修正
    645                DeviFuseLevel = 9;
   \   00000428   0x2009             MOVS     R0,#+9
    646              }
    647              else
    648              { 
    649              }
    650              
    651              
    652              //模糊求取平均目标脉冲数
    653              SpeedTargetVal = 0;
   \                     ??MotorPID_22: (+1)
   \   0000042A   0x2000             MOVS     R0,#+0
   \   0000042C   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000430   0x6008             STR      R0,[R1, #+0]
    654          //    if(StopFlag==0)
    655          //    {
    656                  for(i = 0;i < 11; i++)
   \   00000432   0x2000             MOVS     R0,#+0
   \   00000434   0xE012             B.N      ??MotorPID_23
    657                 {
    658          //          for(j=0;j <9 ;j++)
    659          //          {
    660          //             SpeedTargetVal += DeviFusemtr[i]*DeviFuse_dotmtr[j] * SpeedTargetMat[i][j]/1000;      
    661          //          } 
    662                   SpeedTargetVal += DeviFusemtr[i] * SpeedTargetMat[0][i]; 
   \                     ??MotorPID_24: (+1)
   \   00000436   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   0000043A   0x6809             LDR      R1,[R1, #+0]
   \   0000043C   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   00000440   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000442   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000446   0x.... 0x....      LDR.W    R3,??DataTable3_19
   \   0000044A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000044C   0xF833 0x3010      LDRH     R3,[R3, R0, LSL #+1]
   \   00000450   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000454   0x.... 0x....      LDR.W    R2,??DataTable3_17
   \   00000458   0x6011             STR      R1,[R2, #+0]
    663                  }
   \   0000045A   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_23: (+1)
   \   0000045C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000045E   0x280B             CMP      R0,#+11
   \   00000460   0xDBE9             BLT.N    ??MotorPID_24
    664                 SpeedTargetVal = SpeedTargetVal / 1000;
   \   00000462   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   00000466   0x6800             LDR      R0,[R0, #+0]
   \   00000468   0xF44F 0x717A      MOV      R1,#+1000
   \   0000046C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000470   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000474   0x6008             STR      R0,[R1, #+0]
    665          //    }
    666          //    else
    667          //    {
    668          //      //停车，目标速度置零
    669          //    }
    670          
    671            
    672              //特殊赛道时，平均目标速度的特殊处理。
    673              SpeedTargetVal = SpeedTargetValSpePathDeal(SpeedTargetVal);
   \   00000476   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000047A   0x6800             LDR      R0,[R0, #+0]
   \   0000047C   0x.... 0x....      BL       SpeedTargetValSpePathDeal
   \   00000480   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   00000484   0x6008             STR      R0,[R1, #+0]
    674              
    675              //停车时的速度控制
    676              if(StopLineControlFlag==1 && StopRealFlag==0)
   \   00000486   0x.... 0x....      LDR.W    R0,??DataTable3_43
   \   0000048A   0x7800             LDRB     R0,[R0, #+0]
   \   0000048C   0x2801             CMP      R0,#+1
   \   0000048E   0xD14D             BNE.N    ??MotorPID_25
   \   00000490   0x.... 0x....      LDR.W    R0,??DataTable3_44
   \   00000494   0x7800             LDRB     R0,[R0, #+0]
   \   00000496   0x2800             CMP      R0,#+0
   \   00000498   0xD148             BNE.N    ??MotorPID_25
    677              {
    678                  if(StopLineSpeed == 0)
   \   0000049A   0x.... 0x....      LDR.W    R0,??DataTable3_45
   \   0000049E   0x8800             LDRH     R0,[R0, #+0]
   \   000004A0   0x2800             CMP      R0,#+0
   \   000004A2   0xD10F             BNE.N    ??MotorPID_26
    679                  {
    680                      StopLineSpeed = SpeedTargetVal - 10;
   \   000004A4   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000004A8   0x6800             LDR      R0,[R0, #+0]
   \   000004AA   0x380A             SUBS     R0,R0,#+10
   \   000004AC   0x.... 0x....      LDR.W    R1,??DataTable3_45
   \   000004B0   0x8008             STRH     R0,[R1, #+0]
    681                      StopLineSpeedControlPauseFlag = 1 - StopLineSpeedControlPauseFlag;
   \   000004B2   0x.... 0x....      LDR.W    R0,??DataTable3_46
   \   000004B6   0x7800             LDRB     R0,[R0, #+0]
   \   000004B8   0xF1D0 0x0001      RSBS     R0,R0,#+1
   \   000004BC   0x.... 0x....      LDR.W    R1,??DataTable3_46
   \   000004C0   0x7008             STRB     R0,[R1, #+0]
   \   000004C2   0xE025             B.N      ??MotorPID_27
    682                  } 
    683                  else if(SpeedNowLeft < 50)
   \                     ??MotorPID_26: (+1)
   \   000004C4   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   000004C8   0x8800             LDRH     R0,[R0, #+0]
   \   000004CA   0x2832             CMP      R0,#+50
   \   000004CC   0xDA08             BGE.N    ??MotorPID_28
    684                  {
    685                      StopRealFlag = 1;
   \   000004CE   0x2001             MOVS     R0,#+1
   \   000004D0   0x.... 0x....      LDR.W    R1,??DataTable3_44
   \   000004D4   0x7008             STRB     R0,[R1, #+0]
    686                      StopLineSpeedControlPauseFlag = 1;
   \   000004D6   0x2001             MOVS     R0,#+1
   \   000004D8   0x.... 0x....      LDR.W    R1,??DataTable3_46
   \   000004DC   0x7008             STRB     R0,[R1, #+0]
   \   000004DE   0xE017             B.N      ??MotorPID_27
    687                  }
    688                  else
    689                  {
    690                      StopLineSpeed -= 10;
   \                     ??MotorPID_28: (+1)
   \   000004E0   0x.... 0x....      LDR.W    R0,??DataTable3_45
   \   000004E4   0x8800             LDRH     R0,[R0, #+0]
   \   000004E6   0x380A             SUBS     R0,R0,#+10
   \   000004E8   0x.... 0x....      LDR.W    R1,??DataTable3_45
   \   000004EC   0x8008             STRH     R0,[R1, #+0]
    691                      if(StopLineSpeed<50)
   \   000004EE   0x.... 0x....      LDR.W    R0,??DataTable3_45
   \   000004F2   0x8800             LDRH     R0,[R0, #+0]
   \   000004F4   0x2832             CMP      R0,#+50
   \   000004F6   0xDA03             BGE.N    ??MotorPID_29
    692                      {
    693                          StopLineSpeed = 50;
   \   000004F8   0x2032             MOVS     R0,#+50
   \   000004FA   0x.... 0x....      LDR.W    R1,??DataTable3_45
   \   000004FE   0x8008             STRH     R0,[R1, #+0]
    694                      }
    695                      StopLineSpeedControlPauseFlag = 1 - StopLineSpeedControlPauseFlag;
   \                     ??MotorPID_29: (+1)
   \   00000500   0x.... 0x....      LDR.W    R0,??DataTable3_46
   \   00000504   0x7800             LDRB     R0,[R0, #+0]
   \   00000506   0xF1D0 0x0001      RSBS     R0,R0,#+1
   \   0000050A   0x.... 0x....      LDR.W    R1,??DataTable3_46
   \   0000050E   0x7008             STRB     R0,[R1, #+0]
    696                  }
    697                  SpeedTargetVal = StopLineSpeed;
   \                     ??MotorPID_27: (+1)
   \   00000510   0x.... 0x....      LDR.W    R0,??DataTable3_45
   \   00000514   0x8800             LDRH     R0,[R0, #+0]
   \   00000516   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   0000051A   0x6008             STR      R0,[R1, #+0]
    698                  //提前把驱动板的使能去掉，便于加反电压
    699                  FTM0_C4V = 0;
   \   0000051C   0x2000             MOVS     R0,#+0
   \   0000051E   0x.... 0x....      LDR.W    R1,??DataTable3_47  ;; 0x40038030
   \   00000522   0x6008             STR      R0,[R1, #+0]
    700                  FTM0_C5V = 0;
   \   00000524   0x2000             MOVS     R0,#+0
   \   00000526   0x.... 0x....      LDR.W    R1,??DataTable3_48  ;; 0x40038038
   \   0000052A   0x6008             STR      R0,[R1, #+0]
    701              }
    702              
    703              
    704               //计算左电机应输入的值。
    705              //储存为上一次左电机的目标速度
    706              SpeedLastTargetLeftVal = SpeedTargetLeftVal;
   \                     ??MotorPID_25: (+1)
   \   0000052C   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   00000530   0x8800             LDRH     R0,[R0, #+0]
   \   00000532   0x.... 0x....      LDR.W    R1,??DataTable3_21
   \   00000536   0x8008             STRH     R0,[R1, #+0]
    707              //左电机差速
    708              if(0)//if(SpeedDiffGetSwitch == 1)
    709              {
    710                SpeedTargetLeftVal = SpeedDiffGet(SpeedTargetVal, 0);   
    711                SpeedTargetLeftVal=(SpeedTargetLeftVal*9+SpeedLastTargetLeftVal*1)/10;
    712              }
    713              else
    714              {
    715                SpeedTargetLeftVal = SpeedTargetVal;
   \   00000538   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000053C   0x6800             LDR      R0,[R0, #+0]
   \   0000053E   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000542   0x8008             STRH     R0,[R1, #+0]
    716                SpeedTargetLeftVal=(SpeedTargetLeftVal*9+SpeedLastTargetLeftVal*1)/10;
   \   00000544   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   00000548   0x8800             LDRH     R0,[R0, #+0]
   \   0000054A   0x2109             MOVS     R1,#+9
   \   0000054C   0x.... 0x....      LDR.W    R2,??DataTable3_21
   \   00000550   0x8812             LDRH     R2,[R2, #+0]
   \   00000552   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000556   0x210A             MOVS     R1,#+10
   \   00000558   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000055C   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000560   0x8008             STRH     R0,[R1, #+0]
    717              }
    718              
    719              //如果堵转的话就停下(需要编码器，刚开始做车的阶段关闭)
    720              /*if(SpeedNowLeft<50)
    721              {
    722                  StopFlagMaxCount++;
    723                  if(StopFlagMaxCount >= 12)
    724                  {
    725                     DuZhuanFlag = 1;
    726                  }
    727              }
    728              else
    729              {
    730                  StopFlagMaxCount = 0;
    731              }*/
    732              
    733              //左电机D分量
    734              temp_speed_bias= SpeedTargetLeftVal - SpeedNowLeft;
   \   00000562   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \   00000566   0x8800             LDRH     R0,[R0, #+0]
   \   00000568   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   0000056C   0x8809             LDRH     R1,[R1, #+0]
   \   0000056E   0x1A40             SUBS     R0,R0,R1
    735               speed_kd=SpeedPIDDVal;
   \   00000570   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000574   0x8800             LDRH     R0,[R0, #+0]
   \   00000576   0x.... 0x....      LDR.W    R1,??DataTable3_25
   \   0000057A   0x6008             STR      R0,[R1, #+0]
    736              
    737              speed_kp=0;
   \   0000057C   0x2000             MOVS     R0,#+0
   \   0000057E   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000582   0x6008             STR      R0,[R1, #+0]
    738               for(i = 0;i < 11; i++)
   \   00000584   0x2000             MOVS     R0,#+0
   \   00000586   0xE011             B.N      ??MotorPID_30
    739              {
    740                speed_kp += DeviFusemtr[i] * speedP_goal[i];      
   \                     ??MotorPID_31: (+1)
   \   00000588   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   0000058C   0x6809             LDR      R1,[R1, #+0]
   \   0000058E   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   00000592   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000594   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000598   0x.... 0x....      LDR.W    R3,??DataTable3_27
   \   0000059C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000059E   0x5CC3             LDRB     R3,[R0, R3]
   \   000005A0   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000005A4   0x.... 0x....      LDR.W    R2,??DataTable3_26
   \   000005A8   0x6011             STR      R1,[R2, #+0]
    741              }
   \   000005AA   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_30: (+1)
   \   000005AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005AE   0x280B             CMP      R0,#+11
   \   000005B0   0xDBEA             BLT.N    ??MotorPID_31
    742              speed_kp = speed_kp / 1000;
   \   000005B2   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   000005B6   0x6800             LDR      R0,[R0, #+0]
   \   000005B8   0xF44F 0x717A      MOV      R1,#+1000
   \   000005BC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000005C0   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   000005C4   0x6008             STR      R0,[R1, #+0]
    743              
    744          
    745              speed_kp=SpeedPIDPVal;
   \   000005C6   0x.... 0x....      LDR.W    R0,??DataTable3_28
   \   000005CA   0x8800             LDRH     R0,[R0, #+0]
   \   000005CC   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   000005D0   0x6008             STR      R0,[R1, #+0]
    746              SpeedLeftValP +=SpeedTargetLeftVal - SpeedNowLeft;
   \   000005D2   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000005D6   0x6800             LDR      R0,[R0, #+0]
   \   000005D8   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   000005DC   0x8809             LDRH     R1,[R1, #+0]
   \   000005DE   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   000005E2   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   000005E6   0x8809             LDRH     R1,[R1, #+0]
   \   000005E8   0x1A40             SUBS     R0,R0,R1
   \   000005EA   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   000005EE   0x6008             STR      R0,[R1, #+0]
    747             
    748                //积分限幅
    749              if(SpeedLeftValP>800)
   \   000005F0   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000005F4   0x6800             LDR      R0,[R0, #+0]
   \   000005F6   0xF5B0 0x7F48      CMP      R0,#+800
   \   000005FA   0xDD05             BLE.N    ??MotorPID_32
    750              {
    751                SpeedLeftValP=800;
   \   000005FC   0xF44F 0x7048      MOV      R0,#+800
   \   00000600   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   00000604   0x6008             STR      R0,[R1, #+0]
   \   00000606   0xE00A             B.N      ??MotorPID_33
    752              }
    753              else if(SpeedLeftValP<-800)
   \                     ??MotorPID_32: (+1)
   \   00000608   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   0000060C   0x6800             LDR      R0,[R0, #+0]
   \   0000060E   0xF510 0x7F48      CMN      R0,#+800
   \   00000612   0xDA04             BGE.N    ??MotorPID_33
    754              {
    755                 SpeedLeftValP=-800;
   \   00000614   0x.... 0x....      LDR.W    R0,??DataTable3_30  ;; 0xfffffce0
   \   00000618   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   0000061C   0x6008             STR      R0,[R1, #+0]
    756              }
    757              
    758              //左电机D分量
    759              SpeedLeftValD +=  (SpeedTargetLeftVal - SpeedNowLeft) - (SpeedLastTargetLeftVal - SpeedLastLeft);
   \                     ??MotorPID_33: (+1)
   \   0000061E   0x.... 0x....      LDR.W    R0,??DataTable3_31
   \   00000622   0x6800             LDR      R0,[R0, #+0]
   \   00000624   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000628   0x8809             LDRH     R1,[R1, #+0]
   \   0000062A   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   0000062E   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   00000632   0x8809             LDRH     R1,[R1, #+0]
   \   00000634   0x1A40             SUBS     R0,R0,R1
   \   00000636   0x.... 0x....      LDR.W    R1,??DataTable3_21
   \   0000063A   0x8809             LDRH     R1,[R1, #+0]
   \   0000063C   0x1A40             SUBS     R0,R0,R1
   \   0000063E   0x.... 0x....      LDR.W    R1,??DataTable3_32
   \   00000642   0x8809             LDRH     R1,[R1, #+0]
   \   00000644   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00000648   0x.... 0x....      LDR.W    R1,??DataTable3_31
   \   0000064C   0x6008             STR      R0,[R1, #+0]
    760              
    761              //左电机输入值。/////////////////////////////////////////////////增量式！！
    762              SpeedLeftVal = (speed_kp*SpeedLeftValP +speed_kd* SpeedLeftValD*10)/100;
   \   0000064E   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   00000652   0x6800             LDR      R0,[R0, #+0]
   \   00000654   0x.... 0x....      LDR.W    R1,??DataTable3_29
   \   00000658   0x6809             LDR      R1,[R1, #+0]
   \   0000065A   0x.... 0x....      LDR.W    R2,??DataTable3_25
   \   0000065E   0x6812             LDR      R2,[R2, #+0]
   \   00000660   0x.... 0x....      LDR.W    R3,??DataTable3_31
   \   00000664   0x681B             LDR      R3,[R3, #+0]
   \   00000666   0x435A             MULS     R2,R3,R2
   \   00000668   0x230A             MOVS     R3,#+10
   \   0000066A   0x435A             MULS     R2,R3,R2
   \   0000066C   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000670   0x2164             MOVS     R1,#+100
   \   00000672   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000676   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   0000067A   0x6008             STR      R0,[R1, #+0]
    763             
    764              //左电机输入值的限幅。
    765              if(SpeedLeftVal >= MotorPIDMax)
   \   0000067C   0x.... 0x....      LDR.W    R0,??DataTable3_33
   \   00000680   0x6800             LDR      R0,[R0, #+0]
   \   00000682   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000686   0xDB05             BLT.N    ??MotorPID_34
    766              {
    767                SpeedLeftVal = MotorPIDMax;
   \   00000688   0xF44F 0x70FA      MOV      R0,#+500
   \   0000068C   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   00000690   0x6008             STR      R0,[R1, #+0]
   \   00000692   0xE00B             B.N      ??MotorPID_35
    768              }
    769              else if(SpeedLeftVal <= MotorPIDMin)
   \                     ??MotorPID_34: (+1)
   \   00000694   0x.... 0x....      LDR.W    R0,??DataTable3_33
   \   00000698   0x6800             LDR      R0,[R0, #+0]
   \   0000069A   0xF47F 0x7195      MVNS     R1,#+298
   \   0000069E   0x4288             CMP      R0,R1
   \   000006A0   0xDA04             BGE.N    ??MotorPID_35
    770              {
    771                SpeedLeftVal = MotorPIDMin;
   \   000006A2   0x.... 0x....      LDR.W    R0,??DataTable3_34  ;; 0xfffffed4
   \   000006A6   0x.... 0x....      LDR.W    R1,??DataTable3_33
   \   000006AA   0x6008             STR      R0,[R1, #+0]
    772              }
    773              else
    774              {
    775                
    776              }
    777          
    778             
    779                
    780              //计算右电机应输入的值。
    781              //储存为上一次右电机的目标速度
    782              SpeedLastTargetRightVal = SpeedTargetRightVal;
   \                     ??MotorPID_35: (+1)
   \   000006AC   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   000006B0   0x8800             LDRH     R0,[R0, #+0]
   \   000006B2   0x.... 0x....      LDR.W    R1,??DataTable3_36
   \   000006B6   0x8008             STRH     R0,[R1, #+0]
    783              //右电机差速
    784              if(SpeedDiffGetSwitch == 1)
   \   000006B8   0x.... 0x....      LDR.W    R0,??DataTable3_22
   \   000006BC   0x7800             LDRB     R0,[R0, #+0]
   \   000006BE   0x2801             CMP      R0,#+1
   \   000006C0   0xD119             BNE.N    ??MotorPID_36
    785              {
    786                SpeedTargetRightVal = SpeedDiffGet(SpeedTargetVal, 1);   
   \   000006C2   0x2101             MOVS     R1,#+1
   \   000006C4   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000006C8   0x6800             LDR      R0,[R0, #+0]
   \   000006CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000006CC   0x.... 0x....      BL       SpeedDiffGet
   \   000006D0   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   000006D4   0x8008             STRH     R0,[R1, #+0]
    787                SpeedTargetRightVal=(SpeedTargetRightVal*9+SpeedLastTargetRightVal*1)/10;
   \   000006D6   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   000006DA   0x8800             LDRH     R0,[R0, #+0]
   \   000006DC   0x2109             MOVS     R1,#+9
   \   000006DE   0x.... 0x....      LDR.W    R2,??DataTable3_36
   \   000006E2   0x8812             LDRH     R2,[R2, #+0]
   \   000006E4   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000006E8   0x210A             MOVS     R1,#+10
   \   000006EA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000006EE   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   000006F2   0x8008             STRH     R0,[R1, #+0]
   \   000006F4   0xE005             B.N      ??MotorPID_37
    788              }
    789              else
    790              {
    791                SpeedTargetRightVal = SpeedTargetVal; 
   \                     ??MotorPID_36: (+1)
   \   000006F6   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   000006FA   0x6800             LDR      R0,[R0, #+0]
   \   000006FC   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   00000700   0x8008             STRH     R0,[R1, #+0]
    792              }
    793              //右电机P分量
    794               temp_speed_bias=SpeedTargetRightVal - SpeedNowRight;
   \                     ??MotorPID_37: (+1)
   \   00000702   0x.... 0x....      LDR.W    R0,??DataTable3_35
   \   00000706   0x8800             LDRH     R0,[R0, #+0]
   \   00000708   0x.... 0x....      LDR.W    R1,??DataTable3_37
   \   0000070C   0x8809             LDRH     R1,[R1, #+0]
   \   0000070E   0x1A40             SUBS     R0,R0,R1
    795           
    796              speed_kd=SpeedPIDDVal;
   \   00000710   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000714   0x8800             LDRH     R0,[R0, #+0]
   \   00000716   0x.... 0x....      LDR.W    R1,??DataTable3_25
   \   0000071A   0x6008             STR      R0,[R1, #+0]
    797                speed_kp=0;
   \   0000071C   0x2000             MOVS     R0,#+0
   \   0000071E   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000722   0x6008             STR      R0,[R1, #+0]
    798               for(i = 0;i < 11; i++)
   \   00000724   0x2000             MOVS     R0,#+0
   \   00000726   0xE011             B.N      ??MotorPID_38
    799              {
    800                speed_kp += DeviFusemtr[i] * speedP_goal[i];      
   \                     ??MotorPID_39: (+1)
   \   00000728   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   0000072C   0x6809             LDR      R1,[R1, #+0]
   \   0000072E   0x.... 0x....      LDR.W    R2,??DataTable3_18
   \   00000732   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000734   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000738   0x.... 0x....      LDR.W    R3,??DataTable3_27
   \   0000073C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000073E   0x5CC3             LDRB     R3,[R0, R3]
   \   00000740   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000744   0x.... 0x....      LDR.W    R2,??DataTable3_26
   \   00000748   0x6011             STR      R1,[R2, #+0]
    801              }
   \   0000074A   0x1C40             ADDS     R0,R0,#+1
   \                     ??MotorPID_38: (+1)
   \   0000074C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000074E   0x280B             CMP      R0,#+11
   \   00000750   0xDBEA             BLT.N    ??MotorPID_39
    802              speed_kp = speed_kp / 1000;
   \   00000752   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   00000756   0x6800             LDR      R0,[R0, #+0]
   \   00000758   0xF44F 0x717A      MOV      R1,#+1000
   \   0000075C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000760   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000764   0x6008             STR      R0,[R1, #+0]
    803             
    804                speed_kp=SpeedPIDPVal;
   \   00000766   0x.... 0x....      LDR.W    R0,??DataTable3_28
   \   0000076A   0x8800             LDRH     R0,[R0, #+0]
   \   0000076C   0x.... 0x....      LDR.W    R1,??DataTable3_26
   \   00000770   0x6008             STR      R0,[R1, #+0]
    805               SpeedRightValP +=  SpeedTargetRightVal - SpeedNowRight;
   \   00000772   0x.... 0x....      LDR.W    R0,??DataTable3_38
   \   00000776   0x6800             LDR      R0,[R0, #+0]
   \   00000778   0x.... 0x....      LDR.W    R1,??DataTable3_35
   \   0000077C   0x8809             LDRH     R1,[R1, #+0]
   \   0000077E   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00000782   0x.... 0x....      LDR.W    R1,??DataTable3_37
   \   00000786   0x8809             LDRH     R1,[R1, #+0]
   \   00000788   0x1A40             SUBS     R0,R0,R1
   \   0000078A   0x.... 0x....      LDR.W    R1,??DataTable3_38
   \   0000078E   0x6008             STR      R0,[R1, #+0]
    806          
    807               //积分限幅
    808              if(SpeedRightValP>800)
   \   00000790   0x.... 0x....      LDR.W    R0,??DataTable3_38
   \   00000794   0x6800             LDR      R0,[R0, #+0]
   \   00000796   0xF5B0 0x7F48      CMP      R0,#+800
   \   0000079A   0xDD04             BLE.N    ??MotorPID_40
    809              {
    810                SpeedRightValP=800;
   \   0000079C   0xF44F 0x7048      MOV      R0,#+800
   \   000007A0   0x....             LDR.N    R1,??DataTable3_38
   \   000007A2   0x6008             STR      R0,[R1, #+0]
   \   000007A4   0xE007             B.N      ??MotorPID_41
    811              }
    812              else if(SpeedRightValP<-800)
   \                     ??MotorPID_40: (+1)
   \   000007A6   0x....             LDR.N    R0,??DataTable3_38
   \   000007A8   0x6800             LDR      R0,[R0, #+0]
   \   000007AA   0xF510 0x7F48      CMN      R0,#+800
   \   000007AE   0xDA02             BGE.N    ??MotorPID_41
    813              {
    814                 SpeedRightValP=-800;
   \   000007B0   0x....             LDR.N    R0,??DataTable3_30  ;; 0xfffffce0
   \   000007B2   0x....             LDR.N    R1,??DataTable3_38
   \   000007B4   0x6008             STR      R0,[R1, #+0]
    815              }
    816              //右电机D分量
    817              SpeedRightValD +=  ((SpeedTargetRightVal - SpeedNowRight) - (SpeedLastTargetRightVal - SpeedLastRight));
   \                     ??MotorPID_41: (+1)
   \   000007B6   0x....             LDR.N    R0,??DataTable3_39
   \   000007B8   0x6800             LDR      R0,[R0, #+0]
   \   000007BA   0x....             LDR.N    R1,??DataTable3_35
   \   000007BC   0x8809             LDRH     R1,[R1, #+0]
   \   000007BE   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   000007C2   0x....             LDR.N    R1,??DataTable3_37
   \   000007C4   0x8809             LDRH     R1,[R1, #+0]
   \   000007C6   0x1A40             SUBS     R0,R0,R1
   \   000007C8   0x....             LDR.N    R1,??DataTable3_36
   \   000007CA   0x8809             LDRH     R1,[R1, #+0]
   \   000007CC   0x1A40             SUBS     R0,R0,R1
   \   000007CE   0x....             LDR.N    R1,??DataTable3_40
   \   000007D0   0x8809             LDRH     R1,[R1, #+0]
   \   000007D2   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   000007D6   0x....             LDR.N    R1,??DataTable3_39
   \   000007D8   0x6008             STR      R0,[R1, #+0]
    818              //右电机输入值。/////////////////////////////////////////////////增量式！！
    819              SpeedRightVal = (speed_kp *SpeedRightValP/10 + speed_kd*SpeedRightValD);
   \   000007DA   0x....             LDR.N    R0,??DataTable3_26
   \   000007DC   0x6800             LDR      R0,[R0, #+0]
   \   000007DE   0x....             LDR.N    R1,??DataTable3_38
   \   000007E0   0x6809             LDR      R1,[R1, #+0]
   \   000007E2   0x4348             MULS     R0,R1,R0
   \   000007E4   0x210A             MOVS     R1,#+10
   \   000007E6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000007EA   0x....             LDR.N    R1,??DataTable3_25
   \   000007EC   0x6809             LDR      R1,[R1, #+0]
   \   000007EE   0x....             LDR.N    R2,??DataTable3_39
   \   000007F0   0x6812             LDR      R2,[R2, #+0]
   \   000007F2   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000007F6   0x....             LDR.N    R1,??DataTable3_41
   \   000007F8   0x6008             STR      R0,[R1, #+0]
    820              
    821              //右电机输入值的限幅。
    822              if(SpeedRightVal >= MotorPIDMax)
   \   000007FA   0x....             LDR.N    R0,??DataTable3_41
   \   000007FC   0x6800             LDR      R0,[R0, #+0]
   \   000007FE   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000802   0xDB04             BLT.N    ??MotorPID_42
    823              {
    824                SpeedRightVal = MotorPIDMax;
   \   00000804   0xF44F 0x70FA      MOV      R0,#+500
   \   00000808   0x....             LDR.N    R1,??DataTable3_41
   \   0000080A   0x6008             STR      R0,[R1, #+0]
   \   0000080C   0xE008             B.N      ??MotorPID_21
    825              }
    826              else if(SpeedRightVal <= MotorPIDMin)
   \                     ??MotorPID_42: (+1)
   \   0000080E   0x....             LDR.N    R0,??DataTable3_41
   \   00000810   0x6800             LDR      R0,[R0, #+0]
   \   00000812   0xF47F 0x7195      MVNS     R1,#+298
   \   00000816   0x4288             CMP      R0,R1
   \   00000818   0xDA02             BGE.N    ??MotorPID_21
    827              {
    828                SpeedRightVal = MotorPIDMin;
   \   0000081A   0x....             LDR.N    R0,??DataTable3_34  ;; 0xfffffed4
   \   0000081C   0x....             LDR.N    R1,??DataTable3_41
   \   0000081E   0x6008             STR      R0,[R1, #+0]
    829              }
    830              else
    831              {
    832                
    833              }
    834          
    835            }
    836          
    837                if(StopFlag == 1)   //确认完全停车后，输出为0
   \                     ??MotorPID_21: (+1)
   \   00000820   0x....             LDR.N    R0,??DataTable3_3
   \   00000822   0x7800             LDRB     R0,[R0, #+0]
   \   00000824   0x2801             CMP      R0,#+1
   \   00000826   0xD117             BNE.N    ??MotorPID_43
    838                {
    839                    //停车保险计数
    840                    StopFlagMaxCount++;
   \   00000828   0x....             LDR.N    R0,??DataTable3_49
   \   0000082A   0x8800             LDRH     R0,[R0, #+0]
   \   0000082C   0x1C40             ADDS     R0,R0,#+1
   \   0000082E   0x....             LDR.N    R1,??DataTable3_49
   \   00000830   0x8008             STRH     R0,[R1, #+0]
    841                    //int32 speed;//车的中心速度，两轮速度的平均值
    842                   //左右轮任何一个轮子速度低于某值，或到一定时间，则完全停车，停下电机。
    843                   if(SpeedNowLeft < 20 || SpeedNowRight < 20 || StopFlagMaxCount > StopFlagMaxCountNum * 6) //16ms进来一次，乘以6表示以0.1s为单位。
   \   00000832   0x....             LDR.N    R0,??DataTable3_23
   \   00000834   0x8800             LDRH     R0,[R0, #+0]
   \   00000836   0x2814             CMP      R0,#+20
   \   00000838   0xDB0B             BLT.N    ??MotorPID_44
   \   0000083A   0x....             LDR.N    R0,??DataTable3_37
   \   0000083C   0x8800             LDRH     R0,[R0, #+0]
   \   0000083E   0x2814             CMP      R0,#+20
   \   00000840   0xDB07             BLT.N    ??MotorPID_44
   \   00000842   0x....             LDR.N    R0,??DataTable3_50
   \   00000844   0x8800             LDRH     R0,[R0, #+0]
   \   00000846   0x2106             MOVS     R1,#+6
   \   00000848   0x4348             MULS     R0,R1,R0
   \   0000084A   0x....             LDR.N    R1,??DataTable3_49
   \   0000084C   0x8809             LDRH     R1,[R1, #+0]
   \   0000084E   0x4288             CMP      R0,R1
   \   00000850   0xDA02             BGE.N    ??MotorPID_43
    844                   {
    845                     StopRealFlag = 1;//完全停车，停下电机      
   \                     ??MotorPID_44: (+1)
   \   00000852   0x2001             MOVS     R0,#+1
   \   00000854   0x....             LDR.N    R1,??DataTable3_44
   \   00000856   0x7008             STRB     R0,[R1, #+0]
    846                   }
    847                   else
    848                   {      
    849                   }      
    850                }
    851                else
    852                {
    853                }  
    854            
    855                if(StopRealFlag == 0)
   \                     ??MotorPID_43: (+1)
   \   00000858   0x....             LDR.N    R0,??DataTable3_44
   \   0000085A   0x7800             LDRB     R0,[R0, #+0]
   \   0000085C   0x2800             CMP      R0,#+0
   \   0000085E   0xD167             BNE.N    ??MotorPID_45
    856                {
    857                  if(StopLineCheckFlag==1 && DuZhuanFlag==0 && TimeOutFlag==0 && RunOutFlag==0 && StopLineControlFlag == 0)
   \   00000860   0x....             LDR.N    R0,??DataTable3_51
   \   00000862   0x7800             LDRB     R0,[R0, #+0]
   \   00000864   0x2801             CMP      R0,#+1
   \   00000866   0xD11A             BNE.N    ??MotorPID_46
   \   00000868   0x....             LDR.N    R0,??DataTable3_52
   \   0000086A   0x7800             LDRB     R0,[R0, #+0]
   \   0000086C   0x2800             CMP      R0,#+0
   \   0000086E   0xD116             BNE.N    ??MotorPID_46
   \   00000870   0x....             LDR.N    R0,??DataTable3_53
   \   00000872   0x7800             LDRB     R0,[R0, #+0]
   \   00000874   0x2800             CMP      R0,#+0
   \   00000876   0xD112             BNE.N    ??MotorPID_46
   \   00000878   0x....             LDR.N    R0,??DataTable3_54
   \   0000087A   0x7800             LDRB     R0,[R0, #+0]
   \   0000087C   0x2800             CMP      R0,#+0
   \   0000087E   0xD10E             BNE.N    ??MotorPID_46
   \   00000880   0x....             LDR.N    R0,??DataTable3_43
   \   00000882   0x7800             LDRB     R0,[R0, #+0]
   \   00000884   0x2800             CMP      R0,#+0
   \   00000886   0xD10A             BNE.N    ??MotorPID_46
    858                  {
    859                      StopLineControlFlag = 1;LCD_CLS();LCD_P8x16Str(12,3,"StopLine");
   \   00000888   0x2001             MOVS     R0,#+1
   \   0000088A   0x....             LDR.N    R1,??DataTable3_43
   \   0000088C   0x7008             STRB     R0,[R1, #+0]
   \   0000088E   0x.... 0x....      BL       LCD_CLS
   \   00000892   0x....             LDR.N    R2,??DataTable3_55
   \   00000894   0x2103             MOVS     R1,#+3
   \   00000896   0x200C             MOVS     R0,#+12
   \   00000898   0x.... 0x....      BL       LCD_P8x16Str
   \   0000089C   0xE048             B.N      ??MotorPID_45
    860                  }
    861                  else if(DuZhuanFlag==1 && StopLineCheckFlag==0 && TimeOutFlag==0 && RunOutFlag==0){StopRealFlag = 1;LCD_CLS();LCD_P8x16Str(12,3,"DuZhuan");}
   \                     ??MotorPID_46: (+1)
   \   0000089E   0x....             LDR.N    R0,??DataTable3_52
   \   000008A0   0x7800             LDRB     R0,[R0, #+0]
   \   000008A2   0x2801             CMP      R0,#+1
   \   000008A4   0xD116             BNE.N    ??MotorPID_47
   \   000008A6   0x....             LDR.N    R0,??DataTable3_51
   \   000008A8   0x7800             LDRB     R0,[R0, #+0]
   \   000008AA   0x2800             CMP      R0,#+0
   \   000008AC   0xD112             BNE.N    ??MotorPID_47
   \   000008AE   0x....             LDR.N    R0,??DataTable3_53
   \   000008B0   0x7800             LDRB     R0,[R0, #+0]
   \   000008B2   0x2800             CMP      R0,#+0
   \   000008B4   0xD10E             BNE.N    ??MotorPID_47
   \   000008B6   0x....             LDR.N    R0,??DataTable3_54
   \   000008B8   0x7800             LDRB     R0,[R0, #+0]
   \   000008BA   0x2800             CMP      R0,#+0
   \   000008BC   0xD10A             BNE.N    ??MotorPID_47
   \   000008BE   0x2001             MOVS     R0,#+1
   \   000008C0   0x....             LDR.N    R1,??DataTable3_44
   \   000008C2   0x7008             STRB     R0,[R1, #+0]
   \   000008C4   0x.... 0x....      BL       LCD_CLS
   \   000008C8   0x....             LDR.N    R2,??DataTable3_56
   \   000008CA   0x2103             MOVS     R1,#+3
   \   000008CC   0x200C             MOVS     R0,#+12
   \   000008CE   0x.... 0x....      BL       LCD_P8x16Str
   \   000008D2   0xE02D             B.N      ??MotorPID_45
    862                  else if(DuZhuanFlag==0 && StopLineCheckFlag==0 && TimeOutFlag==1 &&  RunOutFlag==0){StopRealFlag = 1;}
   \                     ??MotorPID_47: (+1)
   \   000008D4   0x....             LDR.N    R0,??DataTable3_52
   \   000008D6   0x7800             LDRB     R0,[R0, #+0]
   \   000008D8   0x2800             CMP      R0,#+0
   \   000008DA   0xD10F             BNE.N    ??MotorPID_48
   \   000008DC   0x....             LDR.N    R0,??DataTable3_51
   \   000008DE   0x7800             LDRB     R0,[R0, #+0]
   \   000008E0   0x2800             CMP      R0,#+0
   \   000008E2   0xD10B             BNE.N    ??MotorPID_48
   \   000008E4   0x....             LDR.N    R0,??DataTable3_53
   \   000008E6   0x7800             LDRB     R0,[R0, #+0]
   \   000008E8   0x2801             CMP      R0,#+1
   \   000008EA   0xD107             BNE.N    ??MotorPID_48
   \   000008EC   0x....             LDR.N    R0,??DataTable3_54
   \   000008EE   0x7800             LDRB     R0,[R0, #+0]
   \   000008F0   0x2800             CMP      R0,#+0
   \   000008F2   0xD103             BNE.N    ??MotorPID_48
   \   000008F4   0x2001             MOVS     R0,#+1
   \   000008F6   0x....             LDR.N    R1,??DataTable3_44
   \   000008F8   0x7008             STRB     R0,[R1, #+0]
   \   000008FA   0xE019             B.N      ??MotorPID_45
    863                  else if(DuZhuanFlag==0 && StopLineCheckFlag==0 && TimeOutFlag==0 &&  RunOutFlag==1){StopRealFlag = 1;LCD_CLS();LCD_P8x16Str(12,3,"RunOut");}
   \                     ??MotorPID_48: (+1)
   \   000008FC   0x....             LDR.N    R0,??DataTable3_52
   \   000008FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000900   0x2800             CMP      R0,#+0
   \   00000902   0xD115             BNE.N    ??MotorPID_45
   \   00000904   0x....             LDR.N    R0,??DataTable3_51
   \   00000906   0x7800             LDRB     R0,[R0, #+0]
   \   00000908   0x2800             CMP      R0,#+0
   \   0000090A   0xD111             BNE.N    ??MotorPID_45
   \   0000090C   0x....             LDR.N    R0,??DataTable3_53
   \   0000090E   0x7800             LDRB     R0,[R0, #+0]
   \   00000910   0x2800             CMP      R0,#+0
   \   00000912   0xD10D             BNE.N    ??MotorPID_45
   \   00000914   0x....             LDR.N    R0,??DataTable3_54
   \   00000916   0x7800             LDRB     R0,[R0, #+0]
   \   00000918   0x2801             CMP      R0,#+1
   \   0000091A   0xD109             BNE.N    ??MotorPID_45
   \   0000091C   0x2001             MOVS     R0,#+1
   \   0000091E   0x....             LDR.N    R1,??DataTable3_44
   \   00000920   0x7008             STRB     R0,[R1, #+0]
   \   00000922   0x.... 0x....      BL       LCD_CLS
   \   00000926   0x....             LDR.N    R2,??DataTable3_57
   \   00000928   0x2103             MOVS     R1,#+3
   \   0000092A   0x200C             MOVS     R0,#+12
   \   0000092C   0x.... 0x....      BL       LCD_P8x16Str
    864                }
    865                if(StopRealFlag == 1)
   \                     ??MotorPID_45: (+1)
   \   00000930   0x....             LDR.N    R0,??DataTable3_44
   \   00000932   0x7800             LDRB     R0,[R0, #+0]
   \   00000934   0x2801             CMP      R0,#+1
   \   00000936   0xD10C             BNE.N    ??MotorPID_49
    866                {
    867                  FTM0_C4V = 0;
   \   00000938   0x2000             MOVS     R0,#+0
   \   0000093A   0x....             LDR.N    R1,??DataTable3_47  ;; 0x40038030
   \   0000093C   0x6008             STR      R0,[R1, #+0]
    868                  FTM0_C5V = 0;
   \   0000093E   0x2000             MOVS     R0,#+0
   \   00000940   0x....             LDR.N    R1,??DataTable3_48  ;; 0x40038038
   \   00000942   0x6008             STR      R0,[R1, #+0]
    869                  FTM0_C6V = 0;
   \   00000944   0x2000             MOVS     R0,#+0
   \   00000946   0x....             LDR.N    R1,??DataTable3_58  ;; 0x40038040
   \   00000948   0x6008             STR      R0,[R1, #+0]
    870                  FTM0_C7V = 0;
   \   0000094A   0x2000             MOVS     R0,#+0
   \   0000094C   0x....             LDR.N    R1,??DataTable3_59  ;; 0x40038048
   \   0000094E   0x6008             STR      R0,[R1, #+0]
   \   00000950   0xE055             B.N      ??MotorPID_50
    871                }
    872                else
    873                {
    874                  //赋值给电机实际对应的I/O口。
    875                  if(SpeedLeftVal>0)
   \                     ??MotorPID_49: (+1)
   \   00000952   0x....             LDR.N    R0,??DataTable3_33
   \   00000954   0x6800             LDR      R0,[R0, #+0]
   \   00000956   0x2801             CMP      R0,#+1
   \   00000958   0xDB13             BLT.N    ??MotorPID_51
    876                  {
    877                   // FTM0_C4V = 100;
    878                   //FTM0_C5V = 100;
    879                   FTM0_C5V = 300;
   \   0000095A   0xF44F 0x7096      MOV      R0,#+300
   \   0000095E   0x....             LDR.N    R1,??DataTable3_48  ;; 0x40038038
   \   00000960   0x6008             STR      R0,[R1, #+0]
    880                   FTM0_C4V = 100;//SpeedLeftVal;
   \   00000962   0x2064             MOVS     R0,#+100
   \   00000964   0x....             LDR.N    R1,??DataTable3_47  ;; 0x40038030
   \   00000966   0x6008             STR      R0,[R1, #+0]
    881              
    882                    if(StopLineSpeedControlPauseFlag == 1)
   \   00000968   0x....             LDR.N    R0,??DataTable3_46
   \   0000096A   0x7800             LDRB     R0,[R0, #+0]
   \   0000096C   0x2801             CMP      R0,#+1
   \   0000096E   0xD11B             BNE.N    ??MotorPID_52
    883                    {
    884                      FTM0_C4V = 1000;
   \   00000970   0xF44F 0x707A      MOV      R0,#+1000
   \   00000974   0x....             LDR.N    R1,??DataTable3_47  ;; 0x40038030
   \   00000976   0x6008             STR      R0,[R1, #+0]
    885                      FTM0_C5V = 1000;
   \   00000978   0xF44F 0x707A      MOV      R0,#+1000
   \   0000097C   0x....             LDR.N    R1,??DataTable3_48  ;; 0x40038038
   \   0000097E   0x6008             STR      R0,[R1, #+0]
   \   00000980   0xE012             B.N      ??MotorPID_52
    886                    }
    887                  }
    888                  else
    889                  {
    890                    
    891                   // FTM0_C4V = 100;
    892                   // FTM0_C5V = 100;
    893                    FTM0_C5V = 300;
   \                     ??MotorPID_51: (+1)
   \   00000982   0xF44F 0x7096      MOV      R0,#+300
   \   00000986   0x....             LDR.N    R1,??DataTable3_48  ;; 0x40038038
   \   00000988   0x6008             STR      R0,[R1, #+0]
    894                    FTM0_C4V = 100;//0-SpeedLeftVal;          
   \   0000098A   0x2064             MOVS     R0,#+100
   \   0000098C   0x....             LDR.N    R1,??DataTable3_47  ;; 0x40038030
   \   0000098E   0x6008             STR      R0,[R1, #+0]
    895                    if(StopLineSpeedControlPauseFlag == 1)
   \   00000990   0x....             LDR.N    R0,??DataTable3_46
   \   00000992   0x7800             LDRB     R0,[R0, #+0]
   \   00000994   0x2801             CMP      R0,#+1
   \   00000996   0xD107             BNE.N    ??MotorPID_52
    896                    {
    897                      FTM0_C4V = 1000;
   \   00000998   0xF44F 0x707A      MOV      R0,#+1000
   \   0000099C   0x....             LDR.N    R1,??DataTable3_47  ;; 0x40038030
   \   0000099E   0x6008             STR      R0,[R1, #+0]
    898                      FTM0_C5V = 1000;          
   \   000009A0   0xF44F 0x707A      MOV      R0,#+1000
   \   000009A4   0x....             LDR.N    R1,??DataTable3_48  ;; 0x40038038
   \   000009A6   0x6008             STR      R0,[R1, #+0]
    899                    }
    900                  }
    901                  
    902                  if(SpeedRightVal>0)
   \                     ??MotorPID_52: (+1)
   \   000009A8   0x....             LDR.N    R0,??DataTable3_41
   \   000009AA   0x6800             LDR      R0,[R0, #+0]
   \   000009AC   0x2801             CMP      R0,#+1
   \   000009AE   0xDB13             BLT.N    ??MotorPID_53
    903                  {
    904                       
    905                  // FTM0_C7V = 100;        
    906                   // FTM0_C6V = 100;
    907                    FTM0_C6V = 300;        
   \   000009B0   0xF44F 0x7096      MOV      R0,#+300
   \   000009B4   0x....             LDR.N    R1,??DataTable3_58  ;; 0x40038040
   \   000009B6   0x6008             STR      R0,[R1, #+0]
    908                    FTM0_C7V = 100;//SpeedRightVal;
   \   000009B8   0x2064             MOVS     R0,#+100
   \   000009BA   0x....             LDR.N    R1,??DataTable3_59  ;; 0x40038048
   \   000009BC   0x6008             STR      R0,[R1, #+0]
    909                    if(StopLineSpeedControlPauseFlag == 1)
   \   000009BE   0x....             LDR.N    R0,??DataTable3_46
   \   000009C0   0x7800             LDRB     R0,[R0, #+0]
   \   000009C2   0x2801             CMP      R0,#+1
   \   000009C4   0xD11B             BNE.N    ??MotorPID_50
    910                    {
    911                      FTM0_C6V = 1000;
   \   000009C6   0xF44F 0x707A      MOV      R0,#+1000
   \   000009CA   0x....             LDR.N    R1,??DataTable3_58  ;; 0x40038040
   \   000009CC   0x6008             STR      R0,[R1, #+0]
    912                      FTM0_C7V = 1000;
   \   000009CE   0xF44F 0x707A      MOV      R0,#+1000
   \   000009D2   0x....             LDR.N    R1,??DataTable3_59  ;; 0x40038048
   \   000009D4   0x6008             STR      R0,[R1, #+0]
   \   000009D6   0xE012             B.N      ??MotorPID_50
    913                    }
    914                    //FTM0_C6V = SpeedRightVal;
    915                    //FTM0_C7V = 0;  
    916                  }
    917                  else
    918                  {
    919                       
    920                    //FTM0_C7V = 100;        
    921                   // FTM0_C6V = 100;
    922                   FTM0_C7V = 100;//0-SpeedRightVal;        
   \                     ??MotorPID_53: (+1)
   \   000009D8   0x2064             MOVS     R0,#+100
   \   000009DA   0x....             LDR.N    R1,??DataTable3_59  ;; 0x40038048
   \   000009DC   0x6008             STR      R0,[R1, #+0]
    923                    FTM0_C6V = 300;
   \   000009DE   0xF44F 0x7096      MOV      R0,#+300
   \   000009E2   0x....             LDR.N    R1,??DataTable3_58  ;; 0x40038040
   \   000009E4   0x6008             STR      R0,[R1, #+0]
    924                    if(StopLineSpeedControlPauseFlag == 1)
   \   000009E6   0x....             LDR.N    R0,??DataTable3_46
   \   000009E8   0x7800             LDRB     R0,[R0, #+0]
   \   000009EA   0x2801             CMP      R0,#+1
   \   000009EC   0xD107             BNE.N    ??MotorPID_50
    925                    {
    926                      FTM0_C6V = 1000;
   \   000009EE   0xF44F 0x707A      MOV      R0,#+1000
   \   000009F2   0x....             LDR.N    R1,??DataTable3_58  ;; 0x40038040
   \   000009F4   0x6008             STR      R0,[R1, #+0]
    927                      FTM0_C7V = 1000;
   \   000009F6   0xF44F 0x707A      MOV      R0,#+1000
   \   000009FA   0x....             LDR.N    R1,??DataTable3_59  ;; 0x40038048
   \   000009FC   0x6008             STR      R0,[R1, #+0]
    928                    }
    929                    //FTM0_C6V = 0;
    930                    //FTM0_C7V = 0-SpeedRightVal;   
    931                  }
    932                }
    933            return 1;
   \                     ??MotorPID_50: (+1)
   \   000009FE   0x2001             MOVS     R0,#+1
   \   00000A00   0xBD02             POP      {R1,PC}          ;; return
    934          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     DeviFuse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     DeviFuse_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Steer_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ServoPIDP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ServoPIDInputValP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     DeviPre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ServoPIDDMat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ServoPIDD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ServoPIDD2Mat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ServoPIDInputValD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ServoPIDInputVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ServoPIDInputValOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ShiZhiFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ServoTemp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     DeltaVelocity

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     StopFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     BrickConfirmLockFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     BrickSpeDealFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     SpeedBrick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     GyroResultFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     SpeedTargetValGryoUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     SpeedTargetValGryoResult

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     PathRealStraightFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     SpeedTargetValStraight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     xiaoZhiDaoFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     SpeedXiaoZhiDao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     ErrorCountNow1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     MotorTakeOffFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     DeviFuse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     SpeedTargetVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     DeviFusemtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     SpeedTargetMat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     SpeedTargetLeftVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     SpeedLastTargetLeftVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     SpeedDiffGetSwitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     SpeedNowLeft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     SpeedPIDDVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     speed_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     speedP_goal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x........         DC32     SpeedPIDPVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x........         DC32     SpeedLeftValP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0xFFFFFCE0         DC32     0xfffffce0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     SpeedLeftValD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     SpeedLastLeft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0x........         DC32     SpeedLeftVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \   00000000   0xFFFFFED4         DC32     0xfffffed4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \   00000000   0x........         DC32     SpeedTargetRightVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_36:
   \   00000000   0x........         DC32     SpeedLastTargetRightVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_37:
   \   00000000   0x........         DC32     SpeedNowRight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_38:
   \   00000000   0x........         DC32     SpeedRightValP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_39:
   \   00000000   0x........         DC32     SpeedRightValD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_40:
   \   00000000   0x........         DC32     SpeedLastRight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_41:
   \   00000000   0x........         DC32     SpeedRightVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_42:
   \   00000000   0x........         DC32     MotorTakeOffQuadCountLimit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_43:
   \   00000000   0x........         DC32     StopLineControlFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_44:
   \   00000000   0x........         DC32     StopRealFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_45:
   \   00000000   0x........         DC32     StopLineSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_46:
   \   00000000   0x........         DC32     StopLineSpeedControlPauseFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_47:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_48:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_49:
   \   00000000   0x........         DC32     StopFlagMaxCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_50:
   \   00000000   0x........         DC32     StopFlagMaxCountNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_51:
   \   00000000   0x........         DC32     StopLineCheckFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_52:
   \   00000000   0x........         DC32     DuZhuanFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_53:
   \   00000000   0x........         DC32     TimeOutFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_54:
   \   00000000   0x........         DC32     RunOutFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_55:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_56:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_57:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_58:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_59:
   \   00000000   0x40038048         DC32     0x40038048

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x53 0x74          DC8 "StopLine"
   \              0x6F 0x70    
   \              0x4C 0x69    
   \              0x6E 0x65    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x44 0x75          DC8 "DuZhuan"
   \              0x5A 0x68    
   \              0x75 0x61    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x52 0x75          DC8 "RunOut"
   \              0x6E 0x4F    
   \              0x75 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0
    935          
    936          
    937          
    938          
    939          
    940          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MotorPID
         8   -> AbsInt
         8   -> LCD_CLS
         8   -> LCD_P8x16Str
         8   -> SpeedDiffGet
         8   -> SpeedTargetValSpePathDeal
      16   ServoPID
        16   -> AbsInt
        16   -> BrickSpeDealServor
      16   SpeedDiffGet
        16   -> AbsInt
       0   SpeedTargetValSpePathDeal


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_36
       4  ??DataTable3_37
       4  ??DataTable3_38
       4  ??DataTable3_39
       4  ??DataTable3_4
       4  ??DataTable3_40
       4  ??DataTable3_41
       4  ??DataTable3_42
       4  ??DataTable3_43
       4  ??DataTable3_44
       4  ??DataTable3_45
       4  ??DataTable3_46
       4  ??DataTable3_47
       4  ??DataTable3_48
       4  ??DataTable3_49
       4  ??DataTable3_5
       4  ??DataTable3_50
       4  ??DataTable3_51
       4  ??DataTable3_52
       4  ??DataTable3_53
       4  ??DataTable3_54
       4  ??DataTable3_55
       4  ??DataTable3_56
       4  ??DataTable3_57
       4  ??DataTable3_58
       4  ??DataTable3_59
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      12  ?_0
       8  ?_1
       8  ?_2
       4  DeltaVelocity
       1  DoneFlag
       1  DuZhuanFlag
       2  ErrorCountNow0
       2  ErrorCountNow1
    2562  MotorPID
      12  MotorPIDPMat
       1  MotorTakeOffFlag
       2  MotorTakeOffQuadCountLimit
       1  QuadSpeedLevel
     536  ServoPID
       2  ServoPIDD
      16  ServoPIDD2Mat
      16  ServoPIDDMat
       4  ServoPIDInputVal
       4  ServoPIDInputValD
       4  ServoPIDInputValOld
       4  ServoPIDInputValP
       2  ServoPIDP
      32  ServoPIDPMat
       4  ServoTemp
       1  SlopeCLevel
       2  SpeedBrick
     242  SpeedDiffGet
       1  SpeedDiffGetSwitch
       2  SpeedLastTargetLeftVal
       2  SpeedLastTargetRightVal
       4  SpeedLastTargetVal
       4  SpeedLeftVal
       4  SpeedLeftValD
       4  SpeedLeftValP
       2  SpeedPIDDVal
       2  SpeedPIDIVal
       2  SpeedPIDPVal
       4  SpeedRightVal
       4  SpeedRightValD
       4  SpeedRightValP
       2  SpeedStrategyChosen
       2  SpeedTargetLeftVal
       1  SpeedTargetLevel
     200  SpeedTargetMat
       2  SpeedTargetRightVal
       4  SpeedTargetVal
       1  SpeedTargetValAngle
       1  SpeedTargetValGryoResult
       2  SpeedTargetValGryoUp
     116  SpeedTargetValSpePathDeal
       2  SpeedTargetValStraight
       2  SpeedTargetValWaitStop
       2  SpeedXiaoZhiDao
      16  Steer_kp
       1  StopFlag
       2  StopFlagMaxCount
       2  StopFlagMaxCountNum
       1  StopLineControlFlag
       2  StopLineSpeed
       1  StopLineSpeedControlPauseFlag
       1  StopRealFlag
       1  StrategyLoadSpeedIndex
       1  TimeOutFlag
      12  speedP_goal
       4  speed_kd
       4  speed_kp
       4  temp_speed_D
       4  temp_speed_P
       2  temptempSpeedLeftVal

 
   105 bytes in section .bss
   330 bytes in section .data
    28 bytes in section .rodata
 3 752 bytes in section .text
 
 3 752 bytes of CODE  memory
    28 bytes of CONST memory
   435 bytes of DATA  memory

Errors: none
Warnings: 1
